{% from "../../macros/text-input.njk" import govukTextareaElement %}
{% from "../../macros/i18n.njk" import govukI18nAttributes %}
{% from "../error-message/macro.njk" import govukErrorMessage %}
{% from "../hint/macro.njk" import govukHint %}
{% from "../label/macro.njk" import govukLabel %}

{%- set hasNoLimit = (not params.maxwords and not params.maxlength) -%}
{#- a record of other elements that we need to associate with the input using
  aria-describedby â€“ for example hints or error messages -#}
{% set describedBy = params.describedBy if params.describedBy else "" %}

<div class="govuk-form-group {%- if params.errorMessage %} govuk-form-group--error{% endif %} {%- if params.formGroup.classes %} {{ params.formGroup.classes }}{% endif %}" {%- for attribute, value in params.formGroup.attributes %} {{ attribute }}="{{ value }}"{% endfor %}>
  {{ govukLabel({
    html: params.label.html,
    text: params.label.text,
    classes: params.label.classes,
    isPageHeading: params.label.isPageHeading,
    attributes: params.label.attributes,
    for: params.id
  }) | trim | indent(2) }}
{% if params.hint %}
  {% set hintId = params.id + '-hint' %}
  {% set describedBy = describedBy + ' ' + hintId if describedBy else hintId %}
  {{ govukHint({
    id: hintId,
    classes: params.hint.classes,
    attributes: params.hint.attributes,
    html: params.hint.html,
    text: params.hint.text
  }) | trim | indent(2) }}
{% endif %}
{% if params.errorMessage %}
  {% set errorId = params.id + '-error' %}
  {% set describedBy = describedBy + ' ' + errorId if describedBy else errorId %}
  {{ govukErrorMessage({
    id: errorId,
    classes: params.errorMessage.classes,
    attributes: params.errorMessage.attributes,
    html: params.errorMessage.html,
    text: params.errorMessage.text,
    visuallyHiddenText: params.errorMessage.visuallyHiddenText
  }) | trim | indent(2) }}
{% endif %}

  <div class="govuk-character-count" data-module="govuk-character-count"
    {%- if params.maxlength %} data-maxlength="{{ params.maxlength }}"{% endif %}
    {%- if params.threshold %} data-threshold="{{ params.threshold }}"{% endif %}
    {%- if params.maxwords %} data-maxwords="{{ params.maxwords }}"{% endif %}
    {#-
      Without maxlength or maxwords, we can't guess if the component will count words or characters.
      We can't guess a default textarea description to be interpolated in JavaScript
      once the maximum gets configured there.
      So we only add the attribute if a textarea description was explicitely provided.
    #}
    {%- if hasNoLimit and params.textareaDescriptionText %}
      {{- govukI18nAttributes({
        key: 'textarea-description',
        messages: { other: params.textareaDescriptionText }
      }) -}}
    {% endif -%}

    {{- govukI18nAttributes({
      key: 'characters-under-limit',
      messages: params.charactersUnderLimitText
    }) -}}

    {{- govukI18nAttributes({
      key: 'characters-at-limit',
      message: params.charactersAtLimitText
    }) -}}

    {{- govukI18nAttributes({
      key: 'characters-over-limit',
      messages: params.charactersOverLimitText
    }) -}}

    {{- govukI18nAttributes({
      key: 'words-under-limit',
      messages: params.wordsUnderLimitText
    }) -}}

    {{- govukI18nAttributes({
      key: 'words-at-limit',
      message: params.wordsAtLimitText
    }) -}}

    {{- govukI18nAttributes({
      key: 'words-over-limit',
      messages: params.wordsOverLimitText
    }) -}}>

    {{ govukTextareaElement({
      id: params.id,
      name: params.name,
      errorClass: params.errorMessage,
      describedBy: params.id + '-info' + (' ' + describedBy if describedBy),
      rows: params.rows,
      spellcheck: params.spellcheck,
      value: params.value,
      classes: 'govuk-js-character-count' + (' ' + params.classes if params.classes),
      attributes: params.attributes
    }) }}

    {%- set textareaDescriptionLength = params.maxwords or params.maxlength %}
    {%- set textareaDescriptionText = params.textareaDescriptionText or 'You can enter up to %{count} ' + ('words' if params.maxwords else 'characters') %}
    {#-
      If the limit is set in JavaScript, we won't be able to interpolate the message
      until JavaScript, so we only set a text if the `maxlength` or `maxwords` options
      were provided to the macro.
    #}
    {{ govukHint({
      text: ((textareaDescriptionText) | replace('%{count}', textareaDescriptionLength) if not hasNoLimit),
      id: params.id + '-info',
      classes: 'govuk-character-count__message' + (' ' + params.countMessage.classes if params.countMessage.classes)
    }) }}
  </div>

</div>
