{"version":3,"file":"all.bundle.js","sources":["../../src/govuk/common/govuk-frontend-version.mjs","../../src/govuk/common/index.mjs","../../src/govuk/common/normalise-dataset.mjs","../../src/govuk/errors/index.mjs","../../src/govuk/govuk-frontend-component.mjs","../../src/govuk/i18n.mjs","../../src/govuk/components/accordion/accordion.mjs","../../src/govuk/components/button/button.mjs","../../src/govuk/common/closest-attribute-value.mjs","../../src/govuk/components/character-count/character-count.mjs","../../src/govuk/components/checkboxes/checkboxes.mjs","../../src/govuk/components/error-summary/error-summary.mjs","../../src/govuk/components/exit-this-page/exit-this-page.mjs","../../src/govuk/components/header/header.mjs","../../src/govuk/components/notification-banner/notification-banner.mjs","../../src/govuk/components/radios/radios.mjs","../../src/govuk/components/skip-link/skip-link.mjs","../../src/govuk/components/tabs/tabs.mjs","../../src/govuk/all.mjs"],"sourcesContent":["/*\n * This variable is automatically overwritten during builds and releases.\n * It doesn't need to be updated manually.\n */\n\n/**\n * GOV.UK Frontend release version\n *\n * {@link https://github.com/alphagov/govuk-frontend/releases}\n */\nexport const version = 'development'\n","/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Config flattening function\n *\n * Takes any number of objects, flattens them into namespaced key-value pairs,\n * (e.g. \\{'i18n.showSection': 'Show section'\\}) and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @returns {{ [key: string]: unknown }} A flattened object of key-value pairs.\n */\nexport function mergeConfigs(/* configObject1, configObject2, ...configObjects */) {\n  /**\n   * Function to take nested objects and flatten them to a dot-separated keyed\n   * object. Doing this means we don't need to do any deep/recursive merging of\n   * each of our objects, nor transform our dataset from a flat list into a\n   * nested object.\n   *\n   * @internal\n   * @param {{ [key: string]: unknown }} configObject - Deeply nested object\n   * @returns {{ [key: string]: unknown }} Flattened object with dot-separated keys\n   */\n  const flattenObject = function (configObject) {\n    // Prepare an empty return object\n    /** @type {{ [key: string]: unknown }} */\n    const flattenedObject = {}\n\n    /**\n     * Our flattening function, this is called recursively for each level of\n     * depth in the object. At each level we prepend the previous level names to\n     * the key using `prefix`.\n     *\n     * @internal\n     * @param {Partial<{ [key: string]: unknown }>} obj - Object to flatten\n     * @param {string} [prefix] - Optional dot-separated prefix\n     */\n    const flattenLoop = function (obj, prefix) {\n      // Loop through keys...\n      for (const key in obj) {\n        // Check to see if this is a prototypical key/value,\n        // if it is, skip it.\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n          continue\n        }\n        const value = obj[key]\n        const prefixedKey = prefix ? `${prefix}.${key}` : key\n        if (typeof value === 'object') {\n          // If the value is a nested object, recurse over that too\n          flattenLoop(value, prefixedKey)\n        } else {\n          // Otherwise, add this value to our return object\n          flattenedObject[prefixedKey] = value\n        }\n      }\n    }\n\n    // Kick off the recursive loop\n    flattenLoop(configObject)\n    return flattenedObject\n  }\n\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the remaining passed objects and push their keys\n  // one-by-one into configObject. Any duplicate keys will override the existing\n  // key with the new value.\n  for (let i = 0; i < arguments.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- Ignore mismatch between arguments types\n    const obj = flattenObject(arguments[i])\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        formattedConfigObject[key] = obj[key]\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from a flattened config\n * object, removing the namespace in the process.\n *\n * @internal\n * @param {{ [key: string]: unknown }} configObject - The object to extract key-value pairs from.\n * @param {string} namespace - The namespace to filter keys with.\n * @returns {{ [key: string]: unknown }} Flattened object with dot-separated key namespace removed\n * @throws {Error} Config object required\n * @throws {Error} Namespace string required\n */\nexport function extractConfigByNamespace(configObject, namespace) {\n  // Check we have what we need\n  if (!configObject || typeof configObject !== 'object') {\n    throw new Error('Provide a `configObject` of type \"object\".')\n  }\n\n  if (!namespace || typeof namespace !== 'string') {\n    throw new Error(\n      'Provide a `namespace` of type \"string\" to filter the `configObject` by.'\n    )\n  }\n\n  /** @type {{ [key: string]: unknown }} */\n  const newObject = {}\n\n  for (const key in configObject) {\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n    // Check if the first namespace matches the configured namespace\n    if (\n      Object.prototype.hasOwnProperty.call(configObject, key) &&\n      keyParts[0] === namespace\n    ) {\n      // Remove the first item (the namespace) from the parts array,\n      // but only if there is more than one part (we don't want blank keys!)\n      if (keyParts.length > 1) {\n        keyParts.shift()\n      }\n      // Join the remaining parts back together\n      const newKey = keyParts.join('.')\n      // Add them to our new object\n      newObject[newKey] = configObject[key]\n    }\n  }\n  return newObject\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @internal\n * @param {HTMLElement} [$scope] - The `<body>` element of the document to check for support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Validate component config by schema\n *\n * @internal\n * @param {Schema} schema - Config schema\n * @param {Config[ConfigKey]} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    for (const { required, errorMessage } of conditions) {\n      if (!required.every((key) => !!config[key])) {\n        errors.push(errorMessage) // Missing config key value\n      }\n    }\n\n    // Check one condition passes or add errors\n    if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n      validationErrors.push(...errors)\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {SchemaCondition[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema condition for component config\n *\n * @typedef {object} SchemaCondition\n * @property {string[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @typedef {import('govuk-frontend').Config} Config - Config for all components via `initAll()`\n * @typedef {import('govuk-frontend').ConfigKey} ConfigKey - Component config keys, e.g. `accordion` and `characterCount`\n */\n","/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {string} value - The value to normalise\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value) {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const trimmedValue = value.trim()\n\n  if (trimmedValue === 'true') {\n    return true\n  }\n\n  if (trimmedValue === 'false') {\n    return false\n  }\n\n  // Empty / whitespace-only strings are considered finite so we need to check\n  // the length of the trimmed string as well\n  if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n    return Number(trimmedValue)\n  }\n\n  return value\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using normaliseData function\n *\n * @internal\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {{ [key: string]: unknown }} Normalised dataset\n */\nexport function normaliseDataset(dataset) {\n  /** @type {{ [key: string]: unknown }} */\n  const out = {}\n\n  for (const key in dataset) {\n    out[key] = normaliseString(dataset[key])\n  }\n\n  return out\n}\n","/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @abstract\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  // eslint-disable-next-line jsdoc/require-jsdoc -- Nothing pertinent to document\n  constructor() {\n    super('GOV.UK Frontend is not supported in this browser')\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @param {Element | null} element - The element in error\n   * @param {object} options - Element error options\n   * @param {string} options.componentName - The name of the component throwing the error\n   * @param {string} options.identifier - An identifier that'll let the user understand which element has an error (variable name, CSS selector)\n   * @param {string | typeof HTMLElement} [options.expectedType] - The type that was expected for the identifier\n   */\n  constructor(element, { componentName, identifier, expectedType }) {\n    let reason = `${identifier} not found`\n\n    // Otherwise check for type mismatch\n    if (element) {\n      expectedType = expectedType || window.HTMLElement\n\n      reason =\n        typeof expectedType === 'string'\n          ? `${identifier} is not of type ${expectedType}`\n          : `${identifier} is not an instance of ${expectedType.name}`\n    }\n\n    super(`${componentName}: ${reason}`)\n  }\n}\n","import { isSupported } from './common/index.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @internal\n * @abstract\n */\nexport class GOVUKFrontendComponent {\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   */\n  constructor() {\n    this.checkSupport()\n  }\n\n  /**\n   * Validates whether GOV.UK Frontend is supported\n   *\n   * @private\n   */\n  checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n","/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: unknown }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations, config) {\n    // Make list of translations available throughout function\n    this.translations = translations || {}\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale =\n      (config && config.locale) || document.documentElement.lang || 'en'\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (options && typeof options.count === 'number') {\n      // Get the plural suffix\n      lookupKey = `${lookupKey}.${this.getPluralSuffix(\n        lookupKey,\n        options.count\n      )}`\n    }\n\n    // Fetch the translation string for that lookup key\n    const translationString = this.translations[lookupKey]\n\n    if (typeof translationString === 'string') {\n      // Check for ${} placeholders in the translation string\n      if (translationString.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translationString, options)\n      } else {\n        return translationString\n      }\n    } else {\n      // If the key wasn't found in our translations object,\n      // return the lookup key itself as the fallback\n      return lookupKey\n    }\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    /** @type {Intl.NumberFormat | undefined} */\n    let formatter\n\n    if (this.hasIntlNumberFormatSupport()) {\n      formatter = new Intl.NumberFormat(this.locale)\n    }\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        } else {\n          throw new Error(\n            `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n          )\n        }\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl and Intl.PluralRules.\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The browser supports the Intl class (true in IE11)\n   * - The implementation of Intl supports PluralRules (NOT true in IE11)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      window.Intl &&\n        'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl and Intl.NumberFormat.\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The browser supports the Intl class (true in IE11)\n   * - The implementation of Intl supports NumberFormat (also true in IE11)\n   * - The browser/OS has number formatting rules for the current locale (browser dependent)\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlNumberFormatSupport() {\n    return Boolean(\n      window.Intl &&\n        'NumberFormat' in window.Intl &&\n        Intl.NumberFormat.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form â€“ if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    let preferredForm\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    if (this.hasIntlPluralRulesSupport()) {\n      preferredForm = new Intl.PluralRules(this.locale).select(count)\n    } else {\n      preferredForm = this.selectPluralFormUsingFallbackRules(count)\n    }\n\n    // Use the correct plural form if provided\n    if (`${lookupKey}.${preferredForm}` in this.translations) {\n      return preferredForm\n      // Fall back to `other` if the plural form is missing, but log a warning\n      // to the console\n    } else if (`${lookupKey}.other` in this.translations) {\n      if (console && 'warn' in console) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n      }\n\n      return 'other'\n      // If the required `other` plural form is missing, all we can do is error\n    } else {\n      throw new Error(\n        `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n      )\n    }\n  }\n\n  /**\n   * Get the plural form using our fallback implementation\n   *\n   * This is split out into a separate function to make it easier to test the\n   * fallback behaviour in an environment where Intl.PluralRules exists.\n   *\n   * @internal\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The pluralisation form for count in this locale.\n   */\n  selectPluralFormUsingFallbackRules(count) {\n    // Currently our custom code can only handle positive integers, so let's\n    // make sure our number is one of those.\n    count = Math.abs(Math.floor(count))\n\n    const ruleset = this.getPluralRulesForLocale()\n\n    if (ruleset) {\n      return I18n.pluralRules[ruleset](count)\n    }\n\n    return 'other'\n  }\n\n  /**\n   * Work out which pluralisation rules to use for the current locale\n   *\n   * The locale may include a regional indicator (such as en-GB), but we don't\n   * usually care about this part, as pluralisation rules are usually the same\n   * regardless of region. There are exceptions, however, (e.g. Portuguese) so\n   * this searches by both the full and shortened locale codes, just to be sure.\n   *\n   * @internal\n   * @returns {string | undefined} The name of the pluralisation rule to use (a key for one\n   *   of the functions in this.pluralRules)\n   */\n  getPluralRulesForLocale() {\n    const locale = this.locale\n    const localeShort = locale.split('-')[0]\n\n    // Look through the plural rules map to find which `pluralRule` is\n    // appropriate for our current `locale`.\n    for (const pluralRule in I18n.pluralRulesMap) {\n      if (\n        Object.prototype.hasOwnProperty.call(I18n.pluralRulesMap, pluralRule)\n      ) {\n        const languages = I18n.pluralRulesMap[pluralRule]\n        for (let i = 0; i < languages.length; i++) {\n          if (languages[i] === locale || languages[i] === localeShort) {\n            return pluralRule\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Map of plural rules to languages where those rules apply.\n   *\n   * Note: These groups are named for the most dominant or recognisable language\n   * that uses each system. The groupings do not imply that the languages are\n   * related to one another. Many languages have evolved the same systems\n   * independently of one another.\n   *\n   * Code to support more languages can be found in the i18n spike:\n   * {@link https://github.com/alphagov/govuk-frontend/blob/spike-i18n-support/src/govuk/i18n.mjs}\n   *\n   * Languages currently supported:\n   *\n   * Arabic: Arabic (ar)\n   * Chinese: Burmese (my), Chinese (zh), Indonesian (id), Japanese (ja),\n   *   Javanese (jv), Korean (ko), Malay (ms), Thai (th), Vietnamese (vi)\n   * French: Armenian (hy), Bangla (bn), French (fr), Gujarati (gu), Hindi (hi),\n   *   Persian Farsi (fa), Punjabi (pa), Zulu (zu)\n   * German: Afrikaans (af), Albanian (sq), Azerbaijani (az), Basque (eu),\n   *   Bulgarian (bg), Catalan (ca), Danish (da), Dutch (nl), English (en),\n   *   Estonian (et), Finnish (fi), Georgian (ka), German (de), Greek (el),\n   *   Hungarian (hu), Luxembourgish (lb), Norwegian (no), Somali (so),\n   *   Swahili (sw), Swedish (sv), Tamil (ta), Telugu (te), Turkish (tr),\n   *   Urdu (ur)\n   * Irish: Irish Gaelic (ga)\n   * Russian: Russian (ru), Ukrainian (uk)\n   * Scottish: Scottish Gaelic (gd)\n   * Spanish: European Portuguese (pt-PT), Italian (it), Spanish (es)\n   * Welsh: Welsh (cy)\n   *\n   * @internal\n   * @type {{ [key: string]: string[] }}\n   */\n  static pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: [\n      'af',\n      'sq',\n      'az',\n      'eu',\n      'bg',\n      'ca',\n      'da',\n      'nl',\n      'en',\n      'et',\n      'fi',\n      'ka',\n      'de',\n      'el',\n      'hu',\n      'lb',\n      'no',\n      'so',\n      'sw',\n      'sv',\n      'ta',\n      'te',\n      'tr',\n      'ur'\n    ],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  }\n\n  /**\n   * Different pluralisation rule sets\n   *\n   * Returns the appropriate suffix for the plural form associated with `n`.\n   * Possible suffixes: 'zero', 'one', 'two', 'few', 'many', 'other' (the actual\n   * meaning of each differs per locale). 'other' should always exist, even in\n   * languages without plurals, such as Chinese.\n   * {@link https://cldr.unicode.org/index/cldr-spec/plural-rules}\n   *\n   * The count must be a positive integer. Negative numbers and decimals aren't accounted for\n   *\n   * @internal\n   * @type {{ [key: string]: (count: number) => PluralRule }}\n   */\n  static pluralRules = {\n    /* eslint-disable jsdoc/require-jsdoc */\n    arabic(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n % 100 >= 3 && n % 100 <= 10) {\n        return 'few'\n      }\n      if (n % 100 >= 11 && n % 100 <= 99) {\n        return 'many'\n      }\n      return 'other'\n    },\n    chinese() {\n      return 'other'\n    },\n    french(n) {\n      return n === 0 || n === 1 ? 'one' : 'other'\n    },\n    german(n) {\n      return n === 1 ? 'one' : 'other'\n    },\n    irish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n >= 3 && n <= 6) {\n        return 'few'\n      }\n      if (n >= 7 && n <= 10) {\n        return 'many'\n      }\n      return 'other'\n    },\n    russian(n) {\n      const lastTwo = n % 100\n      const last = lastTwo % 10\n      if (last === 1 && lastTwo !== 11) {\n        return 'one'\n      }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n        return 'few'\n      }\n      if (\n        last === 0 ||\n        (last >= 5 && last <= 9) ||\n        (lastTwo >= 11 && lastTwo <= 14)\n      ) {\n        return 'many'\n      }\n      // Note: The 'other' suffix is only used by decimal numbers in Russian.\n      // We don't anticipate it being used, but it's here for consistency.\n      return 'other'\n    },\n    scottish(n) {\n      if (n === 1 || n === 11) {\n        return 'one'\n      }\n      if (n === 2 || n === 12) {\n        return 'two'\n      }\n      if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) {\n        return 'few'\n      }\n      return 'other'\n    },\n    spanish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n % 1000000 === 0 && n !== 0) {\n        return 'many'\n      }\n      return 'other'\n    },\n    welsh(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n === 3) {\n        return 'few'\n      }\n      if (n === 6) {\n        return 'many'\n      }\n      return 'other'\n    }\n    /* eslint-enable jsdoc/require-jsdoc */\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n */\nexport class Accordion extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /** @private */\n  browserSupportsSessionStorage = false\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Accordion',\n        identifier: '$module'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      return this\n    }\n\n    this.$sections = $sections\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    // Loop through sections\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        return\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections to\n      // open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$span || !$heading) {\n      return\n    }\n\n    // Create a button element that will replace the '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$module.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n    for (let i = 0; i < $span.attributes.length; i++) {\n      const attr = $span.attributes.item(i)\n      // Add all attributes but not ID as this is being added to\n      // the section heading ($headingText)\n      if (attr.nodeName !== 'id') {\n        $button.setAttribute(attr.nodeName, attr.nodeValue)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by `aria-labelledby` on the\n    // hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $headingTextFocus.innerHTML = $span.innerHTML\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading\n    // For the snippet to work with JavaScript, it must be added before adding the page element to the\n    // page's DOM. See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the original `div` to the\n      // new `span`\n      // This is because the summary line text is now inside a button element, which can only contain\n      // phrasing content\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (let j = 0, l = $summary.attributes.length; j < l; ++j) {\n        const nodeName = $summary.attributes.item(j).nodeName\n        const nodeValue = $summary.attributes.item(j).nodeValue\n        $summarySpan.setAttribute(nodeName, nodeValue)\n      }\n\n      // Copy original contents of summary to the new summary span\n      $summarySpanFocus.innerHTML = $summary.innerHTML\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.parentNode.replaceChild($summarySpan, $summary)\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const expanded = this.isExpanded($section)\n    this.setExpanded(!expanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.checkIfAllSectionsOpen()\n\n    // Loop through sections\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      // Store the state in sessionStorage when a change is triggered\n      this.storeState($section)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (\n      !$showHideIcon ||\n      !($showHideText instanceof HTMLElement) ||\n      !$button ||\n      !$content\n    ) {\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText instanceof HTMLElement) {\n      ariaLabelParts.push($headingText.textContent.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary instanceof HTMLElement) {\n      ariaLabelParts.push($summary.textContent.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  checkIfAllSectionsOpen() {\n    // Get a count of all the Accordion sections\n    const sectionsCount = this.$sections.length\n    // Get a count of all Accordion sections that are expanded\n    const expandedSectionCount = this.$module.querySelectorAll(\n      `.${this.sectionExpandedClass}`\n    ).length\n    const areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n    return areAllSectionsOpen\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    const newButtonText = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = newButtonText\n\n    // Swap icon, toggle class\n    if (expanded) {\n      this.$showAllIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      this.$showAllIcon.classList.add(this.downChevronIconClass)\n    }\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  storeState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      // We need a unique way of identifying each content in the Accordion. Since\n      // an `#id` should be unique and an `id` is required for `aria-` attributes\n      // `id` can be safely used.\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = $button.getAttribute('aria-expanded')\n\n        // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState)\n        }\n      }\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = contentId\n          ? window.sessionStorage.getItem(contentId)\n          : null\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by dividing its contents\n   * into thematic chunks.\n   * See https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.innerHTML = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @default\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n}\n\nconst helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    const testString = 'this is the test string'\n    let result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result =\n        window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\nconst KEY_SPACE = 32\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n */\nexport class Button extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element} $module - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Button',\n        identifier: '$module'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.$module.addEventListener('keydown', (event) =>\n      this.handleKeyDown(event)\n    )\n    this.$module.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can activate things with the 'button'\n   * role, so we need to match the functionality of native HTML buttons\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.keyCode !== KEY_SPACE) {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen. This\n   * stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @default\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n","/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @internal\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  extractConfigByNamespace,\n  mergeConfigs,\n  validateConfig\n} from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @preserve\n */\nexport class CharacterCount extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $textarea\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $visibleCountMessage = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $screenReaderCountMessage = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /**\n   * @private\n   * @type {CharacterCountConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength = Infinity\n\n  /**\n   * @param {Element} $module - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Character count',\n        identifier: '$module'\n      })\n    }\n\n    const $textarea = $module.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError($textarea, {\n        componentName: 'Character count',\n        identifier: '.govuk-js-character-count',\n        expectedType: 'HTMLTextareaElement or HTMLInputElement'\n      })\n    }\n\n    // Read config set using dataset ('data-' values)\n    const datasetConfig = normaliseDataset($module.dataset)\n\n    // To ensure data-attributes take complete precedence, even if they change the\n    // type of count, we need to reset the `maxlength` and `maxwords` from the\n    // JavaScript config.\n    //\n    // We can't mutate `config`, though, as it may be shared across multiple\n    // components inside `initAll`.\n    /** @type {CharacterCountConfig} */\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    this.config = mergeConfigs(\n      CharacterCount.defaults,\n      config || {},\n      configOverrides,\n      datasetConfig\n    )\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(`Character count: ${errors[0]}`)\n    }\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'), {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue($module, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords || this.config.maxlength\n\n    this.$module = $module\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError($textareaDescription, {\n        componentName: 'Character count',\n        identifier: `#${textareaDescriptionId}`\n      })\n    }\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    if ($textareaDescription.textContent.match(/^\\s*$/)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify the\n   * fields by directly changing its `value`. These changes don't trigger events\n   * in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check if\n   * the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    clearInterval(this.valueChecker)\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n\n    // If input is over the threshold, remove the disabled class which renders the\n    // counter invisible.\n    if (this.isOverThreshold()) {\n      this.$visibleCountMessage.classList.remove(\n        'govuk-character-count__message--disabled'\n      )\n    } else {\n      this.$visibleCountMessage.classList.add(\n        'govuk-character-count__message--disabled'\n      )\n    }\n\n    // Update styles\n    if (remainingNumber < 0) {\n      this.$textarea.classList.add('govuk-textarea--error')\n      this.$visibleCountMessage.classList.remove('govuk-hint')\n      this.$visibleCountMessage.classList.add('govuk-error-message')\n    } else {\n      this.$textarea.classList.remove('govuk-textarea--error')\n      this.$visibleCountMessage.classList.remove('govuk-error-message')\n      this.$visibleCountMessage.classList.add('govuk-hint')\n    }\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) || [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    } else {\n      return text.length\n    }\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @default\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n * @typedef {import('../../i18n.mjs').TranslationPluralForms} TranslationPluralForms\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Checkboxes component\n *\n * @preserve\n */\nexport class Checkboxes extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block â€“\n   * for example, a checkbox for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the checkbox state.\n   *\n   * @param {Element} $module - HTML element to use for checkboxes\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Checkboxes',\n        identifier: `[data-module=\"${Checkboxes.moduleName}\"]`\n      })\n    }\n\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $inputs = $module.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError(null, {\n        componentName: 'Checkboxes',\n        identifier: 'input[type=\"checkbox\"]'\n      })\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError(null, {\n          componentName: 'Checkboxes',\n          identifier: `#${targetId}`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if (\n      $target &&\n      $target.classList.contains('govuk-checkboxes__conditional')\n    ) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-checkboxes__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a â€œNone of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive' behaviour,\n   * and uncheck them. This helps prevent someone checking both a regular checkbox and a\n   * \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a checkbox, sync\n   * the state of any associated conditional reveal with the checkbox state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive =\n      $clickedInput.getAttribute('data-behaviour') === 'exclusive'\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-checkboxes'\n}\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in configuration.\n *\n * @preserve\n */\nexport class ErrorSummary extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ErrorSummaryConfig}\n   */\n  config\n\n  /**\n   * @param {Element} $module - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Error summary',\n        identifier: '$module'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      ErrorSummary.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.setFocus()\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Focus the error summary\n   *\n   * @private\n   */\n  setFocus() {\n    if (this.config.disableAutoFocus) {\n      return\n    }\n\n    // Set tabindex to -1 to make the element programmatically focusable, but\n    // remove it on blur as the error summary doesn't need to be focused again.\n    this.$module.setAttribute('tabindex', '-1')\n\n    this.$module.addEventListener('blur', () => {\n      this.$module.removeAttribute('tabindex')\n    })\n\n    this.$module.focus()\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if (this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our labels\n   * or legends appear above the input, this means the user will be presented with\n   * an input without any context, as the label or legend will be off the top of\n   * the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and then\n   * focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is announced\n   * (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = this.getFragmentFromUrl($target.href)\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input to\n    // avoid extra scrolling in browsers that don't support `preventScroll` (which\n    // at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get fragment from URL\n   *\n   * Extract the fragment (everything after the hash) from a URL, but not including\n   * the hash.\n   *\n   * @private\n   * @param {string} url - URL\n   * @returns {string | undefined} Fragment from URL, without the hash\n   */\n  getFragmentFromUrl(url) {\n    if (url.indexOf('#') === -1) {\n      return undefined\n    }\n\n    return url.split('#').pop()\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no associated\n   *   legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if there\n        // is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldsetâ€™s legend (instead of\n        // the label associated with the input) if the input would end up in the\n        // top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ||\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @default\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit this page component\n *\n * @preserve\n */\nexport class ExitThisPage extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ExitThisPageConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element} $module - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Exit this page',\n        identifier: '$module'\n      })\n    }\n\n    const $button = $module.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLElement)) {\n      throw new ElementError($button, {\n        componentName: 'Exit this page',\n        identifier: 'Button',\n        expectedType: HTMLElement\n      })\n    }\n\n    this.config = mergeConfigs(\n      ExitThisPage.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n    this.$module = $module\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector(\n      '.govuk-js-exit-this-page-skiplink'\n    )\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan() {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$module.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler() {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener(\n        'click',\n        this.handleClick.bind(this)\n      )\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator() {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator() {\n    // Show or hide the indicator container depending on keypressCounter value\n    if (this.keypressCounter > 0) {\n      this.$indicatorContainer.classList.add(\n        'govuk-exit-this-page__indicator--visible'\n      )\n    } else {\n      this.$indicatorContainer.classList.remove(\n        'govuk-exit-this-page__indicator--visible'\n      )\n    }\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage() {\n    this.$updateSpan.textContent = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.textContent = this.i18n.t('activated')\n\n    window.location.href = this.$button.getAttribute('href')\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick(event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress(event) {\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another keyâ€”so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (\n      (event.key === 'Shift' || event.keyCode === 16 || event.which === 16) &&\n      !this.lastKeyWasModified\n    ) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId !== null) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId !== null) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId !== null) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer() {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    window.clearTimeout(this.keypressTimeoutId)\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer() {\n    window.clearTimeout(this.keypressTimeoutId)\n    this.keypressTimeoutId = null\n\n    this.keypressCounter = 0\n    this.$updateSpan.textContent = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      this.$updateSpan.textContent = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @deprecated Will be made private in v5.0\n   */\n  resetPage() {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.textContent = ''\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-exit-this-page'\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @default\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to\n   * big and back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to\n   * detect when a screen size change happens. We rely on it being null if the\n   * feature isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the browser\n   * viewport moves between states.\n   *\n   * @param {Element} $module - HTML element to use for header\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Header',\n        identifier: '$module'\n      })\n    }\n\n    this.$module = $module\n    const $menuButton = $module.querySelector('.govuk-js-header-toggle')\n\n    // Headers don't necessarily have a navigation.\n    // When they don't, the menu toggle won't be rendered\n    // by our macro (or may be omitted when writing plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    if (!($menuButton instanceof HTMLElement)) {\n      throw new ElementError($menuButton, {\n        componentName: 'Header',\n        identifier: '.govuk-js-header-toggle'\n      })\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError(null, {\n        componentName: 'Header',\n        identifier: '.govuk-js-header-toggle[aria-controls]'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n\n    if (!($menu instanceof HTMLElement)) {\n      throw new ElementError($menu, {\n        componentName: 'Header',\n        identifier: `#${menuId}`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    // Set the matchMedia to the govuk-frontend desktop breakpoint\n    this.mql = window.matchMedia('(min-width: 48.0625em)')\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.syncState())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.syncState())\n    }\n\n    this.syncState()\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  syncState() {\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.syncState()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Notification Banner component\n *\n * @preserve\n */\nexport class NotificationBanner extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {NotificationBannerConfig}\n   */\n  config\n\n  /**\n   * @param {Element} $module - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Notification banner',\n        identifier: '$module'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      NotificationBanner.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.setFocus()\n  }\n\n  /**\n   * Focus the element\n   *\n   * If `role=\"alert\"` is set, focus the element to help some assistive technologies\n   * prioritise announcing it.\n   *\n   * You can turn off the auto-focus functionality by setting `data-disable-auto-focus=\"true\"` in the\n   * component HTML. You might wish to do this based on user research findings, or to avoid a clash\n   * with another element which should be focused when the page loads.\n   *\n   * @private\n   */\n  setFocus() {\n    if (this.config.disableAutoFocus) {\n      return\n    }\n\n    if (this.$module.getAttribute('role') !== 'alert') {\n      return\n    }\n\n    // Set tabindex to -1 to make the element focusable with JavaScript.\n    // Remove the tabindex on blur as the component doesn't need to be focusable after the page has\n    // loaded.\n    if (!this.$module.getAttribute('tabindex')) {\n      this.$module.setAttribute('tabindex', '-1')\n\n      this.$module.addEventListener('blur', () => {\n        this.$module.removeAttribute('tabindex')\n      })\n    }\n\n    this.$module.focus()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @default\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` â€“ in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Radios component\n *\n * @preserve\n */\nexport class Radios extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block â€“ for\n   * example, a radio for 'Phone' could reveal an additional form field for the\n   * user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which is\n   * promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page (for\n   * example if the user has navigated back), and set up event handlers to keep\n   * the reveal in sync with the radio state.\n   *\n   * @param {Element} $module - HTML element to use for radios\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Radios',\n        identifier: `[data-module=\"${Radios.moduleName}\"]`\n      })\n    }\n\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $inputs = $module.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError(null, {\n        componentName: 'Radios',\n        identifier: 'input[type=\"radio\"]'\n      })\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError(null, {\n          componentName: 'Radios',\n          identifier: `#${targetId}`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target && $target.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-radios__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a radio\n   * in another $module)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    /** @satisfies {NodeListOf<HTMLInputElement>} */\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-radios'\n}\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Skip link component\n *\n * @preserve\n */\nexport class SkipLink extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $linkedElement\n\n  /** @private */\n  linkedElementListener = false\n\n  /**\n   * @param {Element} $module - HTML element to use for skip link\n   * @throws {ElementError} when $module is not set or the wrong type\n   * @throws {ElementError} when $module.hash does not contain a hash\n   * @throws {ElementError} when the linked element is missing or the wrong type\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLAnchorElement)) {\n      throw new ElementError($module, {\n        componentName: 'Skip link',\n        identifier: '$module',\n        expectedType: HTMLAnchorElement\n      })\n    }\n\n    this.$module = $module\n    this.$linkedElement = this.getLinkedElement()\n\n    this.$module.addEventListener('click', () => this.focusLinkedElement())\n  }\n\n  /**\n   * Get linked element\n   *\n   * @private\n   * @returns {HTMLElement} $linkedElement - DOM element linked to from the skip link\n   */\n  getLinkedElement() {\n    const linkedElementId = this.getFragmentFromUrl(this.$module.hash)\n\n    // Check for link hash fragment\n    if (!linkedElementId) {\n      throw new ElementError(this.$module, {\n        componentName: 'Skip link',\n        identifier: '$module.hash',\n        expectedType: 'string'\n      })\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for link target element\n    if (!($linkedElement instanceof HTMLElement)) {\n      throw new ElementError($linkedElement, {\n        componentName: 'Skip link',\n        identifier: `$module.hash target #${linkedElementId}`\n      })\n    }\n\n    return $linkedElement\n  }\n\n  /**\n   * Focus the linked element\n   *\n   * Set tabindex and helper CSS class. Set listener to remove them on blur.\n   *\n   * @private\n   */\n  focusLinkedElement() {\n    if (!this.$linkedElement.getAttribute('tabindex')) {\n      // Set the element tabindex to -1 so it can be focused with JavaScript.\n      this.$linkedElement.setAttribute('tabindex', '-1')\n      this.$linkedElement.classList.add('govuk-skip-link-focused-element')\n\n      // Add listener for blur on the focused element (unless the listener has previously been added)\n      if (!this.linkedElementListener) {\n        this.$linkedElement.addEventListener('blur', () =>\n          this.removeFocusProperties()\n        )\n        this.linkedElementListener = true\n      }\n    }\n\n    this.$linkedElement.focus()\n  }\n\n  /**\n   * Remove the tabindex that makes the linked element focusable because the element only needs to be\n   * focusable until it has received programmatic focus and a screen reader has announced it.\n   *\n   * Remove the CSS class that removes the native focus styles.\n   *\n   * @private\n   */\n  removeFocusProperties() {\n    this.$linkedElement.removeAttribute('tabindex')\n    this.$linkedElement.classList.remove('govuk-skip-link-focused-element')\n  }\n\n  /**\n   * Get fragment from URL\n   *\n   * Extract the fragment (everything after the hash) from a URL, but not including\n   * the hash.\n   *\n   * @private\n   * @param {string} url - URL\n   * @returns {string | undefined} Fragment from URL, without the hash\n   */\n  getFragmentFromUrl(url) {\n    if (url.indexOf('#') === -1) {\n      return undefined\n    }\n\n    return url.split('#').pop()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-skip-link'\n}\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Tabs component\n *\n * @preserve\n */\nexport class Tabs extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $tabs\n\n  /** @private */\n  $tabList\n\n  /** @private */\n  $tabListItems\n\n  /** @private */\n  keys = { left: 37, right: 39, up: 38, down: 40 }\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element} $module - HTML element to use for tabs\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Tabs',\n        identifier: '$module'\n      })\n    }\n\n    /** @satisfies {NodeListOf<HTMLAnchorElement>} */\n    const $tabs = $module.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError(null, {\n        componentName: 'Tabs',\n        identifier: `a.govuk-tabs__tab`\n      })\n    }\n\n    this.$module = $module\n    this.$tabs = $tabs\n\n    // Save bounded functions to use when removing event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$module.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$module.querySelectorAll(\n      'li.govuk-tabs__list-item'\n    )\n\n    if (!$tabList) {\n      throw new ElementError(null, {\n        componentName: 'Tabs',\n        identifier: `.govuk-tabs__list`\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError(null, {\n        componentName: 'Tabs',\n        identifier: `.govuk-tabs__list-item`\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    this.mql = window.matchMedia('(min-width: 40.0625em)')\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => {\n        this.checkMode()\n      })\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => {\n        this.checkMode()\n      })\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode() {\n    if (this.mql.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) || this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange() {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab(hash) {\n    return this.$module.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    // set tab attributes\n    const panelId = this.getHref($tab).slice(1)\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id\n    // so the page doesn't jump when a user clicks a tab (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = this.getHref($tab).slice(1)\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right/down arrow for next tab\n   * - Press left/up arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.keyCode) {\n      case this.keys.left:\n      case this.keys.up:\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case this.keys.right:\n      case this.keys.down:\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab || !$currentTab.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    /** @satisfies {HTMLAnchorElement} */\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab || !$currentTab.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    /** @satisfies {HTMLAnchorElement} */\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel($tab) {\n    return this.$module.querySelector(this.getHref($tab))\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab() {\n    return this.$module.querySelector(\n      '.govuk-tabs__list-item--selected a.govuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Get link hash fragment for href attribute\n   *\n   * this is because IE doesn't always return the actual value but a relative full path\n   * should be a utility function most prob\n   * {@link http://labs.thesedays.com/blog/2010/01/08/getting-the-href-value-with-jquery-in-ie/}\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {string} Hash fragment including #\n   */\n  getHref($tab) {\n    const href = $tab.getAttribute('href')\n    const hash = href.slice(href.indexOf('#'), href.length)\n    return hash\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-tabs'\n}\n","/* eslint-disable no-new */\n\nimport { version } from './common/govuk-frontend-version.mjs'\nimport { isSupported } from './common/index.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config & { scope?: Element }} [config] - Config for all components (with optional scope)\n */\nfunction initAll(config) {\n  config = typeof config !== 'undefined' ? config : {}\n\n  // Skip initialisation when GOV.UK Frontend is not supported\n  if (!isSupported()) {\n    console.log(new SupportError())\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Accordion, config.accordion],\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [ExitThisPage, config.exitThisPage],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [Radios],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  const $scope = config.scope instanceof HTMLElement ? config.scope : document\n\n  components.forEach(([Component, config]) => {\n    const $elements = $scope.querySelectorAll(\n      `[data-module=\"${Component.moduleName}\"]`\n    )\n\n    $elements.forEach(($element) => {\n      try {\n        // Only pass config to components that accept it\n        'defaults' in Component\n          ? new Component($element, config)\n          : new Component($element)\n      } catch (error) {\n        console.log(error)\n      }\n    })\n  })\n}\n\nexport {\n  initAll,\n  version,\n\n  // Components\n  Accordion,\n  Button,\n  CharacterCount,\n  Checkboxes,\n  ErrorSummary,\n  ExitThisPage,\n  Header,\n  NotificationBanner,\n  Radios,\n  SkipLink,\n  Tabs\n}\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n */\n\n/**\n * Config for individual components\n *\n * @typedef {import('./components/accordion/accordion.mjs').AccordionConfig} AccordionConfig\n * @typedef {import('./components/accordion/accordion.mjs').AccordionTranslations} AccordionTranslations\n * @typedef {import('./components/button/button.mjs').ButtonConfig} ButtonConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountConfig} CharacterCountConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountTranslations} CharacterCountTranslations\n * @typedef {import('./components/error-summary/error-summary.mjs').ErrorSummaryConfig} ErrorSummaryConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageConfig} ExitThisPageConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageTranslations} ExitThisPageTranslations\n * @typedef {import('./components/notification-banner/notification-banner.mjs').NotificationBannerConfig} NotificationBannerConfig\n */\n\n/**\n * Component config keys, e.g. `accordion` and `characterCount`\n *\n * @typedef {keyof Config} ConfigKey\n */\n"],"names":["version","mergeConfigs","flattenObject","configObject","flattenedObject","flattenLoop","obj","prefix","key","Object","prototype","hasOwnProperty","call","value","prefixedKey","formattedConfigObject","i","arguments","length","extractConfigByNamespace","namespace","Error","newObject","keyParts","split","shift","newKey","join","isSupported","$scope","document","body","classList","contains","validateConfig","schema","config","validationErrors","name","conditions","entries","errors","required","errorMessage","every","push","normaliseString","trimmedValue","trim","isFinite","Number","normaliseDataset","dataset","out","GOVUKFrontendError","constructor","args","SupportError","ConfigError","ElementError","element","componentName","identifier","expectedType","reason","window","HTMLElement","GOVUKFrontendComponent","checkSupport","I18n","translations","locale","documentElement","lang","t","lookupKey","options","count","getPluralSuffix","translationString","match","replacePlaceholders","formatter","hasIntlNumberFormatSupport","Intl","NumberFormat","replace","placeholderWithBraces","placeholderKey","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","PluralRules","supportedLocalesOf","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","languages","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","n","lastTwo","last","Accordion","$module","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","browserSupportsSessionStorage","$showAllButton","$showAllIcon","$showAllText","defaults","querySelectorAll","helper","checkForSessionStorage","initControls","initSectionHeaders","areAllSectionsOpen","checkIfAllSectionsOpen","updateShowAllButton","createElement","setAttribute","add","appendChild","$accordionControls","insertBefore","firstChild","addEventListener","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","index","$span","$heading","$summary","$button","id","attributes","attr","item","nodeName","nodeValue","$headingText","$headingTextFocus","innerHTML","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","j","l","parentNode","replaceChild","removeChild","$fragment","target","Element","closest","expanded","storeState","nowExpanded","$content","newButtonText","textContent","ariaLabelParts","ariaLabelMessage","removeAttribute","remove","sectionsCount","expandedSectionCount","toString","rememberExpanded","contentId","getAttribute","contentState","sessionStorage","setItem","getItem","$punctuationEl","moduleName","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","testString","result","removeItem","exception","KEY_SPACE","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","debounceFormSubmitTimer","handleKeyDown","debounce","$target","keyCode","preventDefault","click","preventDoubleClick","setTimeout","closestAttributeValue","$element","attributeName","$closestElementWithAttribute","CharacterCount","$textarea","$visibleCountMessage","$screenReaderCountMessage","lastInputTimestamp","lastInputValue","valueChecker","maxLength","Infinity","HTMLTextAreaElement","HTMLInputElement","datasetConfig","configOverrides","maxlength","undefined","maxwords","textareaDescriptionId","$textareaDescription","getElementById","insertAdjacentElement","className","bindChangeEvents","updateCountMessage","handleKeyUp","handleFocus","handleBlur","updateVisibleCountMessage","Date","now","setInterval","updateIfValueChanged","clearInterval","updateScreenReaderCountMessage","remainingNumber","isOverThreshold","getCountMessage","text","tokens","countType","formatCountMessage","translationKeySuffix","threshold","currentLength","thresholdValue","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","anyOf","Checkboxes","$inputs","$input","targetId","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","inputIsChecked","checked","toggle","unCheckAllInputsExcept","allInputsWithSameName","$inputWithSameName","hasSameFormOwner","form","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","type","hasAriaControls","hasBehaviourExclusive","ErrorSummary","setFocus","disableAutoFocus","focus","focusTarget","HTMLAnchorElement","inputId","getFragmentFromUrl","href","$legendOrLabel","getAssociatedLegendOrLabel","scrollIntoView","preventScroll","url","indexOf","pop","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","inputBottom","ExitThisPage","$skiplinkButton","$updateSpan","$indicatorContainer","$overlay","keypressCounter","lastKeyWasModified","timeoutTime","keypressTimeoutId","timeoutMessageId","buildIndicator","initUpdateSpan","initButtonClickHandler","handleKeypress","bind","govukFrontendExitThisPageKeypress","resetPage","$indicator","updateIndicator","$indicators","exitPage","location","which","clearTimeout","setKeypressTimer","resetKeypressTimer","shiftKey","activated","timedOut","pressTwoMoreTimes","pressOneMoreTime","Header","$menuButton","$menu","menuIsOpen","mql","menuId","matchMedia","syncState","addListener","handleMenuButtonClick","matches","NotificationBanner","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameName","SkipLink","$linkedElement","linkedElementListener","getLinkedElement","focusLinkedElement","linkedElementId","hash","removeFocusProperties","Tabs","$tabs","$tabList","$tabListItems","keys","left","right","up","down","jsHiddenClass","changingHash","boundTabClick","boundTabKeydown","boundOnHashChange","onTabClick","onTabKeydown","onHashChange","setupResponsiveChecks","checkMode","setup","teardown","$item","$tab","setAttributes","hideTab","$activeTab","getTab","showTab","removeEventListener","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","getHref","slice","$panel","getPanel","$currentTab","$nextTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","parentElement","$nextTabListItem","nextElementSibling","$previousTabListItem","previousElementSibling","initAll","log","components","accordion","button","characterCount","errorSummary","exitThisPage","notificationBanner","scope","Component","$elements","error"],"mappings":";;;;;;AAUO,QAAMA,OAAO,GAAG;;ECQhB,SAASC,YAAYA,GAAuD;EAWjF,EAAA,MAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAaC,YAAY,EAAE;MAG5C,MAAMC,eAAe,GAAG,EAAE,CAAA;MAW1B,MAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAaC,GAAG,EAAEC,MAAM,EAAE;EAEzC,MAAA,KAAK,MAAMC,GAAG,IAAIF,GAAG,EAAE;EAGrB,QAAA,IAAI,CAACG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,GAAG,EAAEE,GAAG,CAAC,EAAE;EACnD,UAAA,SAAA;EACF,SAAA;EACA,QAAA,MAAMK,KAAK,GAAGP,GAAG,CAACE,GAAG,CAAC,CAAA;UACtB,MAAMM,WAAW,GAAGP,MAAM,GAAI,CAAA,EAAEA,MAAO,CAAGC,CAAAA,EAAAA,GAAI,CAAC,CAAA,GAAGA,GAAG,CAAA;EACrD,QAAA,IAAI,OAAOK,KAAK,KAAK,QAAQ,EAAE;EAE7BR,UAAAA,WAAW,CAACQ,KAAK,EAAEC,WAAW,CAAC,CAAA;EACjC,SAAC,MAAM;EAELV,UAAAA,eAAe,CAACU,WAAW,CAAC,GAAGD,KAAK,CAAA;EACtC,SAAA;EACF,OAAA;OACD,CAAA;MAGDR,WAAW,CAACF,YAAY,CAAC,CAAA;EACzB,IAAA,OAAOC,eAAe,CAAA;KACvB,CAAA;IAID,MAAMW,qBAAqB,GAAG,EAAE,CAAA;EAKhC,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAEzC,MAAMV,GAAG,GAAGJ,aAAa,CAACe,SAAS,CAACD,CAAC,CAAC,CAAC,CAAA;EACvC,IAAA,KAAK,MAAMR,GAAG,IAAIF,GAAG,EAAE;EACrB,MAAA,IAAIG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,GAAG,EAAEE,GAAG,CAAC,EAAE;EAClDO,QAAAA,qBAAqB,CAACP,GAAG,CAAC,GAAGF,GAAG,CAACE,GAAG,CAAC,CAAA;EACvC,OAAA;EACF,KAAA;EACF,GAAA;EAEA,EAAA,OAAOO,qBAAqB,CAAA;EAC9B,CAAA;EAaO,SAASI,wBAAwBA,CAAChB,YAAY,EAAEiB,SAAS,EAAE;EAEhE,EAAA,IAAI,CAACjB,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAAE;EACrD,IAAA,MAAM,IAAIkB,KAAK,CAAC,4CAA4C,CAAC,CAAA;EAC/D,GAAA;EAEA,EAAA,IAAI,CAACD,SAAS,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;EAC/C,IAAA,MAAM,IAAIC,KAAK,CACb,yEACF,CAAC,CAAA;EACH,GAAA;IAGA,MAAMC,SAAS,GAAG,EAAE,CAAA;EAEpB,EAAA,KAAK,MAAMd,GAAG,IAAIL,YAAY,EAAE;EAE9B,IAAA,MAAMoB,QAAQ,GAAGf,GAAG,CAACgB,KAAK,CAAC,GAAG,CAAC,CAAA;EAE/B,IAAA,IACEf,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,YAAY,EAAEK,GAAG,CAAC,IACvDe,QAAQ,CAAC,CAAC,CAAC,KAAKH,SAAS,EACzB;EAGA,MAAA,IAAIG,QAAQ,CAACL,MAAM,GAAG,CAAC,EAAE;UACvBK,QAAQ,CAACE,KAAK,EAAE,CAAA;EAClB,OAAA;EAEA,MAAA,MAAMC,MAAM,GAAGH,QAAQ,CAACI,IAAI,CAAC,GAAG,CAAC,CAAA;EAEjCL,MAAAA,SAAS,CAACI,MAAM,CAAC,GAAGvB,YAAY,CAACK,GAAG,CAAC,CAAA;EACvC,KAAA;EACF,GAAA;EACA,EAAA,OAAOc,SAAS,CAAA;EAClB,CAAA;EAYO,SAASM,WAAWA,CAACC,MAAM,GAAGC,QAAQ,CAACC,IAAI,EAAE;EAClD,EAAA,OAAOF,MAAM,CAACG,SAAS,CAACC,QAAQ,CAAC,0BAA0B,CAAC,CAAA;EAC9D,CAAA;EAUO,SAASC,cAAcA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC7C,MAAMC,gBAAgB,GAAG,EAAE,CAAA;EAG3B,EAAA,KAAK,MAAM,CAACC,IAAI,EAAEC,UAAU,CAAC,IAAI9B,MAAM,CAAC+B,OAAO,CAACL,MAAM,CAAC,EAAE;MACvD,MAAMM,MAAM,GAAG,EAAE,CAAA;EAGjB,IAAA,KAAK,MAAM;QAAEC,QAAQ;EAAEC,MAAAA,YAAAA;OAAc,IAAIJ,UAAU,EAAE;EACnD,MAAA,IAAI,CAACG,QAAQ,CAACE,KAAK,CAAEpC,GAAG,IAAK,CAAC,CAAC4B,MAAM,CAAC5B,GAAG,CAAC,CAAC,EAAE;EAC3CiC,QAAAA,MAAM,CAACI,IAAI,CAACF,YAAY,CAAC,CAAA;EAC3B,OAAA;EACF,KAAA;EAGA,IAAA,IAAIL,IAAI,KAAK,OAAO,IAAI,EAAEC,UAAU,CAACrB,MAAM,GAAGuB,MAAM,CAACvB,MAAM,IAAI,CAAC,CAAC,EAAE;EACjEmB,MAAAA,gBAAgB,CAACQ,IAAI,CAAC,GAAGJ,MAAM,CAAC,CAAA;EAClC,KAAA;EACF,GAAA;EAEA,EAAA,OAAOJ,gBAAgB,CAAA;EACzB,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;ECxLO,SAASS,eAAeA,CAACjC,KAAK,EAAE;EACrC,EAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;EAC7B,IAAA,OAAOA,KAAK,CAAA;EACd,GAAA;EAEA,EAAA,MAAMkC,YAAY,GAAGlC,KAAK,CAACmC,IAAI,EAAE,CAAA;IAEjC,IAAID,YAAY,KAAK,MAAM,EAAE;EAC3B,IAAA,OAAO,IAAI,CAAA;EACb,GAAA;IAEA,IAAIA,YAAY,KAAK,OAAO,EAAE;EAC5B,IAAA,OAAO,KAAK,CAAA;EACd,GAAA;EAIA,EAAA,IAAIA,YAAY,CAAC7B,MAAM,GAAG,CAAC,IAAI+B,QAAQ,CAACC,MAAM,CAACH,YAAY,CAAC,CAAC,EAAE;MAC7D,OAAOG,MAAM,CAACH,YAAY,CAAC,CAAA;EAC7B,GAAA;EAEA,EAAA,OAAOlC,KAAK,CAAA;EACd,CAAA;EAWO,SAASsC,gBAAgBA,CAACC,OAAO,EAAE;IAExC,MAAMC,GAAG,GAAG,EAAE,CAAA;EAEd,EAAA,KAAK,MAAM7C,GAAG,IAAI4C,OAAO,EAAE;MACzBC,GAAG,CAAC7C,GAAG,CAAC,GAAGsC,eAAe,CAACM,OAAO,CAAC5C,GAAG,CAAC,CAAC,CAAA;EAC1C,GAAA;EAEA,EAAA,OAAO6C,GAAG,CAAA;EACZ;;ECrCO,MAAMC,kBAAkB,SAASjC,KAAK,CAAC;EAAAkC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;EAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;MAAA,IAC5ClB,CAAAA,IAAI,GAAG,oBAAoB,CAAA;EAAA,GAAA;EAC7B,CAAA;EAKO,MAAMmB,YAAY,SAASH,kBAAkB,CAAC;EAInDC,EAAAA,WAAWA,GAAG;MACZ,KAAK,CAAC,kDAAkD,CAAC,CAAA;MAAA,IAJ3DjB,CAAAA,IAAI,GAAG,cAAc,CAAA;EAKrB,GAAA;EACF,CAAA;EAKO,MAAMoB,WAAW,SAASJ,kBAAkB,CAAC;EAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;EAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;MAAA,IAClDlB,CAAAA,IAAI,GAAG,aAAa,CAAA;EAAA,GAAA;EACtB,CAAA;EAKO,MAAMqB,YAAY,SAASL,kBAAkB,CAAC;EAGnD;EACF;EACA;EACA;EACA;EACA;EACA;IACEC,WAAWA,CAACK,OAAO,EAAE;MAAEC,aAAa;MAAEC,UAAU;EAAEC,IAAAA,YAAAA;EAAa,GAAC,EAAE;EAChE,IAAA,IAAIC,MAAM,GAAI,CAAEF,EAAAA,UAAW,CAAW,UAAA,CAAA,CAAA;EAGtC,IAAA,IAAIF,OAAO,EAAE;EACXG,MAAAA,YAAY,GAAGA,YAAY,IAAIE,MAAM,CAACC,WAAW,CAAA;EAEjDF,MAAAA,MAAM,GACJ,OAAOD,YAAY,KAAK,QAAQ,GAC3B,GAAED,UAAW,CAAA,gBAAA,EAAkBC,YAAa,CAAA,CAAC,GAC7C,CAAED,EAAAA,UAAW,0BAAyBC,YAAY,CAACzB,IAAK,CAAC,CAAA,CAAA;EAClE,KAAA;EAEA,IAAA,KAAK,CAAE,CAAEuB,EAAAA,aAAc,CAAIG,EAAAA,EAAAA,MAAO,EAAC,CAAC,CAAA;MAAA,IAtBtC1B,CAAAA,IAAI,GAAG,cAAc,CAAA;EAuBrB,GAAA;EACF;;EC5DO,MAAM6B,sBAAsB,CAAC;EAMlCZ,EAAAA,WAAWA,GAAG;MACZ,IAAI,CAACa,YAAY,EAAE,CAAA;EACrB,GAAA;EAOAA,EAAAA,YAAYA,GAAG;EACb,IAAA,IAAI,CAACxC,WAAW,EAAE,EAAE;QAClB,MAAM,IAAI6B,YAAY,EAAE,CAAA;EAC1B,KAAA;EACF,GAAA;EACF;;ECzBO,MAAMY,IAAI,CAAC;EAUhBd,EAAAA,WAAWA,CAACe,YAAY,EAAElC,MAAM,EAAE;EAAA,IAAA,IAAA,CATlCkC,YAAY,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CACZC,MAAM,GAAA,KAAA,CAAA,CAAA;EAUJ,IAAA,IAAI,CAACD,YAAY,GAAGA,YAAY,IAAI,EAAE,CAAA;EAGtC,IAAA,IAAI,CAACC,MAAM,GACRnC,MAAM,IAAIA,MAAM,CAACmC,MAAM,IAAKzC,QAAQ,CAAC0C,eAAe,CAACC,IAAI,IAAI,IAAI,CAAA;EACtE,GAAA;EAaAC,EAAAA,CAACA,CAACC,SAAS,EAAEC,OAAO,EAAE;MACpB,IAAI,CAACD,SAAS,EAAE;EAEd,MAAA,MAAM,IAAItD,KAAK,CAAC,0BAA0B,CAAC,CAAA;EAC7C,KAAA;MAKA,IAAIuD,OAAO,IAAI,OAAOA,OAAO,CAACC,KAAK,KAAK,QAAQ,EAAE;EAEhDF,MAAAA,SAAS,GAAI,CAAA,EAAEA,SAAU,CAAA,CAAA,EAAG,IAAI,CAACG,eAAe,CAC9CH,SAAS,EACTC,OAAO,CAACC,KACV,CAAE,CAAC,CAAA,CAAA;EACL,KAAA;EAGA,IAAA,MAAME,iBAAiB,GAAG,IAAI,CAACT,YAAY,CAACK,SAAS,CAAC,CAAA;EAEtD,IAAA,IAAI,OAAOI,iBAAiB,KAAK,QAAQ,EAAE;EAEzC,MAAA,IAAIA,iBAAiB,CAACC,KAAK,CAAC,WAAW,CAAC,EAAE;UACxC,IAAI,CAACJ,OAAO,EAAE;EACZ,UAAA,MAAM,IAAIvD,KAAK,CACb,wEACF,CAAC,CAAA;EACH,SAAA;EAEA,QAAA,OAAO,IAAI,CAAC4D,mBAAmB,CAACF,iBAAiB,EAAEH,OAAO,CAAC,CAAA;EAC7D,OAAC,MAAM;EACL,QAAA,OAAOG,iBAAiB,CAAA;EAC1B,OAAA;EACF,KAAC,MAAM;EAGL,MAAA,OAAOJ,SAAS,CAAA;EAClB,KAAA;EACF,GAAA;EAWAM,EAAAA,mBAAmBA,CAACF,iBAAiB,EAAEH,OAAO,EAAE;EAE9C,IAAA,IAAIM,SAAS,CAAA;EAEb,IAAA,IAAI,IAAI,CAACC,0BAA0B,EAAE,EAAE;QACrCD,SAAS,GAAG,IAAIE,IAAI,CAACC,YAAY,CAAC,IAAI,CAACd,MAAM,CAAC,CAAA;EAChD,KAAA;MAEA,OAAOQ,iBAAiB,CAACO,OAAO,CAC9B,YAAY,EAUZ,UAAUC,qBAAqB,EAAEC,cAAc,EAAE;EAC/C,MAAA,IAAI/E,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACgE,OAAO,EAAEY,cAAc,CAAC,EAAE;EACjE,QAAA,MAAMC,gBAAgB,GAAGb,OAAO,CAACY,cAAc,CAAC,CAAA;EAIhD,QAAA,IACEC,gBAAgB,KAAK,KAAK,IACzB,OAAOA,gBAAgB,KAAK,QAAQ,IACnC,OAAOA,gBAAgB,KAAK,QAAS,EACvC;EACA,UAAA,OAAO,EAAE,CAAA;EACX,SAAA;EAGA,QAAA,IAAI,OAAOA,gBAAgB,KAAK,QAAQ,EAAE;YACxC,OAAOP,SAAS,GACZA,SAAS,CAACQ,MAAM,CAACD,gBAAgB,CAAC,GACjC,CAAEA,EAAAA,gBAAiB,CAAC,CAAA,CAAA;EAC3B,SAAA;EAEA,QAAA,OAAOA,gBAAgB,CAAA;EACzB,OAAC,MAAM;EACL,QAAA,MAAM,IAAIpE,KAAK,CACZ,CAAiCkE,+BAAAA,EAAAA,qBAAsB,wBAC1D,CAAC,CAAA;EACH,OAAA;EACF,KACF,CAAC,CAAA;EACH,GAAA;EAaAI,EAAAA,yBAAyBA,GAAG;MAC1B,OAAOC,OAAO,CACZ3B,MAAM,CAACmB,IAAI,IACT,aAAa,IAAInB,MAAM,CAACmB,IAAI,IAC5BA,IAAI,CAACS,WAAW,CAACC,kBAAkB,CAAC,IAAI,CAACvB,MAAM,CAAC,CAACrD,MACrD,CAAC,CAAA;EACH,GAAA;EAaAiE,EAAAA,0BAA0BA,GAAG;MAC3B,OAAOS,OAAO,CACZ3B,MAAM,CAACmB,IAAI,IACT,cAAc,IAAInB,MAAM,CAACmB,IAAI,IAC7BA,IAAI,CAACC,YAAY,CAACS,kBAAkB,CAAC,IAAI,CAACvB,MAAM,CAAC,CAACrD,MACtD,CAAC,CAAA;EACH,GAAA;EAkBA4D,EAAAA,eAAeA,CAACH,SAAS,EAAEE,KAAK,EAAE;EAKhCA,IAAAA,KAAK,GAAG3B,MAAM,CAAC2B,KAAK,CAAC,CAAA;EACrB,IAAA,IAAI,CAAC5B,QAAQ,CAAC4B,KAAK,CAAC,EAAE;EACpB,MAAA,OAAO,OAAO,CAAA;EAChB,KAAA;EAEA,IAAA,IAAIkB,aAAa,CAAA;EAKjB,IAAA,IAAI,IAAI,CAACJ,yBAAyB,EAAE,EAAE;EACpCI,MAAAA,aAAa,GAAG,IAAIX,IAAI,CAACS,WAAW,CAAC,IAAI,CAACtB,MAAM,CAAC,CAACyB,MAAM,CAACnB,KAAK,CAAC,CAAA;EACjE,KAAC,MAAM;EACLkB,MAAAA,aAAa,GAAG,IAAI,CAACE,kCAAkC,CAACpB,KAAK,CAAC,CAAA;EAChE,KAAA;MAGA,IAAK,CAAA,EAAEF,SAAU,CAAGoB,CAAAA,EAAAA,aAAc,EAAC,IAAI,IAAI,CAACzB,YAAY,EAAE;EACxD,MAAA,OAAOyB,aAAa,CAAA;OAGrB,MAAM,IAAK,CAAEpB,EAAAA,SAAU,QAAO,IAAI,IAAI,CAACL,YAAY,EAAE;EACpD,MAAA,IAAI4B,OAAO,IAAI,MAAM,IAAIA,OAAO,EAAE;UAChCA,OAAO,CAACC,IAAI,CACT,CAA8BJ,4BAAAA,EAAAA,aAAc,UAAS,IAAI,CAACxB,MAAO,CAAA,mCAAA,CACpE,CAAC,CAAA;EACH,OAAA;EAEA,MAAA,OAAO,OAAO,CAAA;EAEhB,KAAC,MAAM;QACL,MAAM,IAAIlD,KAAK,CACZ,CAAA,4CAAA,EAA8C,IAAI,CAACkD,MAAO,UAC7D,CAAC,CAAA;EACH,KAAA;EACF,GAAA;IAYA0B,kCAAkCA,CAACpB,KAAK,EAAE;MAGxCA,KAAK,GAAGuB,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACzB,KAAK,CAAC,CAAC,CAAA;EAEnC,IAAA,MAAM0B,OAAO,GAAG,IAAI,CAACC,uBAAuB,EAAE,CAAA;EAE9C,IAAA,IAAID,OAAO,EAAE;QACX,OAAOlC,IAAI,CAACoC,WAAW,CAACF,OAAO,CAAC,CAAC1B,KAAK,CAAC,CAAA;EACzC,KAAA;EAEA,IAAA,OAAO,OAAO,CAAA;EAChB,GAAA;EAcA2B,EAAAA,uBAAuBA,GAAG;EACxB,IAAA,MAAMjC,MAAM,GAAG,IAAI,CAACA,MAAM,CAAA;MAC1B,MAAMmC,WAAW,GAAGnC,MAAM,CAAC/C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;EAIxC,IAAA,KAAK,MAAMmF,UAAU,IAAItC,IAAI,CAACuC,cAAc,EAAE;EAC5C,MAAA,IACEnG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyD,IAAI,CAACuC,cAAc,EAAED,UAAU,CAAC,EACrE;EACA,QAAA,MAAME,SAAS,GAAGxC,IAAI,CAACuC,cAAc,CAACD,UAAU,CAAC,CAAA;EACjD,QAAA,KAAK,IAAI3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6F,SAAS,CAAC3F,MAAM,EAAEF,CAAC,EAAE,EAAE;EACzC,UAAA,IAAI6F,SAAS,CAAC7F,CAAC,CAAC,KAAKuD,MAAM,IAAIsC,SAAS,CAAC7F,CAAC,CAAC,KAAK0F,WAAW,EAAE;EAC3D,YAAA,OAAOC,UAAU,CAAA;EACnB,WAAA;EACF,SAAA;EACF,OAAA;EACF,KAAA;EACF,GAAA;EA+LF,CAAA;EAtdatC,IAAI,CA0TRuC,cAAc,GAAG;IACtBE,MAAM,EAAE,CAAC,IAAI,CAAC;EACdC,EAAAA,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC/DC,EAAAA,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACxDC,MAAM,EAAE,CACN,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACL;IACDC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,EAAAA,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IACrBC,QAAQ,EAAE,CAAC,IAAI,CAAC;EAChBC,EAAAA,OAAO,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;IAC9BC,KAAK,EAAE,CAAC,IAAI,CAAA;EACd,CAAC,CAAA;EA7VUjD,IAAI,CA6WRoC,WAAW,GAAG;IAEnBK,MAAMA,CAACS,CAAC,EAAE;MACR,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,GAAG,GAAG,IAAI,CAAC,IAAIA,CAAC,GAAG,GAAG,IAAI,EAAE,EAAE;EACjC,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,GAAG,GAAG,IAAI,EAAE,IAAIA,CAAC,GAAG,GAAG,IAAI,EAAE,EAAE;EAClC,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;EACA,IAAA,OAAO,OAAO,CAAA;KACf;EACDR,EAAAA,OAAOA,GAAG;EACR,IAAA,OAAO,OAAO,CAAA;KACf;IACDC,MAAMA,CAACO,CAAC,EAAE;MACR,OAAOA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO,CAAA;KAC5C;IACDN,MAAMA,CAACM,CAAC,EAAE;EACR,IAAA,OAAOA,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO,CAAA;KACjC;IACDL,KAAKA,CAACK,CAAC,EAAE;MACP,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IAAIA,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,EAAE;EACpB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IAAIA,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,EAAE,EAAE;EACrB,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;EACA,IAAA,OAAO,OAAO,CAAA;KACf;IACDJ,OAAOA,CAACI,CAAC,EAAE;EACT,IAAA,MAAMC,OAAO,GAAGD,CAAC,GAAG,GAAG,CAAA;EACvB,IAAA,MAAME,IAAI,GAAGD,OAAO,GAAG,EAAE,CAAA;EACzB,IAAA,IAAIC,IAAI,KAAK,CAAC,IAAID,OAAO,KAAK,EAAE,EAAE;EAChC,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IAAIC,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,IAAI,EAAED,OAAO,IAAI,EAAE,IAAIA,OAAO,IAAI,EAAE,CAAC,EAAE;EAC/D,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IACEC,IAAI,KAAK,CAAC,IACTA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAE,IACvBD,OAAO,IAAI,EAAE,IAAIA,OAAO,IAAI,EAAG,EAChC;EACA,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;EAGA,IAAA,OAAO,OAAO,CAAA;KACf;IACDJ,QAAQA,CAACG,CAAC,EAAE;EACV,IAAA,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,EAAE,EAAE;EACvB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,EAAE,EAAE;EACvB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IAAKA,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,EAAE,IAAMA,CAAC,IAAI,EAAE,IAAIA,CAAC,IAAI,EAAG,EAAE;EAC/C,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,OAAO,OAAO,CAAA;KACf;IACDF,OAAOA,CAACE,CAAC,EAAE;MACT,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,GAAG,OAAO,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAE;EAChC,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;EACA,IAAA,OAAO,OAAO,CAAA;KACf;IACDD,KAAKA,CAACC,CAAC,EAAE;MACP,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MACA,IAAIA,CAAC,KAAK,CAAC,EAAE;EACX,MAAA,OAAO,MAAM,CAAA;EACf,KAAA;EACA,IAAA,OAAO,OAAO,CAAA;EAChB,GAAA;EAEF,CAAC;;ECrdH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMG,SAAS,SAASvD,sBAAsB,CAAC;EA8FpD;EACF;EACA;EACA;EACEZ,EAAAA,WAAWA,CAACoE,OAAO,EAAEvF,MAAM,EAAE;EAC3B,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAjGTuF,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAMPvF,MAAM,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGNwF,IAAI,GAAA,KAAA,CAAA,CAAA;MAAA,IAGJC,CAAAA,aAAa,GAAG,2BAA2B,CAAA;MAAA,IAG3CC,CAAAA,YAAY,GAAG,2BAA2B,CAAA;MAAA,IAG1CC,CAAAA,gBAAgB,GAAG,gCAAgC,CAAA;MAAA,IAGnDC,CAAAA,YAAY,GAAG,0BAA0B,CAAA;MAAA,IAGzCC,CAAAA,oBAAoB,GAAG,oCAAoC,CAAA;MAAA,IAG3DC,CAAAA,kBAAkB,GAAG,iCAAiC,CAAA;MAAA,IAGtDC,CAAAA,kBAAkB,GAAG,iCAAiC,CAAA;MAAA,IAGtDC,CAAAA,mBAAmB,GAAG,kCAAkC,CAAA;MAAA,IAGxDC,CAAAA,0BAA0B,GAAG,0CAA0C,CAAA;MAAA,IAGvEC,CAAAA,uBAAuB,GAAG,uCAAuC,CAAA;MAAA,IAGjEC,CAAAA,4BAA4B,GAAG,6CAA6C,CAAA;MAAA,IAG5EC,CAAAA,0BAA0B,GAAG,iCAAiC,CAAA;MAAA,IAG9DC,CAAAA,+BAA+B,GAAG,uCAAuC,CAAA;MAAA,IAGzEC,CAAAA,wBAAwB,GAAG,sCAAsC,CAAA;MAAA,IAGjEC,CAAAA,kBAAkB,GAAG,8BAA8B,CAAA;MAAA,IAGnDC,CAAAA,oBAAoB,GAAG,oCAAoC,CAAA;MAAA,IAG3DC,CAAAA,mBAAmB,GAAG,kCAAkC,CAAA;MAAA,IAGxDC,CAAAA,wBAAwB,GAAG,wCAAwC,CAAA;MAAA,IAGnEC,CAAAA,mBAAmB,GAAG,kCAAkC,CAAA;EAAA,IAAA,IAAA,CAGxDC,SAAS,GAAA,KAAA,CAAA,CAAA;MAAA,IAGTC,CAAAA,6BAA6B,GAAG,KAAK,CAAA;MAAA,IAMrCC,CAAAA,cAAc,GAAG,IAAI,CAAA;MAAA,IAMrBC,CAAAA,YAAY,GAAG,IAAI,CAAA;MAAA,IAMnBC,CAAAA,YAAY,GAAG,IAAI,CAAA;EASjB,IAAA,IAAI,EAAEzB,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,WAAW;EAC1BC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MAEtB,IAAI,CAACvF,MAAM,GAAGnC,YAAY,CACxByH,SAAS,CAAC2B,QAAQ,EAClBjH,MAAM,IAAI,EAAE,EACZe,gBAAgB,CAACwE,OAAO,CAACvE,OAAO,CAClC,CAAC,CAAA;EAED,IAAA,IAAI,CAACwE,IAAI,GAAG,IAAIvD,IAAI,CAAClD,wBAAwB,CAAC,IAAI,CAACiB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;EAEnE,IAAA,MAAM4G,SAAS,GAAG,IAAI,CAACrB,OAAO,CAAC2B,gBAAgB,CAAE,CAAG,CAAA,EAAA,IAAI,CAACtB,YAAa,EAAC,CAAC,CAAA;EACxE,IAAA,IAAI,CAACgB,SAAS,CAAC9H,MAAM,EAAE;EACrB,MAAA,OAAO,IAAI,CAAA;EACb,KAAA;MAEA,IAAI,CAAC8H,SAAS,GAAGA,SAAS,CAAA;EAC1B,IAAA,IAAI,CAACC,6BAA6B,GAAGM,MAAM,CAACC,sBAAsB,EAAE,CAAA;MAEpE,IAAI,CAACC,YAAY,EAAE,CAAA;MACnB,IAAI,CAACC,kBAAkB,EAAE,CAAA;EAGzB,IAAA,MAAMC,kBAAkB,GAAG,IAAI,CAACC,sBAAsB,EAAE,CAAA;EACxD,IAAA,IAAI,CAACC,mBAAmB,CAACF,kBAAkB,CAAC,CAAA;EAC9C,GAAA;EAOAF,EAAAA,YAAYA,GAAG;MAEb,IAAI,CAACP,cAAc,GAAGpH,QAAQ,CAACgI,aAAa,CAAC,QAAQ,CAAC,CAAA;MACtD,IAAI,CAACZ,cAAc,CAACa,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;MAClD,IAAI,CAACb,cAAc,CAACa,YAAY,CAAC,OAAO,EAAE,IAAI,CAACjC,YAAY,CAAC,CAAA;MAC5D,IAAI,CAACoB,cAAc,CAACa,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;MAG1D,IAAI,CAACZ,YAAY,GAAGrH,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MAClD,IAAI,CAACX,YAAY,CAACnH,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACrB,kBAAkB,CAAC,CAAA;MACxD,IAAI,CAACO,cAAc,CAACe,WAAW,CAAC,IAAI,CAACd,YAAY,CAAC,CAAA;EAGlD,IAAA,MAAMe,kBAAkB,GAAGpI,QAAQ,CAACgI,aAAa,CAAC,KAAK,CAAC,CAAA;MACxDI,kBAAkB,CAACH,YAAY,CAAC,OAAO,EAAE,IAAI,CAAClC,aAAa,CAAC,CAAA;EAC5DqC,IAAAA,kBAAkB,CAACD,WAAW,CAAC,IAAI,CAACf,cAAc,CAAC,CAAA;EACnD,IAAA,IAAI,CAACvB,OAAO,CAACwC,YAAY,CAACD,kBAAkB,EAAE,IAAI,CAACvC,OAAO,CAACyC,UAAU,CAAC,CAAA;MAGtE,IAAI,CAAChB,YAAY,GAAGtH,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MAClD,IAAI,CAACV,YAAY,CAACpH,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACjC,gBAAgB,CAAC,CAAA;MACtD,IAAI,CAACmB,cAAc,CAACe,WAAW,CAAC,IAAI,CAACb,YAAY,CAAC,CAAA;EAGlD,IAAA,IAAI,CAACF,cAAc,CAACmB,gBAAgB,CAAC,OAAO,EAAE,MAC5C,IAAI,CAACC,qBAAqB,EAC5B,CAAC,CAAA;MAGD,IAAI,eAAe,IAAIxI,QAAQ,EAAE;EAC/BA,MAAAA,QAAQ,CAACuI,gBAAgB,CAAC,aAAa,EAAGE,KAAK,IAC7C,IAAI,CAACC,aAAa,CAACD,KAAK,CAC1B,CAAC,CAAA;EACH,KAAA;EACF,GAAA;EAOAb,EAAAA,kBAAkBA,GAAG;MAEnB,IAAI,CAACV,SAAS,CAACyB,OAAO,CAAC,CAACC,QAAQ,EAAE1J,CAAC,KAAK;QACtC,MAAM2J,OAAO,GAAGD,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAACzC,kBAAmB,CAAA,CAAC,CAAC,CAAA;QACrE,IAAI,CAACwC,OAAO,EAAE;EACZ,QAAA,OAAA;EACF,OAAA;EAGA,MAAA,IAAI,CAACE,qBAAqB,CAACF,OAAO,EAAE3J,CAAC,CAAC,CAAA;QACtC,IAAI,CAAC8J,WAAW,CAAC,IAAI,CAACC,UAAU,CAACL,QAAQ,CAAC,EAAEA,QAAQ,CAAC,CAAA;EAGrDC,MAAAA,OAAO,CAACN,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACW,eAAe,CAACN,QAAQ,CAAC,CAAC,CAAA;EAIvE,MAAA,IAAI,CAACO,eAAe,CAACP,QAAQ,CAAC,CAAA;EAChC,KAAC,CAAC,CAAA;EACJ,GAAA;EASAG,EAAAA,qBAAqBA,CAACF,OAAO,EAAEO,KAAK,EAAE;MACpC,MAAMC,KAAK,GAAGR,OAAO,CAACC,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC1C,kBAAmB,CAAA,CAAC,CAAC,CAAA;MAClE,MAAMkD,QAAQ,GAAGT,OAAO,CAACC,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAACxC,mBAAoB,CAAA,CAAC,CAAC,CAAA;MACtE,MAAMiD,QAAQ,GAAGV,OAAO,CAACC,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC/B,mBAAoB,CAAA,CAAC,CAAC,CAAA;EAEtE,IAAA,IAAI,CAACsC,KAAK,IAAI,CAACC,QAAQ,EAAE;EACvB,MAAA,OAAA;EACF,KAAA;EAGA,IAAA,MAAME,OAAO,GAAGxJ,QAAQ,CAACgI,aAAa,CAAC,QAAQ,CAAC,CAAA;EAChDwB,IAAAA,OAAO,CAACvB,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;EACtCuB,IAAAA,OAAO,CAACvB,YAAY,CAClB,eAAe,EACd,GAAE,IAAI,CAACpC,OAAO,CAAC4D,EAAG,CAAWL,SAAAA,EAAAA,KAAK,GAAG,CAAE,EAC1C,CAAC,CAAA;EAGD,IAAA,KAAK,IAAIlK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmK,KAAK,CAACK,UAAU,CAACtK,MAAM,EAAEF,CAAC,EAAE,EAAE;QAChD,MAAMyK,IAAI,GAAGN,KAAK,CAACK,UAAU,CAACE,IAAI,CAAC1K,CAAC,CAAC,CAAA;EAGrC,MAAA,IAAIyK,IAAI,CAACE,QAAQ,KAAK,IAAI,EAAE;UAC1BL,OAAO,CAACvB,YAAY,CAAC0B,IAAI,CAACE,QAAQ,EAAEF,IAAI,CAACG,SAAS,CAAC,CAAA;EACrD,OAAA;EACF,KAAA;EAGA,IAAA,MAAMC,YAAY,GAAG/J,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MACnD+B,YAAY,CAAC7J,SAAS,CAACgI,GAAG,CAAC,IAAI,CAAC1B,uBAAuB,CAAC,CAAA;EAGxDuD,IAAAA,YAAY,CAACN,EAAE,GAAGJ,KAAK,CAACI,EAAE,CAAA;EAG1B,IAAA,MAAMO,iBAAiB,GAAGhK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MACxDgC,iBAAiB,CAAC9J,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACzB,4BAA4B,CAAC,CAAA;EAClEsD,IAAAA,YAAY,CAAC5B,WAAW,CAAC6B,iBAAiB,CAAC,CAAA;EAE3CA,IAAAA,iBAAiB,CAACC,SAAS,GAAGZ,KAAK,CAACY,SAAS,CAAA;EAG7C,IAAA,MAAMC,eAAe,GAAGlK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MACtDkC,eAAe,CAAChK,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACxB,0BAA0B,CAAC,CAAA;EAI9DwD,IAAAA,eAAe,CAACjC,YAAY,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAA;EAElD,IAAA,MAAMkC,oBAAoB,GAAGnK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MAC3DmC,oBAAoB,CAACjK,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACvB,+BAA+B,CAAC,CAAA;EACxEuD,IAAAA,eAAe,CAAC/B,WAAW,CAACgC,oBAAoB,CAAC,CAAA;EAEjD,IAAA,MAAMC,aAAa,GAAGpK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;EACpD,IAAA,MAAMqC,aAAa,GAAGrK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MACpDqC,aAAa,CAACnK,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACrB,kBAAkB,CAAC,CAAA;EACpDsD,IAAAA,oBAAoB,CAAChC,WAAW,CAACkC,aAAa,CAAC,CAAA;MAC/CD,aAAa,CAAClK,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACtB,wBAAwB,CAAC,CAAA;EAC1DuD,IAAAA,oBAAoB,CAAChC,WAAW,CAACiC,aAAa,CAAC,CAAA;EAO/CZ,IAAAA,OAAO,CAACrB,WAAW,CAAC4B,YAAY,CAAC,CAAA;MACjCP,OAAO,CAACrB,WAAW,CAAC,IAAI,CAACmC,sBAAsB,EAAE,CAAC,CAAA;EAGlD,IAAA,IAAIf,QAAQ,EAAE;EAKZ,MAAA,MAAMgB,YAAY,GAAGvK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;EAEnD,MAAA,MAAMwC,iBAAiB,GAAGxK,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;QACxDwC,iBAAiB,CAACtK,SAAS,CAACgI,GAAG,CAAC,IAAI,CAAClB,wBAAwB,CAAC,CAAA;EAC9DuD,MAAAA,YAAY,CAACpC,WAAW,CAACqC,iBAAiB,CAAC,CAAA;EAG3C,MAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGnB,QAAQ,CAACG,UAAU,CAACtK,MAAM,EAAEqL,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;UAC1D,MAAMZ,QAAQ,GAAGN,QAAQ,CAACG,UAAU,CAACE,IAAI,CAACa,CAAC,CAAC,CAACZ,QAAQ,CAAA;UACrD,MAAMC,SAAS,GAAGP,QAAQ,CAACG,UAAU,CAACE,IAAI,CAACa,CAAC,CAAC,CAACX,SAAS,CAAA;EACvDS,QAAAA,YAAY,CAACtC,YAAY,CAAC4B,QAAQ,EAAEC,SAAS,CAAC,CAAA;EAChD,OAAA;EAGAU,MAAAA,iBAAiB,CAACP,SAAS,GAAGV,QAAQ,CAACU,SAAS,CAAA;QAGhDV,QAAQ,CAACoB,UAAU,CAACC,YAAY,CAACL,YAAY,EAAEhB,QAAQ,CAAC,CAAA;EAExDC,MAAAA,OAAO,CAACrB,WAAW,CAACoC,YAAY,CAAC,CAAA;QACjCf,OAAO,CAACrB,WAAW,CAAC,IAAI,CAACmC,sBAAsB,EAAE,CAAC,CAAA;EACpD,KAAA;EAEAd,IAAAA,OAAO,CAACrB,WAAW,CAAC+B,eAAe,CAAC,CAAA;EAEpCZ,IAAAA,QAAQ,CAACuB,WAAW,CAACxB,KAAK,CAAC,CAAA;EAC3BC,IAAAA,QAAQ,CAACnB,WAAW,CAACqB,OAAO,CAAC,CAAA;EAC/B,GAAA;IAQAd,aAAaA,CAACD,KAAK,EAAE;EACnB,IAAA,MAAMqC,SAAS,GAAGrC,KAAK,CAACsC,MAAM,CAAA;EAG9B,IAAA,IAAI,EAAED,SAAS,YAAYE,OAAO,CAAC,EAAE;EACnC,MAAA,OAAA;EACF,KAAA;MAGA,MAAMpC,QAAQ,GAAGkC,SAAS,CAACG,OAAO,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC/E,YAAa,CAAA,CAAC,CAAC,CAAA;EAC3D,IAAA,IAAI0C,QAAQ,EAAE;EACZ,MAAA,IAAI,CAACI,WAAW,CAAC,IAAI,EAAEJ,QAAQ,CAAC,CAAA;EAClC,KAAA;EACF,GAAA;IAQAM,eAAeA,CAACN,QAAQ,EAAE;EACxB,IAAA,MAAMsC,QAAQ,GAAG,IAAI,CAACjC,UAAU,CAACL,QAAQ,CAAC,CAAA;EAC1C,IAAA,IAAI,CAACI,WAAW,CAAC,CAACkC,QAAQ,EAAEtC,QAAQ,CAAC,CAAA;EAGrC,IAAA,IAAI,CAACuC,UAAU,CAACvC,QAAQ,CAAC,CAAA;EAC3B,GAAA;EAOAJ,EAAAA,qBAAqBA,GAAG;EACtB,IAAA,MAAM4C,WAAW,GAAG,CAAC,IAAI,CAACtD,sBAAsB,EAAE,CAAA;EAGlD,IAAA,IAAI,CAACZ,SAAS,CAACyB,OAAO,CAAEC,QAAQ,IAAK;EACnC,MAAA,IAAI,CAACI,WAAW,CAACoC,WAAW,EAAExC,QAAQ,CAAC,CAAA;EAEvC,MAAA,IAAI,CAACuC,UAAU,CAACvC,QAAQ,CAAC,CAAA;EAC3B,KAAC,CAAC,CAAA;EAEF,IAAA,IAAI,CAACb,mBAAmB,CAACqD,WAAW,CAAC,CAAA;EACvC,GAAA;EASApC,EAAAA,WAAWA,CAACkC,QAAQ,EAAEtC,QAAQ,EAAE;MAC9B,MAAMyB,aAAa,GAAGzB,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAACjC,kBAAmB,CAAA,CAAC,CAAC,CAAA;MAC3E,MAAMuD,aAAa,GAAGxB,QAAQ,CAACE,aAAa,CACzC,CAAA,CAAA,EAAG,IAAI,CAAClC,wBAAyB,CAAA,CACpC,CAAC,CAAA;MACD,MAAM4C,OAAO,GAAGZ,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC1C,kBAAmB,CAAA,CAAC,CAAC,CAAA;MACrE,MAAMiF,QAAQ,GAAGzC,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC7B,mBAAoB,CAAA,CAAC,CAAC,CAAA;EAEvE,IAAA,IACE,CAACoD,aAAa,IACd,EAAED,aAAa,YAAYhI,WAAW,CAAC,IACvC,CAACoH,OAAO,IACR,CAAC6B,QAAQ,EACT;EACA,MAAA,OAAA;EACF,KAAA;MAEA,MAAMC,aAAa,GAAGJ,QAAQ,GAC1B,IAAI,CAACpF,IAAI,CAAClD,CAAC,CAAC,aAAa,CAAC,GAC1B,IAAI,CAACkD,IAAI,CAAClD,CAAC,CAAC,aAAa,CAAC,CAAA;MAE9BwH,aAAa,CAACmB,WAAW,GAAGD,aAAa,CAAA;MACzC9B,OAAO,CAACvB,YAAY,CAAC,eAAe,EAAG,CAAEiD,EAAAA,QAAS,EAAC,CAAC,CAAA;MAGpD,MAAMM,cAAc,GAAG,EAAE,CAAA;MAEzB,MAAMzB,YAAY,GAAGnB,QAAQ,CAACE,aAAa,CACxC,CAAA,CAAA,EAAG,IAAI,CAACtC,uBAAwB,CAAA,CACnC,CAAC,CAAA;MACD,IAAIuD,YAAY,YAAY3H,WAAW,EAAE;QACvCoJ,cAAc,CAACzK,IAAI,CAACgJ,YAAY,CAACwB,WAAW,CAACrK,IAAI,EAAE,CAAC,CAAA;EACtD,KAAA;MAEA,MAAMqI,QAAQ,GAAGX,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC/B,mBAAoB,CAAA,CAAC,CAAC,CAAA;MACvE,IAAIwC,QAAQ,YAAYnH,WAAW,EAAE;QACnCoJ,cAAc,CAACzK,IAAI,CAACwI,QAAQ,CAACgC,WAAW,CAACrK,IAAI,EAAE,CAAC,CAAA;EAClD,KAAA;MAEA,MAAMuK,gBAAgB,GAAGP,QAAQ,GAC7B,IAAI,CAACpF,IAAI,CAAClD,CAAC,CAAC,sBAAsB,CAAC,GACnC,IAAI,CAACkD,IAAI,CAAClD,CAAC,CAAC,sBAAsB,CAAC,CAAA;EACvC4I,IAAAA,cAAc,CAACzK,IAAI,CAAC0K,gBAAgB,CAAC,CAAA;MAOrCjC,OAAO,CAACvB,YAAY,CAAC,YAAY,EAAEuD,cAAc,CAAC3L,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;EAG9D,IAAA,IAAIqL,QAAQ,EAAE;EACZG,MAAAA,QAAQ,CAACK,eAAe,CAAC,QAAQ,CAAC,CAAA;QAClC9C,QAAQ,CAAC1I,SAAS,CAACgI,GAAG,CAAC,IAAI,CAAC/B,oBAAoB,CAAC,CAAA;QACjDkE,aAAa,CAACnK,SAAS,CAACyL,MAAM,CAAC,IAAI,CAAC7E,oBAAoB,CAAC,CAAA;EAC3D,KAAC,MAAM;EACLuE,MAAAA,QAAQ,CAACpD,YAAY,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAA;QAC9CW,QAAQ,CAAC1I,SAAS,CAACyL,MAAM,CAAC,IAAI,CAACxF,oBAAoB,CAAC,CAAA;QACpDkE,aAAa,CAACnK,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACpB,oBAAoB,CAAC,CAAA;EACxD,KAAA;EAGA,IAAA,MAAMe,kBAAkB,GAAG,IAAI,CAACC,sBAAsB,EAAE,CAAA;EACxD,IAAA,IAAI,CAACC,mBAAmB,CAACF,kBAAkB,CAAC,CAAA;EAC9C,GAAA;IASAoB,UAAUA,CAACL,QAAQ,EAAE;MACnB,OAAOA,QAAQ,CAAC1I,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACgG,oBAAoB,CAAC,CAAA;EAC/D,GAAA;EAQA2B,EAAAA,sBAAsBA,GAAG;EAEvB,IAAA,MAAM8D,aAAa,GAAG,IAAI,CAAC1E,SAAS,CAAC9H,MAAM,CAAA;EAE3C,IAAA,MAAMyM,oBAAoB,GAAG,IAAI,CAAChG,OAAO,CAAC2B,gBAAgB,CACvD,CAAA,CAAA,EAAG,IAAI,CAACrB,oBAAqB,CAChC,CAAA,CAAC,CAAC/G,MAAM,CAAA;EACR,IAAA,MAAMyI,kBAAkB,GAAG+D,aAAa,KAAKC,oBAAoB,CAAA;EAEjE,IAAA,OAAOhE,kBAAkB,CAAA;EAC3B,GAAA;IAQAE,mBAAmBA,CAACmD,QAAQ,EAAE;MAC5B,MAAMI,aAAa,GAAGJ,QAAQ,GAC1B,IAAI,CAACpF,IAAI,CAAClD,CAAC,CAAC,iBAAiB,CAAC,GAC9B,IAAI,CAACkD,IAAI,CAAClD,CAAC,CAAC,iBAAiB,CAAC,CAAA;EAElC,IAAA,IAAI,CAACwE,cAAc,CAACa,YAAY,CAAC,eAAe,EAAEiD,QAAQ,CAACY,QAAQ,EAAE,CAAC,CAAA;EACtE,IAAA,IAAI,CAACxE,YAAY,CAACiE,WAAW,GAAGD,aAAa,CAAA;EAG7C,IAAA,IAAIJ,QAAQ,EAAE;QACZ,IAAI,CAAC7D,YAAY,CAACnH,SAAS,CAACyL,MAAM,CAAC,IAAI,CAAC7E,oBAAoB,CAAC,CAAA;EAC/D,KAAC,MAAM;QACL,IAAI,CAACO,YAAY,CAACnH,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACpB,oBAAoB,CAAC,CAAA;EAC5D,KAAA;EACF,GAAA;IAQAqE,UAAUA,CAACvC,QAAQ,EAAE;MACnB,IAAI,IAAI,CAACzB,6BAA6B,IAAI,IAAI,CAAC7G,MAAM,CAACyL,gBAAgB,EAAE;QAItE,MAAMvC,OAAO,GAAGZ,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC1C,kBAAmB,CAAA,CAAC,CAAC,CAAA;EAErE,MAAA,IAAIoD,OAAO,EAAE;EACX,QAAA,MAAMwC,SAAS,GAAGxC,OAAO,CAACyC,YAAY,CAAC,eAAe,CAAC,CAAA;EACvD,QAAA,MAAMC,YAAY,GAAG1C,OAAO,CAACyC,YAAY,CAAC,eAAe,CAAC,CAAA;UAG1D,IAAID,SAAS,IAAIE,YAAY,EAAE;YAC7B/J,MAAM,CAACgK,cAAc,CAACC,OAAO,CAACJ,SAAS,EAAEE,YAAY,CAAC,CAAA;EACxD,SAAA;EACF,OAAA;EACF,KAAA;EACF,GAAA;IAQA/C,eAAeA,CAACP,QAAQ,EAAE;MACxB,IAAI,IAAI,CAACzB,6BAA6B,IAAI,IAAI,CAAC7G,MAAM,CAACyL,gBAAgB,EAAE;QACtE,MAAMvC,OAAO,GAAGZ,QAAQ,CAACE,aAAa,CAAE,CAAA,CAAA,EAAG,IAAI,CAAC1C,kBAAmB,CAAA,CAAC,CAAC,CAAA;EAErE,MAAA,IAAIoD,OAAO,EAAE;EACX,QAAA,MAAMwC,SAAS,GAAGxC,OAAO,CAACyC,YAAY,CAAC,eAAe,CAAC,CAAA;EACvD,QAAA,MAAMC,YAAY,GAAGF,SAAS,GAC1B7J,MAAM,CAACgK,cAAc,CAACE,OAAO,CAACL,SAAS,CAAC,GACxC,IAAI,CAAA;UAER,IAAIE,YAAY,KAAK,IAAI,EAAE;YACzB,IAAI,CAAClD,WAAW,CAACkD,YAAY,KAAK,MAAM,EAAEtD,QAAQ,CAAC,CAAA;EACrD,SAAA;EACF,OAAA;EACF,KAAA;EACF,GAAA;EAYA0B,EAAAA,sBAAsBA,GAAG;EACvB,IAAA,MAAMgC,cAAc,GAAGtM,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MACrDsE,cAAc,CAACpM,SAAS,CAACgI,GAAG,CAC1B,uBAAuB,EACvB,IAAI,CAAC3B,0BACP,CAAC,CAAA;MACD+F,cAAc,CAACrC,SAAS,GAAG,IAAI,CAAA;EAC/B,IAAA,OAAOqC,cAAc,CAAA;EACvB,GAAA;EA0BF,CAAA;EArkBa1G,SAAS,CAgjBb2G,UAAU,GAAG,iBAAiB,CAAA;EAhjB1B3G,SAAS,CA0jBb2B,QAAQ,GAAG5I,MAAM,CAAC6N,MAAM,CAAC;EAC9B1G,EAAAA,IAAI,EAAE;EACJ2G,IAAAA,eAAe,EAAE,mBAAmB;EACpCC,IAAAA,WAAW,EAAE,MAAM;EACnBC,IAAAA,oBAAoB,EAAE,mBAAmB;EACzCC,IAAAA,eAAe,EAAE,mBAAmB;EACpCC,IAAAA,WAAW,EAAE,MAAM;EACnBC,IAAAA,oBAAoB,EAAE,mBAAA;KACvB;EACDf,EAAAA,gBAAgB,EAAE,IAAA;EACpB,CAAC,CAAC,CAAA;EAGJ,MAAMtE,MAAM,GAAG;EACb;EACF;EACA;EACA;EACA;IACEC,sBAAsB,EAAE,YAAY;MAClC,MAAMqF,UAAU,GAAG,yBAAyB,CAAA;EAC5C,IAAA,IAAIC,MAAM,CAAA;MACV,IAAI;QACF7K,MAAM,CAACgK,cAAc,CAACC,OAAO,CAACW,UAAU,EAAEA,UAAU,CAAC,CAAA;EACrDC,MAAAA,MAAM,GACJ7K,MAAM,CAACgK,cAAc,CAACE,OAAO,CAACU,UAAU,CAAC,KAAKA,UAAU,CAACjB,QAAQ,EAAE,CAAA;EACrE3J,MAAAA,MAAM,CAACgK,cAAc,CAACc,UAAU,CAACF,UAAU,CAAC,CAAA;EAC5C,MAAA,OAAOC,MAAM,CAAA;OACd,CAAC,OAAOE,SAAS,EAAE;EAClB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACF,GAAA;EACF,CAAC,CAAA;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EC1oBA,MAAMC,SAAS,GAAG,EAAE,CAAA;EACpB,MAAMC,2BAA2B,GAAG,CAAC,CAAA;;EAErC;EACA;EACA;EACA;EACA;EACO,MAAMC,MAAM,SAAShL,sBAAsB,CAAC;EAgBjD;EACF;EACA;EACA;EACEZ,EAAAA,WAAWA,CAACoE,OAAO,EAAEvF,MAAM,EAAE;EAC3B,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAnBTuF,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAMPvF,MAAM,GAAA,KAAA,CAAA,CAAA;MAAA,IAMNgN,CAAAA,uBAAuB,GAAG,IAAI,CAAA;EAS5B,IAAA,IAAI,EAAEzH,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,QAAQ;EACvBC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MAEtB,IAAI,CAACvF,MAAM,GAAGnC,YAAY,CACxBkP,MAAM,CAAC9F,QAAQ,EACfjH,MAAM,IAAI,EAAE,EACZe,gBAAgB,CAACwE,OAAO,CAACvE,OAAO,CAClC,CAAC,CAAA;EAED,IAAA,IAAI,CAACuE,OAAO,CAAC0C,gBAAgB,CAAC,SAAS,EAAGE,KAAK,IAC7C,IAAI,CAAC8E,aAAa,CAAC9E,KAAK,CAC1B,CAAC,CAAA;EACD,IAAA,IAAI,CAAC5C,OAAO,CAAC0C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAAC+E,QAAQ,CAAC/E,KAAK,CAAC,CAAC,CAAA;EACzE,GAAA;IAaA8E,aAAaA,CAAC9E,KAAK,EAAE;EACnB,IAAA,MAAMgF,OAAO,GAAGhF,KAAK,CAACsC,MAAM,CAAA;EAG5B,IAAA,IAAItC,KAAK,CAACiF,OAAO,KAAKP,SAAS,EAAE;EAC/B,MAAA,OAAA;EACF,KAAA;EAGA,IAAA,IACEM,OAAO,YAAYrL,WAAW,IAC9BqL,OAAO,CAACxB,YAAY,CAAC,MAAM,CAAC,KAAK,QAAQ,EACzC;QACAxD,KAAK,CAACkF,cAAc,EAAE,CAAA;QACtBF,OAAO,CAACG,KAAK,EAAE,CAAA;EACjB,KAAA;EACF,GAAA;IAaAJ,QAAQA,CAAC/E,KAAK,EAAE;EAEd,IAAA,IAAI,CAAC,IAAI,CAACnI,MAAM,CAACuN,kBAAkB,EAAE;EACnC,MAAA,OAAA;EACF,KAAA;MAGA,IAAI,IAAI,CAACP,uBAAuB,EAAE;QAChC7E,KAAK,CAACkF,cAAc,EAAE,CAAA;EACtB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EAEA,IAAA,IAAI,CAACL,uBAAuB,GAAGnL,MAAM,CAAC2L,UAAU,CAAC,MAAM;QACrD,IAAI,CAACR,uBAAuB,GAAG,IAAI,CAAA;EACrC,KAAC,EAAEF,2BAA2B,GAAG,IAAI,CAAC,CAAA;EACxC,GAAA;EAkBF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EA7HaC,MAAM,CAwGVd,UAAU,GAAG,cAAc,CAAA;EAxGvBc,MAAM,CAkHV9F,QAAQ,GAAG5I,MAAM,CAAC6N,MAAM,CAAC;EAC9BqB,EAAAA,kBAAkB,EAAE,KAAA;EACtB,CAAC,CAAC;;ECzHG,SAASE,qBAAqBA,CAACC,QAAQ,EAAEC,aAAa,EAAE;IAC7D,MAAMC,4BAA4B,GAAGF,QAAQ,CAAC/C,OAAO,CAAE,CAAA,CAAA,EAAGgD,aAAc,CAAA,CAAA,CAAE,CAAC,CAAA;IAC3E,OAAOC,4BAA4B,GAC/BA,4BAA4B,CAACjC,YAAY,CAACgC,aAAa,CAAC,GACxD,IAAI,CAAA;EACV;;ECFA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAME,cAAc,SAAS9L,sBAAsB,CAAC;EA8CzD;EACF;EACA;EACA;EACEZ,EAAAA,WAAWA,CAACoE,OAAO,EAAEvF,MAAM,EAAE;EAC3B,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAjDTuF,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGPuI,SAAS,GAAA,KAAA,CAAA,CAAA;MAAA,IAMTC,CAAAA,oBAAoB,GAAG,IAAI,CAAA;MAAA,IAM3BC,CAAAA,yBAAyB,GAAG,IAAI,CAAA;MAAA,IAMhCC,CAAAA,kBAAkB,GAAG,IAAI,CAAA;MAAA,IAGzBC,CAAAA,cAAc,GAAG,EAAE,CAAA;MAAA,IAMnBC,CAAAA,YAAY,GAAG,IAAI,CAAA;EAAA,IAAA,IAAA,CAMnBnO,MAAM,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGNwF,IAAI,GAAA,KAAA,CAAA,CAAA;MAAA,IAGJ4I,CAAAA,SAAS,GAAGC,QAAQ,CAAA;EASlB,IAAA,IAAI,EAAE9I,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,iBAAiB;EAChCC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,MAAMoM,SAAS,GAAGvI,OAAO,CAACiD,aAAa,CAAC,2BAA2B,CAAC,CAAA;MACpE,IACE,EACEsF,SAAS,YAAYQ,mBAAmB,IACxCR,SAAS,YAAYS,gBAAgB,CACtC,EACD;EACA,MAAA,MAAM,IAAIhN,YAAY,CAACuM,SAAS,EAAE;EAChCrM,QAAAA,aAAa,EAAE,iBAAiB;EAChCC,QAAAA,UAAU,EAAE,2BAA2B;EACvCC,QAAAA,YAAY,EAAE,yCAAA;EAChB,OAAC,CAAC,CAAA;EACJ,KAAA;EAGA,IAAA,MAAM6M,aAAa,GAAGzN,gBAAgB,CAACwE,OAAO,CAACvE,OAAO,CAAC,CAAA;MASvD,IAAIyN,eAAe,GAAG,EAAE,CAAA;EACxB,IAAA,IAAI,UAAU,IAAID,aAAa,IAAI,WAAW,IAAIA,aAAa,EAAE;EAC/DC,MAAAA,eAAe,GAAG;EAChBC,QAAAA,SAAS,EAAEC,SAAS;EACpBC,QAAAA,QAAQ,EAAED,SAAAA;SACX,CAAA;EACH,KAAA;EAEA,IAAA,IAAI,CAAC3O,MAAM,GAAGnC,YAAY,CACxBgQ,cAAc,CAAC5G,QAAQ,EACvBjH,MAAM,IAAI,EAAE,EACZyO,eAAe,EACfD,aACF,CAAC,CAAA;MAGD,MAAMnO,MAAM,GAAGP,cAAc,CAAC+N,cAAc,CAAC9N,MAAM,EAAE,IAAI,CAACC,MAAM,CAAC,CAAA;EACjE,IAAA,IAAIK,MAAM,CAAC,CAAC,CAAC,EAAE;QACb,MAAM,IAAIiB,WAAW,CAAE,CAAA,iBAAA,EAAmBjB,MAAM,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC,CAAA;EACxD,KAAA;EAEA,IAAA,IAAI,CAACmF,IAAI,GAAG,IAAIvD,IAAI,CAAClD,wBAAwB,CAAC,IAAI,CAACiB,MAAM,EAAE,MAAM,CAAC,EAAE;EAElEmC,MAAAA,MAAM,EAAEsL,qBAAqB,CAAClI,OAAO,EAAE,MAAM,CAAA;EAC/C,KAAC,CAAC,CAAA;EAGF,IAAA,IAAI,CAAC6I,SAAS,GAAG,IAAI,CAACpO,MAAM,CAAC4O,QAAQ,IAAI,IAAI,CAAC5O,MAAM,CAAC0O,SAAS,CAAA;MAE9D,IAAI,CAACnJ,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAI,CAACuI,SAAS,GAAGA,SAAS,CAAA;MAE1B,MAAMe,qBAAqB,GAAI,CAAE,EAAA,IAAI,CAACf,SAAS,CAAC3E,EAAG,CAAM,KAAA,CAAA,CAAA;EACzD,IAAA,MAAM2F,oBAAoB,GAAGpP,QAAQ,CAACqP,cAAc,CAACF,qBAAqB,CAAC,CAAA;MAC3E,IAAI,CAACC,oBAAoB,EAAE;EACzB,MAAA,MAAM,IAAIvN,YAAY,CAACuN,oBAAoB,EAAE;EAC3CrN,QAAAA,aAAa,EAAE,iBAAiB;UAChCC,UAAU,EAAG,IAAGmN,qBAAsB,CAAA,CAAA;EACxC,OAAC,CAAC,CAAA;EACJ,KAAA;MAKA,IAAIC,oBAAoB,CAAC7D,WAAW,CAACrI,KAAK,CAAC,OAAO,CAAC,EAAE;QACnDkM,oBAAoB,CAAC7D,WAAW,GAAG,IAAI,CAACzF,IAAI,CAAClD,CAAC,CAAC,qBAAqB,EAAE;UACpEG,KAAK,EAAE,IAAI,CAAC2L,SAAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAIA,IAAI,CAACN,SAAS,CAACkB,qBAAqB,CAAC,UAAU,EAAEF,oBAAoB,CAAC,CAAA;EAItE,IAAA,MAAMd,yBAAyB,GAAGtO,QAAQ,CAACgI,aAAa,CAAC,KAAK,CAAC,CAAA;MAC/DsG,yBAAyB,CAACiB,SAAS,GACjC,wDAAwD,CAAA;EAC1DjB,IAAAA,yBAAyB,CAACrG,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;MAC7D,IAAI,CAACqG,yBAAyB,GAAGA,yBAAyB,CAAA;EAC1Dc,IAAAA,oBAAoB,CAACE,qBAAqB,CACxC,UAAU,EACVhB,yBACF,CAAC,CAAA;EAKD,IAAA,MAAMD,oBAAoB,GAAGrO,QAAQ,CAACgI,aAAa,CAAC,KAAK,CAAC,CAAA;EAC1DqG,IAAAA,oBAAoB,CAACkB,SAAS,GAAGH,oBAAoB,CAACG,SAAS,CAAA;EAC/DlB,IAAAA,oBAAoB,CAACnO,SAAS,CAACgI,GAAG,CAAC,+BAA+B,CAAC,CAAA;EACnEmG,IAAAA,oBAAoB,CAACpG,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAA;MACxD,IAAI,CAACoG,oBAAoB,GAAGA,oBAAoB,CAAA;EAChDe,IAAAA,oBAAoB,CAACE,qBAAqB,CAAC,UAAU,EAAEjB,oBAAoB,CAAC,CAAA;EAG5Ee,IAAAA,oBAAoB,CAAClP,SAAS,CAACgI,GAAG,CAAC,uBAAuB,CAAC,CAAA;EAG3D,IAAA,IAAI,CAACkG,SAAS,CAAC1C,eAAe,CAAC,WAAW,CAAC,CAAA;MAE3C,IAAI,CAAC8D,gBAAgB,EAAE,CAAA;MAKvBrN,MAAM,CAACoG,gBAAgB,CAAC,UAAU,EAAE,MAAM,IAAI,CAACkH,kBAAkB,EAAE,CAAC,CAAA;MAKpE,IAAI,CAACA,kBAAkB,EAAE,CAAA;EAC3B,GAAA;EAUAD,EAAAA,gBAAgBA,GAAG;EACjB,IAAA,IAAI,CAACpB,SAAS,CAAC7F,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACmH,WAAW,EAAE,CAAC,CAAA;EAGlE,IAAA,IAAI,CAACtB,SAAS,CAAC7F,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACoH,WAAW,EAAE,CAAC,CAAA;EAClE,IAAA,IAAI,CAACvB,SAAS,CAAC7F,gBAAgB,CAAC,MAAM,EAAE,MAAM,IAAI,CAACqH,UAAU,EAAE,CAAC,CAAA;EAClE,GAAA;EAUAF,EAAAA,WAAWA,GAAG;MACZ,IAAI,CAACG,yBAAyB,EAAE,CAAA;EAChC,IAAA,IAAI,CAACtB,kBAAkB,GAAGuB,IAAI,CAACC,GAAG,EAAE,CAAA;EACtC,GAAA;EAiBAJ,EAAAA,WAAWA,GAAG;EACZ,IAAA,IAAI,CAAClB,YAAY,GAAGtM,MAAM,CAAC6N,WAAW,CAAC,MAAM;EAC3C,MAAA,IACE,CAAC,IAAI,CAACzB,kBAAkB,IACxBuB,IAAI,CAACC,GAAG,EAAE,GAAG,GAAG,IAAI,IAAI,CAACxB,kBAAkB,EAC3C;UACA,IAAI,CAAC0B,oBAAoB,EAAE,CAAA;EAC7B,OAAA;OACD,EAAE,IAAI,CAAC,CAAA;EACV,GAAA;EASAL,EAAAA,UAAUA,GAAG;EAEXM,IAAAA,aAAa,CAAC,IAAI,CAACzB,YAAY,CAAC,CAAA;EAClC,GAAA;EAOAwB,EAAAA,oBAAoBA,GAAG;MACrB,IAAI,IAAI,CAAC7B,SAAS,CAACrP,KAAK,KAAK,IAAI,CAACyP,cAAc,EAAE;EAChD,MAAA,IAAI,CAACA,cAAc,GAAG,IAAI,CAACJ,SAAS,CAACrP,KAAK,CAAA;QAC1C,IAAI,CAAC0Q,kBAAkB,EAAE,CAAA;EAC3B,KAAA;EACF,GAAA;EAUAA,EAAAA,kBAAkBA,GAAG;MACnB,IAAI,CAACI,yBAAyB,EAAE,CAAA;MAChC,IAAI,CAACM,8BAA8B,EAAE,CAAA;EACvC,GAAA;EAOAN,EAAAA,yBAAyBA,GAAG;EAC1B,IAAA,MAAMO,eAAe,GAAG,IAAI,CAAC1B,SAAS,GAAG,IAAI,CAAC3L,KAAK,CAAC,IAAI,CAACqL,SAAS,CAACrP,KAAK,CAAC,CAAA;EAIzE,IAAA,IAAI,IAAI,CAACsR,eAAe,EAAE,EAAE;QAC1B,IAAI,CAAChC,oBAAoB,CAACnO,SAAS,CAACyL,MAAM,CACxC,0CACF,CAAC,CAAA;EACH,KAAC,MAAM;QACL,IAAI,CAAC0C,oBAAoB,CAACnO,SAAS,CAACgI,GAAG,CACrC,0CACF,CAAC,CAAA;EACH,KAAA;MAGA,IAAIkI,eAAe,GAAG,CAAC,EAAE;QACvB,IAAI,CAAChC,SAAS,CAAClO,SAAS,CAACgI,GAAG,CAAC,uBAAuB,CAAC,CAAA;QACrD,IAAI,CAACmG,oBAAoB,CAACnO,SAAS,CAACyL,MAAM,CAAC,YAAY,CAAC,CAAA;QACxD,IAAI,CAAC0C,oBAAoB,CAACnO,SAAS,CAACgI,GAAG,CAAC,qBAAqB,CAAC,CAAA;EAChE,KAAC,MAAM;QACL,IAAI,CAACkG,SAAS,CAAClO,SAAS,CAACyL,MAAM,CAAC,uBAAuB,CAAC,CAAA;QACxD,IAAI,CAAC0C,oBAAoB,CAACnO,SAAS,CAACyL,MAAM,CAAC,qBAAqB,CAAC,CAAA;QACjE,IAAI,CAAC0C,oBAAoB,CAACnO,SAAS,CAACgI,GAAG,CAAC,YAAY,CAAC,CAAA;EACvD,KAAA;MAGA,IAAI,CAACmG,oBAAoB,CAAC9C,WAAW,GAAG,IAAI,CAAC+E,eAAe,EAAE,CAAA;EAChE,GAAA;EAOAH,EAAAA,8BAA8BA,GAAG;EAG/B,IAAA,IAAI,IAAI,CAACE,eAAe,EAAE,EAAE;EAC1B,MAAA,IAAI,CAAC/B,yBAAyB,CAAC5C,eAAe,CAAC,aAAa,CAAC,CAAA;EAC/D,KAAC,MAAM;QACL,IAAI,CAAC4C,yBAAyB,CAACrG,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAA;EACpE,KAAA;MAGA,IAAI,CAACqG,yBAAyB,CAAC/C,WAAW,GAAG,IAAI,CAAC+E,eAAe,EAAE,CAAA;EACrE,GAAA;IAUAvN,KAAKA,CAACwN,IAAI,EAAE;EACV,IAAA,IAAI,IAAI,CAACjQ,MAAM,CAAC4O,QAAQ,EAAE;QACxB,MAAMsB,MAAM,GAAGD,IAAI,CAACrN,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;QACvC,OAAOsN,MAAM,CAACpR,MAAM,CAAA;EACtB,KAAC,MAAM;QACL,OAAOmR,IAAI,CAACnR,MAAM,CAAA;EACpB,KAAA;EACF,GAAA;EAQAkR,EAAAA,eAAeA,GAAG;EAChB,IAAA,MAAMF,eAAe,GAAG,IAAI,CAAC1B,SAAS,GAAG,IAAI,CAAC3L,KAAK,CAAC,IAAI,CAACqL,SAAS,CAACrP,KAAK,CAAC,CAAA;MACzE,MAAM0R,SAAS,GAAG,IAAI,CAACnQ,MAAM,CAAC4O,QAAQ,GAAG,OAAO,GAAG,YAAY,CAAA;EAC/D,IAAA,OAAO,IAAI,CAACwB,kBAAkB,CAACN,eAAe,EAAEK,SAAS,CAAC,CAAA;EAC5D,GAAA;EAWAC,EAAAA,kBAAkBA,CAACN,eAAe,EAAEK,SAAS,EAAE;MAC7C,IAAIL,eAAe,KAAK,CAAC,EAAE;QACzB,OAAO,IAAI,CAACtK,IAAI,CAAClD,CAAC,CAAE,CAAA,EAAE6N,SAAU,CAAA,OAAA,CAAQ,CAAC,CAAA;EAC3C,KAAA;MAEA,MAAME,oBAAoB,GACxBP,eAAe,GAAG,CAAC,GAAG,WAAW,GAAG,YAAY,CAAA;MAElD,OAAO,IAAI,CAACtK,IAAI,CAAClD,CAAC,CAAE,CAAA,EAAE6N,SAAU,CAAA,EAAEE,oBAAqB,CAAA,CAAC,EAAE;EACxD5N,MAAAA,KAAK,EAAEuB,IAAI,CAACC,GAAG,CAAC6L,eAAe,CAAA;EACjC,KAAC,CAAC,CAAA;EACJ,GAAA;EAaAC,EAAAA,eAAeA,GAAG;EAEhB,IAAA,IAAI,CAAC,IAAI,CAAC/P,MAAM,CAACsQ,SAAS,EAAE;EAC1B,MAAA,OAAO,IAAI,CAAA;EACb,KAAA;MAGA,MAAMC,aAAa,GAAG,IAAI,CAAC9N,KAAK,CAAC,IAAI,CAACqL,SAAS,CAACrP,KAAK,CAAC,CAAA;EACtD,IAAA,MAAM2P,SAAS,GAAG,IAAI,CAACA,SAAS,CAAA;MAEhC,MAAMoC,cAAc,GAAIpC,SAAS,GAAG,IAAI,CAACpO,MAAM,CAACsQ,SAAS,GAAI,GAAG,CAAA;MAEhE,OAAOE,cAAc,IAAID,aAAa,CAAA;EACxC,GAAA;EA8DF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EAhhBa1C,cAAc,CAoZlB5B,UAAU,GAAG,uBAAuB,CAAA;EApZhC4B,cAAc,CA8ZlB5G,QAAQ,GAAG5I,MAAM,CAAC6N,MAAM,CAAC;EAC9BoE,EAAAA,SAAS,EAAE,CAAC;EACZ9K,EAAAA,IAAI,EAAE;EAEJiL,IAAAA,oBAAoB,EAAE;EACpBC,MAAAA,GAAG,EAAE,uCAAuC;EAC5CC,MAAAA,KAAK,EAAE,wCAAA;OACR;EACDC,IAAAA,iBAAiB,EAAE,iCAAiC;EACpDC,IAAAA,mBAAmB,EAAE;EACnBH,MAAAA,GAAG,EAAE,sCAAsC;EAC3CC,MAAAA,KAAK,EAAE,uCAAA;OACR;EAEDG,IAAAA,eAAe,EAAE;EACfJ,MAAAA,GAAG,EAAE,kCAAkC;EACvCC,MAAAA,KAAK,EAAE,mCAAA;OACR;EACDI,IAAAA,YAAY,EAAE,4BAA4B;EAC1CC,IAAAA,cAAc,EAAE;EACdN,MAAAA,GAAG,EAAE,iCAAiC;EACtCC,MAAAA,KAAK,EAAE,kCAAA;OACR;EACDM,IAAAA,mBAAmB,EAAE;EACnBN,MAAAA,KAAK,EAAE,EAAA;EACT,KAAA;EACF,GAAA;EACF,CAAC,CAAC,CAAA;EAzbS9C,cAAc,CAiclB9N,MAAM,GAAG1B,MAAM,CAAC6N,MAAM,CAAC;EAC5BgF,EAAAA,KAAK,EAAE,CACL;MACE5Q,QAAQ,EAAE,CAAC,UAAU,CAAC;EACtBC,IAAAA,YAAY,EAAE,mDAAA;EAChB,GAAC,EACD;MACED,QAAQ,EAAE,CAAC,WAAW,CAAC;EACvBC,IAAAA,YAAY,EAAE,mDAAA;KACf,CAAA;EAEL,CAAC,CAAC;;ECheJ;EACA;EACA;EACA;EACA;EACO,MAAM4Q,UAAU,SAASpP,sBAAsB,CAAC;EAOrD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACEZ,WAAWA,CAACoE,OAAO,EAAE;EACnB,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CApBTA,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGP6L,OAAO,GAAA,KAAA,CAAA,CAAA;EAmBL,IAAA,IAAI,EAAE7L,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,YAAY;EAC3BC,QAAAA,UAAU,EAAG,CAAA,cAAA,EAAgByP,UAAU,CAAClF,UAAW,CAAA,EAAA,CAAA;EACrD,OAAC,CAAC,CAAA;EACJ,KAAA;EAGA,IAAA,MAAMmF,OAAO,GAAG7L,OAAO,CAAC2B,gBAAgB,CAAC,wBAAwB,CAAC,CAAA;EAClE,IAAA,IAAI,CAACkK,OAAO,CAACtS,MAAM,EAAE;EACnB,MAAA,MAAM,IAAIyC,YAAY,CAAC,IAAI,EAAE;EAC3BE,QAAAA,aAAa,EAAE,YAAY;EAC3BC,QAAAA,UAAU,EAAE,wBAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAI,CAAC6L,OAAO,GAAGA,OAAO,CAAA;EAEtB,IAAA,IAAI,CAACA,OAAO,CAAC/I,OAAO,CAAEgJ,MAAM,IAAK;EAC/B,MAAA,MAAMC,QAAQ,GAAGD,MAAM,CAAC1F,YAAY,CAAC,oBAAoB,CAAC,CAAA;QAG1D,IAAI,CAAC2F,QAAQ,EAAE;EACb,QAAA,OAAA;EACF,OAAA;EAGA,MAAA,IAAI,CAAC5R,QAAQ,CAACqP,cAAc,CAACuC,QAAQ,CAAC,EAAE;EACtC,QAAA,MAAM,IAAI/P,YAAY,CAAC,IAAI,EAAE;EAC3BE,UAAAA,aAAa,EAAE,YAAY;YAC3BC,UAAU,EAAG,IAAG4P,QAAS,CAAA,CAAA;EAC3B,SAAC,CAAC,CAAA;EACJ,OAAA;EAIAD,MAAAA,MAAM,CAAC1J,YAAY,CAAC,eAAe,EAAE2J,QAAQ,CAAC,CAAA;EAC9CD,MAAAA,MAAM,CAACjG,eAAe,CAAC,oBAAoB,CAAC,CAAA;EAC9C,KAAC,CAAC,CAAA;MAKFvJ,MAAM,CAACoG,gBAAgB,CAAC,UAAU,EAAE,MAAM,IAAI,CAACsJ,yBAAyB,EAAE,CAAC,CAAA;MAK3E,IAAI,CAACA,yBAAyB,EAAE,CAAA;EAGhC,IAAA,IAAI,CAAChM,OAAO,CAAC0C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACqJ,WAAW,CAACrJ,KAAK,CAAC,CAAC,CAAA;EAC5E,GAAA;EAOAoJ,EAAAA,yBAAyBA,GAAG;EAC1B,IAAA,IAAI,CAACH,OAAO,CAAC/I,OAAO,CAAEgJ,MAAM,IAC1B,IAAI,CAACI,mCAAmC,CAACJ,MAAM,CACjD,CAAC,CAAA;EACH,GAAA;IAWAI,mCAAmCA,CAACJ,MAAM,EAAE;EAC1C,IAAA,MAAMC,QAAQ,GAAGD,MAAM,CAAC1F,YAAY,CAAC,eAAe,CAAC,CAAA;MACrD,IAAI,CAAC2F,QAAQ,EAAE;EACb,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,MAAMnE,OAAO,GAAGzN,QAAQ,CAACqP,cAAc,CAACuC,QAAQ,CAAC,CAAA;MACjD,IACEnE,OAAO,IACPA,OAAO,CAACvN,SAAS,CAACC,QAAQ,CAAC,+BAA+B,CAAC,EAC3D;EACA,MAAA,MAAM6R,cAAc,GAAGL,MAAM,CAACM,OAAO,CAAA;QAErCN,MAAM,CAAC1J,YAAY,CAAC,eAAe,EAAE+J,cAAc,CAAClG,QAAQ,EAAE,CAAC,CAAA;QAC/D2B,OAAO,CAACvN,SAAS,CAACgS,MAAM,CACtB,uCAAuC,EACvC,CAACF,cACH,CAAC,CAAA;EACH,KAAA;EACF,GAAA;IAWAG,sBAAsBA,CAACR,MAAM,EAAE;MAE7B,MAAMS,qBAAqB,GAAGpS,QAAQ,CAACwH,gBAAgB,CACpD,CAAA,6BAAA,EAA+BmK,MAAM,CAACnR,IAAK,CAAA,EAAA,CAC9C,CAAC,CAAA;EAED4R,IAAAA,qBAAqB,CAACzJ,OAAO,CAAE0J,kBAAkB,IAAK;QACpD,MAAMC,gBAAgB,GAAGX,MAAM,CAACY,IAAI,KAAKF,kBAAkB,CAACE,IAAI,CAAA;EAChE,MAAA,IAAID,gBAAgB,IAAID,kBAAkB,KAAKV,MAAM,EAAE;UACrDU,kBAAkB,CAACJ,OAAO,GAAG,KAAK,CAAA;EAClC,QAAA,IAAI,CAACF,mCAAmC,CAACM,kBAAkB,CAAC,CAAA;EAC9D,OAAA;EACF,KAAC,CAAC,CAAA;EACJ,GAAA;IAYAG,sBAAsBA,CAACb,MAAM,EAAE;MAE7B,MAAMc,0CAA0C,GAC9CzS,QAAQ,CAACwH,gBAAgB,CACtB,CAAA,yDAAA,EAA2DmK,MAAM,CAACnR,IAAK,CAAA,EAAA,CAC1E,CAAC,CAAA;EAEHiS,IAAAA,0CAA0C,CAAC9J,OAAO,CAAE+J,eAAe,IAAK;QACtE,MAAMJ,gBAAgB,GAAGX,MAAM,CAACY,IAAI,KAAKG,eAAe,CAACH,IAAI,CAAA;EAC7D,MAAA,IAAID,gBAAgB,EAAE;UACpBI,eAAe,CAACT,OAAO,GAAG,KAAK,CAAA;EAC/B,QAAA,IAAI,CAACF,mCAAmC,CAACW,eAAe,CAAC,CAAA;EAC3D,OAAA;EACF,KAAC,CAAC,CAAA;EACJ,GAAA;IAWAZ,WAAWA,CAACrJ,KAAK,EAAE;EACjB,IAAA,MAAMkK,aAAa,GAAGlK,KAAK,CAACsC,MAAM,CAAA;MAGlC,IACE,EAAE4H,aAAa,YAAY9D,gBAAgB,CAAC,IAC5C8D,aAAa,CAACC,IAAI,KAAK,UAAU,EACjC;EACA,MAAA,OAAA;EACF,KAAA;EAGA,IAAA,MAAMC,eAAe,GAAGF,aAAa,CAAC1G,YAAY,CAAC,eAAe,CAAC,CAAA;EACnE,IAAA,IAAI4G,eAAe,EAAE;EACnB,MAAA,IAAI,CAACd,mCAAmC,CAACY,aAAa,CAAC,CAAA;EACzD,KAAA;EAGA,IAAA,IAAI,CAACA,aAAa,CAACV,OAAO,EAAE;EAC1B,MAAA,OAAA;EACF,KAAA;MAGA,MAAMa,qBAAqB,GACzBH,aAAa,CAAC1G,YAAY,CAAC,gBAAgB,CAAC,KAAK,WAAW,CAAA;EAC9D,IAAA,IAAI6G,qBAAqB,EAAE;EACzB,MAAA,IAAI,CAACX,sBAAsB,CAACQ,aAAa,CAAC,CAAA;EAC5C,KAAC,MAAM;EACL,MAAA,IAAI,CAACH,sBAAsB,CAACG,aAAa,CAAC,CAAA;EAC5C,KAAA;EACF,GAAA;EAMF,CAAA;EAvNalB,UAAU,CAsNdlF,UAAU,GAAG,kBAAkB;;ECzNxC;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMwG,YAAY,SAAS1Q,sBAAsB,CAAC;EAUvD;EACF;EACA;EACA;EACEZ,EAAAA,WAAWA,CAACoE,OAAO,EAAEvF,MAAM,EAAE;EAC3B,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAbTuF,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAMPvF,MAAM,GAAA,KAAA,CAAA,CAAA;EASJ,IAAA,IAAI,EAAEuF,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,eAAe;EAC9BC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MAEtB,IAAI,CAACvF,MAAM,GAAGnC,YAAY,CACxB4U,YAAY,CAACxL,QAAQ,EACrBjH,MAAM,IAAI,EAAE,EACZe,gBAAgB,CAACwE,OAAO,CAACvE,OAAO,CAClC,CAAC,CAAA;MAED,IAAI,CAAC0R,QAAQ,EAAE,CAAA;EACf,IAAA,IAAI,CAACnN,OAAO,CAAC0C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACqJ,WAAW,CAACrJ,KAAK,CAAC,CAAC,CAAA;EAC5E,GAAA;EAOAuK,EAAAA,QAAQA,GAAG;EACT,IAAA,IAAI,IAAI,CAAC1S,MAAM,CAAC2S,gBAAgB,EAAE;EAChC,MAAA,OAAA;EACF,KAAA;MAIA,IAAI,CAACpN,OAAO,CAACoC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;EAE3C,IAAA,IAAI,CAACpC,OAAO,CAAC0C,gBAAgB,CAAC,MAAM,EAAE,MAAM;EAC1C,MAAA,IAAI,CAAC1C,OAAO,CAAC6F,eAAe,CAAC,UAAU,CAAC,CAAA;EAC1C,KAAC,CAAC,CAAA;EAEF,IAAA,IAAI,CAAC7F,OAAO,CAACqN,KAAK,EAAE,CAAA;EACtB,GAAA;IAQApB,WAAWA,CAACrJ,KAAK,EAAE;EACjB,IAAA,MAAMgF,OAAO,GAAGhF,KAAK,CAACsC,MAAM,CAAA;EAC5B,IAAA,IAAI,IAAI,CAACoI,WAAW,CAAC1F,OAAO,CAAC,EAAE;QAC7BhF,KAAK,CAACkF,cAAc,EAAE,CAAA;EACxB,KAAA;EACF,GAAA;IAqBAwF,WAAWA,CAAC1F,OAAO,EAAE;EAEnB,IAAA,IAAI,EAAEA,OAAO,YAAY2F,iBAAiB,CAAC,EAAE;EAC3C,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MAEA,MAAMC,OAAO,GAAG,IAAI,CAACC,kBAAkB,CAAC7F,OAAO,CAAC8F,IAAI,CAAC,CAAA;MACrD,IAAI,CAACF,OAAO,EAAE;EACZ,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EAEA,IAAA,MAAM1B,MAAM,GAAG3R,QAAQ,CAACqP,cAAc,CAACgE,OAAO,CAAC,CAAA;MAC/C,IAAI,CAAC1B,MAAM,EAAE;EACX,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EAEA,IAAA,MAAM6B,cAAc,GAAG,IAAI,CAACC,0BAA0B,CAAC9B,MAAM,CAAC,CAAA;MAC9D,IAAI,CAAC6B,cAAc,EAAE;EACnB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;MAKAA,cAAc,CAACE,cAAc,EAAE,CAAA;MAC/B/B,MAAM,CAACuB,KAAK,CAAC;EAAES,MAAAA,aAAa,EAAE,IAAA;EAAK,KAAC,CAAC,CAAA;EAErC,IAAA,OAAO,IAAI,CAAA;EACb,GAAA;IAYAL,kBAAkBA,CAACM,GAAG,EAAE;MACtB,IAAIA,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;EAC3B,MAAA,OAAO5E,SAAS,CAAA;EAClB,KAAA;MAEA,OAAO2E,GAAG,CAAClU,KAAK,CAAC,GAAG,CAAC,CAACoU,GAAG,EAAE,CAAA;EAC7B,GAAA;IAkBAL,0BAA0BA,CAAC9B,MAAM,EAAE;EACjC,IAAA,MAAMoC,SAAS,GAAGpC,MAAM,CAAC1G,OAAO,CAAC,UAAU,CAAC,CAAA;EAE5C,IAAA,IAAI8I,SAAS,EAAE;EACb,MAAA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,oBAAoB,CAAC,QAAQ,CAAC,CAAA;QAEzD,IAAID,QAAQ,CAAC5U,MAAM,EAAE;EACnB,QAAA,MAAM8U,gBAAgB,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAA;EAIpC,QAAA,IACErC,MAAM,YAAY9C,gBAAgB,KACjC8C,MAAM,CAACiB,IAAI,KAAK,UAAU,IAAIjB,MAAM,CAACiB,IAAI,KAAK,OAAO,CAAC,EACvD;EACA,UAAA,OAAOsB,gBAAgB,CAAA;EACzB,SAAA;UAQA,MAAMC,SAAS,GAAGD,gBAAgB,CAACE,qBAAqB,EAAE,CAACC,GAAG,CAAA;EAC9D,QAAA,MAAMC,SAAS,GAAG3C,MAAM,CAACyC,qBAAqB,EAAE,CAAA;EAIhD,QAAA,IAAIE,SAAS,CAACC,MAAM,IAAIpS,MAAM,CAACqS,WAAW,EAAE;YAC1C,MAAMC,WAAW,GAAGH,SAAS,CAACD,GAAG,GAAGC,SAAS,CAACC,MAAM,CAAA;YAEpD,IAAIE,WAAW,GAAGN,SAAS,GAAGhS,MAAM,CAACqS,WAAW,GAAG,CAAC,EAAE;EACpD,YAAA,OAAON,gBAAgB,CAAA;EACzB,WAAA;EACF,SAAA;EACF,OAAA;EACF,KAAA;EAEA,IAAA,OACElU,QAAQ,CAAC8I,aAAa,CAAE,CAAa6I,WAAAA,EAAAA,MAAM,CAAC1F,YAAY,CAAC,IAAI,CAAE,CAAA,EAAA,CAAG,CAAC,IACnE0F,MAAM,CAAC1G,OAAO,CAAC,OAAO,CAAC,CAAA;EAE3B,GAAA;EAkBF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EA9Na8H,YAAY,CAyMhBxG,UAAU,GAAG,qBAAqB,CAAA;EAzM9BwG,YAAY,CAmNhBxL,QAAQ,GAAG5I,MAAM,CAAC6N,MAAM,CAAC;EAC9ByG,EAAAA,gBAAgB,EAAE,KAAA;EACpB,CAAC,CAAC;;EC3NJ;EACA;EACA;EACA;EACA;EACO,MAAMyB,YAAY,SAASrS,sBAAsB,CAAC;EAiEvD;EACF;EACA;EACA;EACEZ,EAAAA,WAAWA,CAACoE,OAAO,EAAEvF,MAAM,EAAE;EAC3B,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CApETuF,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAMPvF,MAAM,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGNwF,IAAI,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGJ0D,OAAO,GAAA,KAAA,CAAA,CAAA;MAAA,IAMPmL,CAAAA,eAAe,GAAG,IAAI,CAAA;MAAA,IAMtBC,CAAAA,WAAW,GAAG,IAAI,CAAA;MAAA,IAMlBC,CAAAA,mBAAmB,GAAG,IAAI,CAAA;MAAA,IAM1BC,CAAAA,QAAQ,GAAG,IAAI,CAAA;MAAA,IAGfC,CAAAA,eAAe,GAAG,CAAC,CAAA;MAAA,IAGnBC,CAAAA,kBAAkB,GAAG,KAAK,CAAA;MAAA,IAG1BC,CAAAA,WAAW,GAAG,IAAI,CAAA;MAAA,IAUlBC,CAAAA,iBAAiB,GAAG,IAAI,CAAA;MAAA,IAMxBC,CAAAA,gBAAgB,GAAG,IAAI,CAAA;EASrB,IAAA,IAAI,EAAEtP,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,gBAAgB;EAC/BC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,MAAMwH,OAAO,GAAG3D,OAAO,CAACiD,aAAa,CAAC,+BAA+B,CAAC,CAAA;EACtE,IAAA,IAAI,EAAEU,OAAO,YAAYpH,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAAC2H,OAAO,EAAE;EAC9BzH,QAAAA,aAAa,EAAE,gBAAgB;EAC/BC,QAAAA,UAAU,EAAE,QAAQ;EACpBC,QAAAA,YAAY,EAAEG,WAAAA;EAChB,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC9B,MAAM,GAAGnC,YAAY,CACxBuW,YAAY,CAACnN,QAAQ,EACrBjH,MAAM,IAAI,EAAE,EACZe,gBAAgB,CAACwE,OAAO,CAACvE,OAAO,CAClC,CAAC,CAAA;EAED,IAAA,IAAI,CAACwE,IAAI,GAAG,IAAIvD,IAAI,CAAClD,wBAAwB,CAAC,IAAI,CAACiB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAA;MACnE,IAAI,CAACuF,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAI,CAAC2D,OAAO,GAAGA,OAAO,CAAA;EAEtB,IAAA,MAAMmL,eAAe,GAAG3U,QAAQ,CAAC8I,aAAa,CAC5C,mCACF,CAAC,CAAA;MACD,IAAI6L,eAAe,YAAYvB,iBAAiB,EAAE;QAChD,IAAI,CAACuB,eAAe,GAAGA,eAAe,CAAA;EACxC,KAAA;MAEA,IAAI,CAACS,cAAc,EAAE,CAAA;MACrB,IAAI,CAACC,cAAc,EAAE,CAAA;MACrB,IAAI,CAACC,sBAAsB,EAAE,CAAA;MAG7B,IAAI,EAAE,mCAAmC,IAAItV,QAAQ,CAACC,IAAI,CAACqB,OAAO,CAAC,EAAE;EACnEtB,MAAAA,QAAQ,CAACuI,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACgN,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAA;EACxExV,MAAAA,QAAQ,CAACC,IAAI,CAACqB,OAAO,CAACmU,iCAAiC,GAAG,MAAM,CAAA;EAClE,KAAA;EAKAtT,IAAAA,MAAM,CAACoG,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACmN,SAAS,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;EAChE,GAAA;EAOAH,EAAAA,cAAcA,GAAG;MACf,IAAI,CAACT,WAAW,GAAG5U,QAAQ,CAACgI,aAAa,CAAC,MAAM,CAAC,CAAA;MACjD,IAAI,CAAC4M,WAAW,CAAC3M,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;EAC/C,IAAA,IAAI,CAAC2M,WAAW,CAACrF,SAAS,GAAG,uBAAuB,CAAA;MAEpD,IAAI,CAAC1J,OAAO,CAACsC,WAAW,CAAC,IAAI,CAACyM,WAAW,CAAC,CAAA;EAC5C,GAAA;EAOAU,EAAAA,sBAAsBA,GAAG;EAEvB,IAAA,IAAI,CAAC9L,OAAO,CAACjB,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACuJ,WAAW,CAAC0D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;MAGnE,IAAI,IAAI,CAACb,eAAe,EAAE;EACxB,MAAA,IAAI,CAACA,eAAe,CAACpM,gBAAgB,CACnC,OAAO,EACP,IAAI,CAACuJ,WAAW,CAAC0D,IAAI,CAAC,IAAI,CAC5B,CAAC,CAAA;EACH,KAAA;EACF,GAAA;EAOAJ,EAAAA,cAAcA,GAAG;MAGf,IAAI,CAACP,mBAAmB,GAAG7U,QAAQ,CAACgI,aAAa,CAAC,KAAK,CAAC,CAAA;EACxD,IAAA,IAAI,CAAC6M,mBAAmB,CAACtF,SAAS,GAAG,iCAAiC,CAAA;MACtE,IAAI,CAACsF,mBAAmB,CAAC5M,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAA;MAG5D,KAAK,IAAI/I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;EAC1B,MAAA,MAAMyW,UAAU,GAAG3V,QAAQ,CAACgI,aAAa,CAAC,KAAK,CAAC,CAAA;QAChD2N,UAAU,CAACpG,SAAS,GAAG,uCAAuC,CAAA;EAC9D,MAAA,IAAI,CAACsF,mBAAmB,CAAC1M,WAAW,CAACwN,UAAU,CAAC,CAAA;EAClD,KAAA;MAGA,IAAI,CAACnM,OAAO,CAACrB,WAAW,CAAC,IAAI,CAAC0M,mBAAmB,CAAC,CAAA;EACpD,GAAA;EAQAe,EAAAA,eAAeA,GAAG;EAEhB,IAAA,IAAI,IAAI,CAACb,eAAe,GAAG,CAAC,EAAE;QAC5B,IAAI,CAACF,mBAAmB,CAAC3U,SAAS,CAACgI,GAAG,CACpC,0CACF,CAAC,CAAA;EACH,KAAC,MAAM;QACL,IAAI,CAAC2M,mBAAmB,CAAC3U,SAAS,CAACyL,MAAM,CACvC,0CACF,CAAC,CAAA;EACH,KAAA;MAGA,MAAMkK,WAAW,GAAG,IAAI,CAAChB,mBAAmB,CAACrN,gBAAgB,CAC3D,wCACF,CAAC,CAAA;EACDqO,IAAAA,WAAW,CAAClN,OAAO,CAAC,CAACgN,UAAU,EAAEvM,KAAK,KAAK;EACzCuM,MAAAA,UAAU,CAACzV,SAAS,CAACgS,MAAM,CACzB,2CAA2C,EAC3C9I,KAAK,GAAG,IAAI,CAAC2L,eACf,CAAC,CAAA;EACH,KAAC,CAAC,CAAA;EACJ,GAAA;EAUAe,EAAAA,QAAQA,GAAG;EACT,IAAA,IAAI,CAAClB,WAAW,CAACrJ,WAAW,GAAG,EAAE,CAAA;MAMjCvL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACgI,GAAG,CAAC,mCAAmC,CAAC,CAAA;MAChE,IAAI,CAAC4M,QAAQ,GAAG9U,QAAQ,CAACgI,aAAa,CAAC,KAAK,CAAC,CAAA;EAC7C,IAAA,IAAI,CAAC8M,QAAQ,CAACvF,SAAS,GAAG,8BAA8B,CAAA;MACxD,IAAI,CAACuF,QAAQ,CAAC7M,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;MAK3CjI,QAAQ,CAACC,IAAI,CAACkI,WAAW,CAAC,IAAI,CAAC2M,QAAQ,CAAC,CAAA;EACxC,IAAA,IAAI,CAACA,QAAQ,CAACvJ,WAAW,GAAG,IAAI,CAACzF,IAAI,CAAClD,CAAC,CAAC,WAAW,CAAC,CAAA;EAEpDT,IAAAA,MAAM,CAAC4T,QAAQ,CAACxC,IAAI,GAAG,IAAI,CAAC/J,OAAO,CAACyC,YAAY,CAAC,MAAM,CAAC,CAAA;EAC1D,GAAA;IAaA6F,WAAWA,CAACrJ,KAAK,EAAE;MACjBA,KAAK,CAACkF,cAAc,EAAE,CAAA;MACtB,IAAI,CAACmI,QAAQ,EAAE,CAAA;EACjB,GAAA;IASAP,cAAcA,CAAC9M,KAAK,EAAE;MASpB,IACE,CAACA,KAAK,CAAC/J,GAAG,KAAK,OAAO,IAAI+J,KAAK,CAACiF,OAAO,KAAK,EAAE,IAAIjF,KAAK,CAACuN,KAAK,KAAK,EAAE,KACpE,CAAC,IAAI,CAAChB,kBAAkB,EACxB;QACA,IAAI,CAACD,eAAe,IAAI,CAAC,CAAA;QAGzB,IAAI,CAACa,eAAe,EAAE,CAAA;EAGtB,MAAA,IAAI,IAAI,CAACT,gBAAgB,KAAK,IAAI,EAAE;EAClChT,QAAAA,MAAM,CAAC8T,YAAY,CAAC,IAAI,CAACd,gBAAgB,CAAC,CAAA;UAC1C,IAAI,CAACA,gBAAgB,GAAG,IAAI,CAAA;EAC9B,OAAA;EAEA,MAAA,IAAI,IAAI,CAACJ,eAAe,IAAI,CAAC,EAAE;UAC7B,IAAI,CAACA,eAAe,GAAG,CAAC,CAAA;EAExB,QAAA,IAAI,IAAI,CAACG,iBAAiB,KAAK,IAAI,EAAE;EACnC/S,UAAAA,MAAM,CAAC8T,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;YAC3C,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAA;EAC/B,SAAA;UAEA,IAAI,CAACY,QAAQ,EAAE,CAAA;EACjB,OAAC,MAAM;EACL,QAAA,IAAI,IAAI,CAACf,eAAe,KAAK,CAAC,EAAE;EAC9B,UAAA,IAAI,CAACH,WAAW,CAACrJ,WAAW,GAAG,IAAI,CAACzF,IAAI,CAAClD,CAAC,CAAC,mBAAmB,CAAC,CAAA;EACjE,SAAC,MAAM;EACL,UAAA,IAAI,CAACgS,WAAW,CAACrJ,WAAW,GAAG,IAAI,CAACzF,IAAI,CAAClD,CAAC,CAAC,kBAAkB,CAAC,CAAA;EAChE,SAAA;EACF,OAAA;QAEA,IAAI,CAACsT,gBAAgB,EAAE,CAAA;EACzB,KAAC,MAAM,IAAI,IAAI,CAAChB,iBAAiB,KAAK,IAAI,EAAE;QAG1C,IAAI,CAACiB,kBAAkB,EAAE,CAAA;EAC3B,KAAA;EAGA,IAAA,IAAI,CAACnB,kBAAkB,GAAGvM,KAAK,CAAC2N,QAAQ,CAAA;EAC1C,GAAA;EAYAF,EAAAA,gBAAgBA,GAAG;EAGjB/T,IAAAA,MAAM,CAAC8T,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;EAG3C,IAAA,IAAI,CAACA,iBAAiB,GAAG/S,MAAM,CAAC2L,UAAU,CACxC,IAAI,CAACqI,kBAAkB,CAACX,IAAI,CAAC,IAAI,CAAC,EAClC,IAAI,CAACP,WACP,CAAC,CAAA;EACH,GAAA;EAOAkB,EAAAA,kBAAkBA,GAAG;EACnBhU,IAAAA,MAAM,CAAC8T,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;MAC3C,IAAI,CAACA,iBAAiB,GAAG,IAAI,CAAA;MAE7B,IAAI,CAACH,eAAe,GAAG,CAAC,CAAA;EACxB,IAAA,IAAI,CAACH,WAAW,CAACrJ,WAAW,GAAG,IAAI,CAACzF,IAAI,CAAClD,CAAC,CAAC,UAAU,CAAC,CAAA;EAEtD,IAAA,IAAI,CAACuS,gBAAgB,GAAGhT,MAAM,CAAC2L,UAAU,CAAC,MAAM;EAC9C,MAAA,IAAI,CAAC8G,WAAW,CAACrJ,WAAW,GAAG,EAAE,CAAA;EACnC,KAAC,EAAE,IAAI,CAAC0J,WAAW,CAAC,CAAA;MAEpB,IAAI,CAACW,eAAe,EAAE,CAAA;EACxB,GAAA;EAgBAF,EAAAA,SAASA,GAAG;MAEV1V,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACyL,MAAM,CAAC,mCAAmC,CAAC,CAAA;MAEnE,IAAI,IAAI,CAACmJ,QAAQ,EAAE;EACjB,MAAA,IAAI,CAACA,QAAQ,CAACnJ,MAAM,EAAE,CAAA;QACtB,IAAI,CAACmJ,QAAQ,GAAG,IAAI,CAAA;EACtB,KAAA;MAGA,IAAI,CAACF,WAAW,CAAC3M,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;EAC/C,IAAA,IAAI,CAAC2M,WAAW,CAACrJ,WAAW,GAAG,EAAE,CAAA;MAGjC,IAAI,CAACqK,eAAe,EAAE,CAAA;MAGtB,IAAI,IAAI,CAACV,iBAAiB,EAAE;EAC1B/S,MAAAA,MAAM,CAAC8T,YAAY,CAAC,IAAI,CAACf,iBAAiB,CAAC,CAAA;EAC7C,KAAA;MAEA,IAAI,IAAI,CAACC,gBAAgB,EAAE;EACzBhT,MAAAA,MAAM,CAAC8T,YAAY,CAAC,IAAI,CAACd,gBAAgB,CAAC,CAAA;EAC5C,KAAA;EACF,GAAA;EAuBF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EArbaT,YAAY,CAyYhBnI,UAAU,GAAG,sBAAsB,CAAA;EAzY/BmI,YAAY,CAmZhBnN,QAAQ,GAAG5I,MAAM,CAAC6N,MAAM,CAAC;EAC9B1G,EAAAA,IAAI,EAAE;EACJuQ,IAAAA,SAAS,EAAE,UAAU;EACrBC,IAAAA,QAAQ,EAAE,yBAAyB;EACnCC,IAAAA,iBAAiB,EAAE,oCAAoC;EACvDC,IAAAA,gBAAgB,EAAE,mCAAA;EACpB,GAAA;EACF,CAAC,CAAC;;EClaJ;EACA;EACA;EACA;EACA;EACO,MAAMC,MAAM,SAASpU,sBAAsB,CAAC;EA6BjD;EACF;EACA;EACA;EACA;EACA;IACEZ,WAAWA,CAACoE,OAAO,EAAE;EACnB,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAlCTA,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGP6Q,WAAW,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGXC,KAAK,GAAA,KAAA,CAAA,CAAA;MAAA,IASLC,CAAAA,UAAU,GAAG,KAAK,CAAA;MAAA,IAUlBC,CAAAA,GAAG,GAAG,IAAI,CAAA;EAWR,IAAA,IAAI,EAAEhR,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,QAAQ;EACvBC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;EACtB,IAAA,MAAM6Q,WAAW,GAAG7Q,OAAO,CAACiD,aAAa,CAAC,yBAAyB,CAAC,CAAA;MAKpE,IAAI,CAAC4N,WAAW,EAAE;EAChB,MAAA,OAAO,IAAI,CAAA;EACb,KAAA;EAEA,IAAA,IAAI,EAAEA,WAAW,YAAYtU,WAAW,CAAC,EAAE;EACzC,MAAA,MAAM,IAAIP,YAAY,CAAC6U,WAAW,EAAE;EAClC3U,QAAAA,aAAa,EAAE,QAAQ;EACvBC,QAAAA,UAAU,EAAE,yBAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,MAAM8U,MAAM,GAAGJ,WAAW,CAACzK,YAAY,CAAC,eAAe,CAAC,CAAA;MACxD,IAAI,CAAC6K,MAAM,EAAE;EACX,MAAA,MAAM,IAAIjV,YAAY,CAAC,IAAI,EAAE;EAC3BE,QAAAA,aAAa,EAAE,QAAQ;EACvBC,QAAAA,UAAU,EAAE,wCAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,MAAM2U,KAAK,GAAG3W,QAAQ,CAACqP,cAAc,CAACyH,MAAM,CAAC,CAAA;EAE7C,IAAA,IAAI,EAAEH,KAAK,YAAYvU,WAAW,CAAC,EAAE;EACnC,MAAA,MAAM,IAAIP,YAAY,CAAC8U,KAAK,EAAE;EAC5B5U,QAAAA,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAG,IAAG8U,MAAO,CAAA,CAAA;EACzB,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAACH,KAAK,GAAGA,KAAK,CAAA;MAClB,IAAI,CAACD,WAAW,GAAGA,WAAW,CAAA;MAG9B,IAAI,CAACG,GAAG,GAAG1U,MAAM,CAAC4U,UAAU,CAAC,wBAAwB,CAAC,CAAA;EAItD,IAAA,IAAI,kBAAkB,IAAI,IAAI,CAACF,GAAG,EAAE;EAClC,MAAA,IAAI,CAACA,GAAG,CAACtO,gBAAgB,CAAC,QAAQ,EAAE,MAAM,IAAI,CAACyO,SAAS,EAAE,CAAC,CAAA;EAC7D,KAAC,MAAM;QAGL,IAAI,CAACH,GAAG,CAACI,WAAW,CAAC,MAAM,IAAI,CAACD,SAAS,EAAE,CAAC,CAAA;EAC9C,KAAA;MAEA,IAAI,CAACA,SAAS,EAAE,CAAA;EAChB,IAAA,IAAI,CAACN,WAAW,CAACnO,gBAAgB,CAAC,OAAO,EAAE,MACzC,IAAI,CAAC2O,qBAAqB,EAC5B,CAAC,CAAA;EACH,GAAA;EAYAF,EAAAA,SAASA,GAAG;EACV,IAAA,IAAI,IAAI,CAACH,GAAG,CAACM,OAAO,EAAE;EACpB,MAAA,IAAI,CAACR,KAAK,CAACjL,eAAe,CAAC,QAAQ,CAAC,CAAA;QACpC,IAAI,CAACgL,WAAW,CAACzO,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;EAC7C,KAAC,MAAM;EACL,MAAA,IAAI,CAACyO,WAAW,CAAChL,eAAe,CAAC,QAAQ,CAAC,CAAA;EAC1C,MAAA,IAAI,CAACgL,WAAW,CAACzO,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC2O,UAAU,CAAC9K,QAAQ,EAAE,CAAC,CAAA;QAE1E,IAAI,IAAI,CAAC8K,UAAU,EAAE;EACnB,QAAA,IAAI,CAACD,KAAK,CAACjL,eAAe,CAAC,QAAQ,CAAC,CAAA;EACtC,OAAC,MAAM;UACL,IAAI,CAACiL,KAAK,CAAC1O,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;EACvC,OAAA;EACF,KAAA;EACF,GAAA;EAUAiP,EAAAA,qBAAqBA,GAAG;EACtB,IAAA,IAAI,CAACN,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU,CAAA;MAClC,IAAI,CAACI,SAAS,EAAE,CAAA;EAClB,GAAA;EAMF,CAAA;EAhJaP,MAAM,CA+IVlK,UAAU,GAAG,cAAc;;EClJpC;EACA;EACA;EACA;EACA;EACO,MAAM6K,kBAAkB,SAAS/U,sBAAsB,CAAC;EAU7D;EACF;EACA;EACA;EACEZ,EAAAA,WAAWA,CAACoE,OAAO,EAAEvF,MAAM,EAAE;EAC3B,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAbTuF,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAMPvF,MAAM,GAAA,KAAA,CAAA,CAAA;EASJ,IAAA,IAAI,EAAEuF,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,qBAAqB;EACpCC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MAEtB,IAAI,CAACvF,MAAM,GAAGnC,YAAY,CACxBiZ,kBAAkB,CAAC7P,QAAQ,EAC3BjH,MAAM,IAAI,EAAE,EACZe,gBAAgB,CAACwE,OAAO,CAACvE,OAAO,CAClC,CAAC,CAAA;MAED,IAAI,CAAC0R,QAAQ,EAAE,CAAA;EACjB,GAAA;EAcAA,EAAAA,QAAQA,GAAG;EACT,IAAA,IAAI,IAAI,CAAC1S,MAAM,CAAC2S,gBAAgB,EAAE;EAChC,MAAA,OAAA;EACF,KAAA;MAEA,IAAI,IAAI,CAACpN,OAAO,CAACoG,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;EACjD,MAAA,OAAA;EACF,KAAA;MAKA,IAAI,CAAC,IAAI,CAACpG,OAAO,CAACoG,YAAY,CAAC,UAAU,CAAC,EAAE;QAC1C,IAAI,CAACpG,OAAO,CAACoC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;EAE3C,MAAA,IAAI,CAACpC,OAAO,CAAC0C,gBAAgB,CAAC,MAAM,EAAE,MAAM;EAC1C,QAAA,IAAI,CAAC1C,OAAO,CAAC6F,eAAe,CAAC,UAAU,CAAC,CAAA;EAC1C,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,IAAI,CAAC7F,OAAO,CAACqN,KAAK,EAAE,CAAA;EACtB,GAAA;EAkBF,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAhGakE,kBAAkB,CAyEtB7K,UAAU,GAAG,2BAA2B,CAAA;EAzEpC6K,kBAAkB,CAmFtB7P,QAAQ,GAAG5I,MAAM,CAAC6N,MAAM,CAAC;EAC9ByG,EAAAA,gBAAgB,EAAE,KAAA;EACpB,CAAC,CAAC;;EC5FJ;EACA;EACA;EACA;EACA;EACO,MAAMoE,MAAM,SAAShV,sBAAsB,CAAC;EAOjD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACEZ,WAAWA,CAACoE,OAAO,EAAE;EACnB,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CApBTA,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGP6L,OAAO,GAAA,KAAA,CAAA,CAAA;EAmBL,IAAA,IAAI,EAAE7L,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,QAAQ;EACvBC,QAAAA,UAAU,EAAG,CAAA,cAAA,EAAgBqV,MAAM,CAAC9K,UAAW,CAAA,EAAA,CAAA;EACjD,OAAC,CAAC,CAAA;EACJ,KAAA;EAGA,IAAA,MAAMmF,OAAO,GAAG7L,OAAO,CAAC2B,gBAAgB,CAAC,qBAAqB,CAAC,CAAA;EAC/D,IAAA,IAAI,CAACkK,OAAO,CAACtS,MAAM,EAAE;EACnB,MAAA,MAAM,IAAIyC,YAAY,CAAC,IAAI,EAAE;EAC3BE,QAAAA,aAAa,EAAE,QAAQ;EACvBC,QAAAA,UAAU,EAAE,qBAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAI,CAAC6L,OAAO,GAAGA,OAAO,CAAA;EAEtB,IAAA,IAAI,CAACA,OAAO,CAAC/I,OAAO,CAAEgJ,MAAM,IAAK;EAC/B,MAAA,MAAMC,QAAQ,GAAGD,MAAM,CAAC1F,YAAY,CAAC,oBAAoB,CAAC,CAAA;QAG1D,IAAI,CAAC2F,QAAQ,EAAE;EACb,QAAA,OAAA;EACF,OAAA;EAGA,MAAA,IAAI,CAAC5R,QAAQ,CAACqP,cAAc,CAACuC,QAAQ,CAAC,EAAE;EACtC,QAAA,MAAM,IAAI/P,YAAY,CAAC,IAAI,EAAE;EAC3BE,UAAAA,aAAa,EAAE,QAAQ;YACvBC,UAAU,EAAG,IAAG4P,QAAS,CAAA,CAAA;EAC3B,SAAC,CAAC,CAAA;EACJ,OAAA;EAIAD,MAAAA,MAAM,CAAC1J,YAAY,CAAC,eAAe,EAAE2J,QAAQ,CAAC,CAAA;EAC9CD,MAAAA,MAAM,CAACjG,eAAe,CAAC,oBAAoB,CAAC,CAAA;EAC9C,KAAC,CAAC,CAAA;MAKFvJ,MAAM,CAACoG,gBAAgB,CAAC,UAAU,EAAE,MAAM,IAAI,CAACsJ,yBAAyB,EAAE,CAAC,CAAA;MAK3E,IAAI,CAACA,yBAAyB,EAAE,CAAA;EAGhC,IAAA,IAAI,CAAChM,OAAO,CAAC0C,gBAAgB,CAAC,OAAO,EAAGE,KAAK,IAAK,IAAI,CAACqJ,WAAW,CAACrJ,KAAK,CAAC,CAAC,CAAA;EAC5E,GAAA;EAOAoJ,EAAAA,yBAAyBA,GAAG;EAC1B,IAAA,IAAI,CAACH,OAAO,CAAC/I,OAAO,CAAEgJ,MAAM,IAC1B,IAAI,CAACI,mCAAmC,CAACJ,MAAM,CACjD,CAAC,CAAA;EACH,GAAA;IAWAI,mCAAmCA,CAACJ,MAAM,EAAE;EAC1C,IAAA,MAAMC,QAAQ,GAAGD,MAAM,CAAC1F,YAAY,CAAC,eAAe,CAAC,CAAA;MACrD,IAAI,CAAC2F,QAAQ,EAAE;EACb,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,MAAMnE,OAAO,GAAGzN,QAAQ,CAACqP,cAAc,CAACuC,QAAQ,CAAC,CAAA;MACjD,IAAInE,OAAO,IAAIA,OAAO,CAACvN,SAAS,CAACC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;EACtE,MAAA,MAAM6R,cAAc,GAAGL,MAAM,CAACM,OAAO,CAAA;QAErCN,MAAM,CAAC1J,YAAY,CAAC,eAAe,EAAE+J,cAAc,CAAClG,QAAQ,EAAE,CAAC,CAAA;QAC/D2B,OAAO,CAACvN,SAAS,CAACgS,MAAM,CACtB,mCAAmC,EACnC,CAACF,cACH,CAAC,CAAA;EACH,KAAA;EACF,GAAA;IAaAF,WAAWA,CAACrJ,KAAK,EAAE;EACjB,IAAA,MAAMkK,aAAa,GAAGlK,KAAK,CAACsC,MAAM,CAAA;MAGlC,IACE,EAAE4H,aAAa,YAAY9D,gBAAgB,CAAC,IAC5C8D,aAAa,CAACC,IAAI,KAAK,OAAO,EAC9B;EACA,MAAA,OAAA;EACF,KAAA;EAKA,IAAA,MAAM0E,UAAU,GAAGtX,QAAQ,CAACwH,gBAAgB,CAC1C,oCACF,CAAC,CAAA;EAED,IAAA,MAAM+P,iBAAiB,GAAG5E,aAAa,CAACJ,IAAI,CAAA;EAC5C,IAAA,MAAMiF,iBAAiB,GAAG7E,aAAa,CAACnS,IAAI,CAAA;EAE5C8W,IAAAA,UAAU,CAAC3O,OAAO,CAAEgJ,MAAM,IAAK;EAC7B,MAAA,MAAMW,gBAAgB,GAAGX,MAAM,CAACY,IAAI,KAAKgF,iBAAiB,CAAA;EAC1D,MAAA,MAAME,WAAW,GAAG9F,MAAM,CAACnR,IAAI,KAAKgX,iBAAiB,CAAA;QAErD,IAAIC,WAAW,IAAInF,gBAAgB,EAAE;EACnC,QAAA,IAAI,CAACP,mCAAmC,CAACJ,MAAM,CAAC,CAAA;EAClD,OAAA;EACF,KAAC,CAAC,CAAA;EACJ,GAAA;EAMF,CAAA;EAnKa0F,MAAM,CAkKV9K,UAAU,GAAG,cAAc;;ECvKpC;EACA;EACA;EACA;EACA;EACO,MAAMmL,QAAQ,SAASrV,sBAAsB,CAAC;EAUnD;EACF;EACA;EACA;EACA;EACA;IACEZ,WAAWA,CAACoE,OAAO,EAAE;EACnB,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAfTA,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGP8R,cAAc,GAAA,KAAA,CAAA,CAAA;MAAA,IAGdC,CAAAA,qBAAqB,GAAG,KAAK,CAAA;EAW3B,IAAA,IAAI,EAAE/R,OAAO,YAAYuN,iBAAiB,CAAC,EAAE;EAC3C,MAAA,MAAM,IAAIvR,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,WAAW;EAC1BC,QAAAA,UAAU,EAAE,SAAS;EACrBC,QAAAA,YAAY,EAAEmR,iBAAAA;EAChB,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAACvN,OAAO,GAAGA,OAAO,CAAA;EACtB,IAAA,IAAI,CAAC8R,cAAc,GAAG,IAAI,CAACE,gBAAgB,EAAE,CAAA;EAE7C,IAAA,IAAI,CAAChS,OAAO,CAAC0C,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACuP,kBAAkB,EAAE,CAAC,CAAA;EACzE,GAAA;EAQAD,EAAAA,gBAAgBA,GAAG;MACjB,MAAME,eAAe,GAAG,IAAI,CAACzE,kBAAkB,CAAC,IAAI,CAACzN,OAAO,CAACmS,IAAI,CAAC,CAAA;MAGlE,IAAI,CAACD,eAAe,EAAE;EACpB,MAAA,MAAM,IAAIlW,YAAY,CAAC,IAAI,CAACgE,OAAO,EAAE;EACnC9D,QAAAA,aAAa,EAAE,WAAW;EAC1BC,QAAAA,UAAU,EAAE,cAAc;EAC1BC,QAAAA,YAAY,EAAE,QAAA;EAChB,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,MAAM0V,cAAc,GAAG3X,QAAQ,CAACqP,cAAc,CAAC0I,eAAe,CAAC,CAAA;EAG/D,IAAA,IAAI,EAAEJ,cAAc,YAAYvV,WAAW,CAAC,EAAE;EAC5C,MAAA,MAAM,IAAIP,YAAY,CAAC8V,cAAc,EAAE;EACrC5V,QAAAA,aAAa,EAAE,WAAW;UAC1BC,UAAU,EAAG,wBAAuB+V,eAAgB,CAAA,CAAA;EACtD,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,OAAOJ,cAAc,CAAA;EACvB,GAAA;EASAG,EAAAA,kBAAkBA,GAAG;MACnB,IAAI,CAAC,IAAI,CAACH,cAAc,CAAC1L,YAAY,CAAC,UAAU,CAAC,EAAE;QAEjD,IAAI,CAAC0L,cAAc,CAAC1P,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;QAClD,IAAI,CAAC0P,cAAc,CAACzX,SAAS,CAACgI,GAAG,CAAC,iCAAiC,CAAC,CAAA;EAGpE,MAAA,IAAI,CAAC,IAAI,CAAC0P,qBAAqB,EAAE;EAC/B,QAAA,IAAI,CAACD,cAAc,CAACpP,gBAAgB,CAAC,MAAM,EAAE,MAC3C,IAAI,CAAC0P,qBAAqB,EAC5B,CAAC,CAAA;UACD,IAAI,CAACL,qBAAqB,GAAG,IAAI,CAAA;EACnC,OAAA;EACF,KAAA;EAEA,IAAA,IAAI,CAACD,cAAc,CAACzE,KAAK,EAAE,CAAA;EAC7B,GAAA;EAUA+E,EAAAA,qBAAqBA,GAAG;EACtB,IAAA,IAAI,CAACN,cAAc,CAACjM,eAAe,CAAC,UAAU,CAAC,CAAA;MAC/C,IAAI,CAACiM,cAAc,CAACzX,SAAS,CAACyL,MAAM,CAAC,iCAAiC,CAAC,CAAA;EACzE,GAAA;IAYA2H,kBAAkBA,CAACM,GAAG,EAAE;MACtB,IAAIA,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;EAC3B,MAAA,OAAO5E,SAAS,CAAA;EAClB,KAAA;MAEA,OAAO2E,GAAG,CAAClU,KAAK,CAAC,GAAG,CAAC,CAACoU,GAAG,EAAE,CAAA;EAC7B,GAAA;EAMF,CAAA;EA5Ha4D,QAAQ,CA2HZnL,UAAU,GAAG,iBAAiB;;EChIvC;EACA;EACA;EACA;EACA;EACO,MAAM2L,IAAI,SAAS7V,sBAAsB,CAAC;EAqC/C;EACF;EACA;IACEZ,WAAWA,CAACoE,OAAO,EAAE;EACnB,IAAA,KAAK,EAAE,CAAA;EAAA,IAAA,IAAA,CAvCTA,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGPsS,KAAK,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGLC,QAAQ,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGRC,aAAa,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGbC,IAAI,GAAG;EAAEC,MAAAA,IAAI,EAAE,EAAE;EAAEC,MAAAA,KAAK,EAAE,EAAE;EAAEC,MAAAA,EAAE,EAAE,EAAE;EAAEC,MAAAA,IAAI,EAAE,EAAA;OAAI,CAAA;MAAA,IAGhDC,CAAAA,aAAa,GAAG,2BAA2B,CAAA;MAAA,IAG3CC,CAAAA,YAAY,GAAG,KAAK,CAAA;EAAA,IAAA,IAAA,CAGpBC,aAAa,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGbC,eAAe,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CAGfC,iBAAiB,GAAA,KAAA,CAAA,CAAA;MAAA,IAMjBlC,CAAAA,GAAG,GAAG,IAAI,CAAA;EAQR,IAAA,IAAI,EAAEhR,OAAO,YAAYzD,WAAW,CAAC,EAAE;EACrC,MAAA,MAAM,IAAIP,YAAY,CAACgE,OAAO,EAAE;EAC9B9D,QAAAA,aAAa,EAAE,MAAM;EACrBC,QAAAA,UAAU,EAAE,SAAA;EACd,OAAC,CAAC,CAAA;EACJ,KAAA;EAGA,IAAA,MAAMmW,KAAK,GAAGtS,OAAO,CAAC2B,gBAAgB,CAAC,mBAAmB,CAAC,CAAA;EAC3D,IAAA,IAAI,CAAC2Q,KAAK,CAAC/Y,MAAM,EAAE;EACjB,MAAA,MAAM,IAAIyC,YAAY,CAAC,IAAI,EAAE;EAC3BE,QAAAA,aAAa,EAAE,MAAM;EACrBC,QAAAA,UAAU,EAAG,CAAA,iBAAA,CAAA;EACf,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAAC6D,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAI,CAACsS,KAAK,GAAGA,KAAK,CAAA;MAGlB,IAAI,CAACU,aAAa,GAAG,IAAI,CAACG,UAAU,CAACxD,IAAI,CAAC,IAAI,CAAC,CAAA;MAC/C,IAAI,CAACsD,eAAe,GAAG,IAAI,CAACG,YAAY,CAACzD,IAAI,CAAC,IAAI,CAAC,CAAA;MACnD,IAAI,CAACuD,iBAAiB,GAAG,IAAI,CAACG,YAAY,CAAC1D,IAAI,CAAC,IAAI,CAAC,CAAA;MAErD,MAAM4C,QAAQ,GAAG,IAAI,CAACvS,OAAO,CAACiD,aAAa,CAAC,mBAAmB,CAAC,CAAA;MAChE,MAAMuP,aAAa,GAAG,IAAI,CAACxS,OAAO,CAAC2B,gBAAgB,CACjD,0BACF,CAAC,CAAA;MAED,IAAI,CAAC4Q,QAAQ,EAAE;EACb,MAAA,MAAM,IAAIvW,YAAY,CAAC,IAAI,EAAE;EAC3BE,QAAAA,aAAa,EAAE,MAAM;EACrBC,QAAAA,UAAU,EAAG,CAAA,iBAAA,CAAA;EACf,OAAC,CAAC,CAAA;EACJ,KAAA;EAEA,IAAA,IAAI,CAACqW,aAAa,CAACjZ,MAAM,EAAE;EACzB,MAAA,MAAM,IAAIyC,YAAY,CAAC,IAAI,EAAE;EAC3BE,QAAAA,aAAa,EAAE,MAAM;EACrBC,QAAAA,UAAU,EAAG,CAAA,sBAAA,CAAA;EACf,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAACoW,QAAQ,GAAGA,QAAQ,CAAA;MACxB,IAAI,CAACC,aAAa,GAAGA,aAAa,CAAA;MAElC,IAAI,CAACc,qBAAqB,EAAE,CAAA;EAC9B,GAAA;EAOAA,EAAAA,qBAAqBA,GAAG;MACtB,IAAI,CAACtC,GAAG,GAAG1U,MAAM,CAAC4U,UAAU,CAAC,wBAAwB,CAAC,CAAA;EAItD,IAAA,IAAI,kBAAkB,IAAI,IAAI,CAACF,GAAG,EAAE;EAClC,MAAA,IAAI,CAACA,GAAG,CAACtO,gBAAgB,CAAC,QAAQ,EAAE,MAAM;UACxC,IAAI,CAAC6Q,SAAS,EAAE,CAAA;EAClB,OAAC,CAAC,CAAA;EACJ,KAAC,MAAM;EAGL,MAAA,IAAI,CAACvC,GAAG,CAACI,WAAW,CAAC,MAAM;UACzB,IAAI,CAACmC,SAAS,EAAE,CAAA;EAClB,OAAC,CAAC,CAAA;EACJ,KAAA;MAEA,IAAI,CAACA,SAAS,EAAE,CAAA;EAClB,GAAA;EAOAA,EAAAA,SAASA,GAAG;EACV,IAAA,IAAI,IAAI,CAACvC,GAAG,CAACM,OAAO,EAAE;QACpB,IAAI,CAACkC,KAAK,EAAE,CAAA;EACd,KAAC,MAAM;QACL,IAAI,CAACC,QAAQ,EAAE,CAAA;EACjB,KAAA;EACF,GAAA;EAOAD,EAAAA,KAAKA,GAAG;MACN,IAAI,CAACjB,QAAQ,CAACnQ,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;EAE7C,IAAA,IAAI,CAACoQ,aAAa,CAAC1P,OAAO,CAAE4Q,KAAK,IAAK;EACpCA,MAAAA,KAAK,CAACtR,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;EAC5C,KAAC,CAAC,CAAA;EAEF,IAAA,IAAI,CAACkQ,KAAK,CAACxP,OAAO,CAAE6Q,IAAI,IAAK;EAE3B,MAAA,IAAI,CAACC,aAAa,CAACD,IAAI,CAAC,CAAA;QAGxBA,IAAI,CAACjR,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACsQ,aAAa,EAAE,IAAI,CAAC,CAAA;QACxDW,IAAI,CAACjR,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACuQ,eAAe,EAAE,IAAI,CAAC,CAAA;EAG5D,MAAA,IAAI,CAACY,OAAO,CAACF,IAAI,CAAC,CAAA;EACpB,KAAC,CAAC,CAAA;EAGF,IAAA,MAAMG,UAAU,GAAG,IAAI,CAACC,MAAM,CAACzX,MAAM,CAAC4T,QAAQ,CAACiC,IAAI,CAAC,IAAI,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAA;EAErE,IAAA,IAAI,CAAC0B,OAAO,CAACF,UAAU,CAAC,CAAA;MAGxBxX,MAAM,CAACoG,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACwQ,iBAAiB,EAAE,IAAI,CAAC,CAAA;EACrE,GAAA;EAOAO,EAAAA,QAAQA,GAAG;EACT,IAAA,IAAI,CAAClB,QAAQ,CAAC1M,eAAe,CAAC,MAAM,CAAC,CAAA;EAErC,IAAA,IAAI,CAAC2M,aAAa,CAAC1P,OAAO,CAAE4Q,KAAK,IAAK;EACpCA,MAAAA,KAAK,CAAC7N,eAAe,CAAC,MAAM,CAAC,CAAA;EAC/B,KAAC,CAAC,CAAA;EAEF,IAAA,IAAI,CAACyM,KAAK,CAACxP,OAAO,CAAE6Q,IAAI,IAAK;QAE3BA,IAAI,CAACM,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACjB,aAAa,EAAE,IAAI,CAAC,CAAA;QAC3DW,IAAI,CAACM,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAChB,eAAe,EAAE,IAAI,CAAC,CAAA;EAG/D,MAAA,IAAI,CAACiB,eAAe,CAACP,IAAI,CAAC,CAAA;EAC5B,KAAC,CAAC,CAAA;MAGFrX,MAAM,CAAC2X,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAACf,iBAAiB,EAAE,IAAI,CAAC,CAAA;EACxE,GAAA;EAQAG,EAAAA,YAAYA,GAAG;EACb,IAAA,MAAMlB,IAAI,GAAG7V,MAAM,CAAC4T,QAAQ,CAACiC,IAAI,CAAA;EACjC,IAAA,MAAMgC,YAAY,GAAG,IAAI,CAACJ,MAAM,CAAC5B,IAAI,CAAC,CAAA;MACtC,IAAI,CAACgC,YAAY,EAAE;EACjB,MAAA,OAAA;EACF,KAAA;MAGA,IAAI,IAAI,CAACpB,YAAY,EAAE;QACrB,IAAI,CAACA,YAAY,GAAG,KAAK,CAAA;EACzB,MAAA,OAAA;EACF,KAAA;EAGA,IAAA,MAAMqB,YAAY,GAAG,IAAI,CAACC,aAAa,EAAE,CAAA;MACzC,IAAI,CAACD,YAAY,EAAE;EACjB,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,IAAI,CAACP,OAAO,CAACO,YAAY,CAAC,CAAA;EAC1B,IAAA,IAAI,CAACJ,OAAO,CAACG,YAAY,CAAC,CAAA;MAC1BA,YAAY,CAAC9G,KAAK,EAAE,CAAA;EACtB,GAAA;IAQAwG,OAAOA,CAACF,IAAI,EAAE;EACZ,IAAA,IAAI,CAACW,cAAc,CAACX,IAAI,CAAC,CAAA;EACzB,IAAA,IAAI,CAACY,SAAS,CAACZ,IAAI,CAAC,CAAA;EACtB,GAAA;IAQAK,OAAOA,CAACL,IAAI,EAAE;EACZ,IAAA,IAAI,CAACa,YAAY,CAACb,IAAI,CAAC,CAAA;EACvB,IAAA,IAAI,CAACc,SAAS,CAACd,IAAI,CAAC,CAAA;EACtB,GAAA;IASAI,MAAMA,CAAC5B,IAAI,EAAE;MACX,OAAO,IAAI,CAACnS,OAAO,CAACiD,aAAa,CAAE,CAAA,wBAAA,EAA0BkP,IAAK,CAAA,EAAA,CAAG,CAAC,CAAA;EACxE,GAAA;IAQAyB,aAAaA,CAACD,IAAI,EAAE;EAElB,IAAA,MAAMe,OAAO,GAAG,IAAI,CAACC,OAAO,CAAChB,IAAI,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAA;MAC3CjB,IAAI,CAACvR,YAAY,CAAC,IAAI,EAAG,CAAMsS,IAAAA,EAAAA,OAAQ,EAAC,CAAC,CAAA;EACzCf,IAAAA,IAAI,CAACvR,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;EAChCuR,IAAAA,IAAI,CAACvR,YAAY,CAAC,eAAe,EAAEsS,OAAO,CAAC,CAAA;EAC3Cf,IAAAA,IAAI,CAACvR,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;EAC3CuR,IAAAA,IAAI,CAACvR,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;EAGnC,IAAA,MAAMyS,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;MAClC,IAAI,CAACkB,MAAM,EAAE;EACX,MAAA,OAAA;EACF,KAAA;EAEAA,IAAAA,MAAM,CAACzS,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;MACvCyS,MAAM,CAACzS,YAAY,CAAC,iBAAiB,EAAEuR,IAAI,CAAC/P,EAAE,CAAC,CAAA;MAC/CiR,MAAM,CAACxa,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACyQ,aAAa,CAAC,CAAA;EAC1C,GAAA;IAQAoB,eAAeA,CAACP,IAAI,EAAE;EAEpBA,IAAAA,IAAI,CAAC9N,eAAe,CAAC,IAAI,CAAC,CAAA;EAC1B8N,IAAAA,IAAI,CAAC9N,eAAe,CAAC,MAAM,CAAC,CAAA;EAC5B8N,IAAAA,IAAI,CAAC9N,eAAe,CAAC,eAAe,CAAC,CAAA;EACrC8N,IAAAA,IAAI,CAAC9N,eAAe,CAAC,eAAe,CAAC,CAAA;EACrC8N,IAAAA,IAAI,CAAC9N,eAAe,CAAC,UAAU,CAAC,CAAA;EAGhC,IAAA,MAAMgP,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;MAClC,IAAI,CAACkB,MAAM,EAAE;EACX,MAAA,OAAA;EACF,KAAA;EAEAA,IAAAA,MAAM,CAAChP,eAAe,CAAC,MAAM,CAAC,CAAA;EAC9BgP,IAAAA,MAAM,CAAChP,eAAe,CAAC,iBAAiB,CAAC,CAAA;MACzCgP,MAAM,CAACxa,SAAS,CAACyL,MAAM,CAAC,IAAI,CAACgN,aAAa,CAAC,CAAA;EAC7C,GAAA;IASAK,UAAUA,CAACvQ,KAAK,EAAE;EAChB,IAAA,MAAMmS,WAAW,GAAG,IAAI,CAACV,aAAa,EAAE,CAAA;EACxC,IAAA,MAAMW,QAAQ,GAAGpS,KAAK,CAACqS,aAAa,CAAA;MAEpC,IAAI,CAACF,WAAW,IAAI,EAAEC,QAAQ,YAAYzH,iBAAiB,CAAC,EAAE;EAC5D,MAAA,OAAA;EACF,KAAA;MAEA3K,KAAK,CAACkF,cAAc,EAAE,CAAA;EAEtB,IAAA,IAAI,CAAC+L,OAAO,CAACkB,WAAW,CAAC,CAAA;EACzB,IAAA,IAAI,CAACf,OAAO,CAACgB,QAAQ,CAAC,CAAA;EACtB,IAAA,IAAI,CAACE,kBAAkB,CAACF,QAAQ,CAAC,CAAA;EACnC,GAAA;IAWAE,kBAAkBA,CAACvB,IAAI,EAAE;EACvB,IAAA,MAAMkB,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;MAClC,IAAI,CAACkB,MAAM,EAAE;EACX,MAAA,OAAA;EACF,KAAA;EAIA,IAAA,MAAMH,OAAO,GAAGG,MAAM,CAACjR,EAAE,CAAA;MACzBiR,MAAM,CAACjR,EAAE,GAAG,EAAE,CAAA;MACd,IAAI,CAACmP,YAAY,GAAG,IAAI,CAAA;EACxBzW,IAAAA,MAAM,CAAC4T,QAAQ,CAACiC,IAAI,GAAG,IAAI,CAACwC,OAAO,CAAChB,IAAI,CAAC,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAA;MAClDC,MAAM,CAACjR,EAAE,GAAG8Q,OAAO,CAAA;EACrB,GAAA;IAWAtB,YAAYA,CAACxQ,KAAK,EAAE;MAClB,QAAQA,KAAK,CAACiF,OAAO;EACnB,MAAA,KAAK,IAAI,CAAC4K,IAAI,CAACC,IAAI,CAAA;EACnB,MAAA,KAAK,IAAI,CAACD,IAAI,CAACG,EAAE;UACf,IAAI,CAACuC,mBAAmB,EAAE,CAAA;UAC1BvS,KAAK,CAACkF,cAAc,EAAE,CAAA;EACtB,QAAA,MAAA;EACF,MAAA,KAAK,IAAI,CAAC2K,IAAI,CAACE,KAAK,CAAA;EACpB,MAAA,KAAK,IAAI,CAACF,IAAI,CAACI,IAAI;UACjB,IAAI,CAACuC,eAAe,EAAE,CAAA;UACtBxS,KAAK,CAACkF,cAAc,EAAE,CAAA;EACtB,QAAA,MAAA;EACJ,KAAA;EACF,GAAA;EAOAsN,EAAAA,eAAeA,GAAG;EAChB,IAAA,MAAML,WAAW,GAAG,IAAI,CAACV,aAAa,EAAE,CAAA;EACxC,IAAA,IAAI,CAACU,WAAW,IAAI,CAACA,WAAW,CAACM,aAAa,EAAE;EAC9C,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,MAAMC,gBAAgB,GAAGP,WAAW,CAACM,aAAa,CAACE,kBAAkB,CAAA;MACrE,IAAI,CAACD,gBAAgB,EAAE;EACrB,MAAA,OAAA;EACF,KAAA;EAGA,IAAA,MAAMN,QAAQ,GAAGM,gBAAgB,CAACrS,aAAa,CAAC,mBAAmB,CAAC,CAAA;MACpE,IAAI,CAAC+R,QAAQ,EAAE;EACb,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,IAAI,CAACnB,OAAO,CAACkB,WAAW,CAAC,CAAA;EACzB,IAAA,IAAI,CAACf,OAAO,CAACgB,QAAQ,CAAC,CAAA;MACtBA,QAAQ,CAAC3H,KAAK,EAAE,CAAA;EAChB,IAAA,IAAI,CAAC6H,kBAAkB,CAACF,QAAQ,CAAC,CAAA;EACnC,GAAA;EAOAG,EAAAA,mBAAmBA,GAAG;EACpB,IAAA,MAAMJ,WAAW,GAAG,IAAI,CAACV,aAAa,EAAE,CAAA;EACxC,IAAA,IAAI,CAACU,WAAW,IAAI,CAACA,WAAW,CAACM,aAAa,EAAE;EAC9C,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,MAAMG,oBAAoB,GACxBT,WAAW,CAACM,aAAa,CAACI,sBAAsB,CAAA;MAClD,IAAI,CAACD,oBAAoB,EAAE;EACzB,MAAA,OAAA;EACF,KAAA;EAGA,IAAA,MAAMpB,YAAY,GAAGoB,oBAAoB,CAACvS,aAAa,CAAC,mBAAmB,CAAC,CAAA;MAC5E,IAAI,CAACmR,YAAY,EAAE;EACjB,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,IAAI,CAACP,OAAO,CAACkB,WAAW,CAAC,CAAA;EACzB,IAAA,IAAI,CAACf,OAAO,CAACI,YAAY,CAAC,CAAA;MAC1BA,YAAY,CAAC/G,KAAK,EAAE,CAAA;EACpB,IAAA,IAAI,CAAC6H,kBAAkB,CAACd,YAAY,CAAC,CAAA;EACvC,GAAA;IASAU,QAAQA,CAACnB,IAAI,EAAE;EACb,IAAA,OAAO,IAAI,CAAC3T,OAAO,CAACiD,aAAa,CAAC,IAAI,CAAC0R,OAAO,CAAChB,IAAI,CAAC,CAAC,CAAA;EACvD,GAAA;IAQAc,SAASA,CAACd,IAAI,EAAE;EACd,IAAA,MAAMkB,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;MAClC,IAAI,CAACkB,MAAM,EAAE;EACX,MAAA,OAAA;EACF,KAAA;MAEAA,MAAM,CAACxa,SAAS,CAACyL,MAAM,CAAC,IAAI,CAACgN,aAAa,CAAC,CAAA;EAC7C,GAAA;IAQAyB,SAASA,CAACZ,IAAI,EAAE;EACd,IAAA,MAAMkB,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACnB,IAAI,CAAC,CAAA;MAClC,IAAI,CAACkB,MAAM,EAAE;EACX,MAAA,OAAA;EACF,KAAA;MAEAA,MAAM,CAACxa,SAAS,CAACgI,GAAG,CAAC,IAAI,CAACyQ,aAAa,CAAC,CAAA;EAC1C,GAAA;IAQAwB,cAAcA,CAACX,IAAI,EAAE;EACnB,IAAA,IAAI,CAACA,IAAI,CAAC0B,aAAa,EAAE;EACvB,MAAA,OAAA;EACF,KAAA;EAEA1B,IAAAA,IAAI,CAACvR,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAA;MAC3CuR,IAAI,CAAC0B,aAAa,CAAChb,SAAS,CAACyL,MAAM,CAAC,iCAAiC,CAAC,CAAA;EACtE6N,IAAAA,IAAI,CAACvR,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;EACrC,GAAA;IAQAoS,YAAYA,CAACb,IAAI,EAAE;EACjB,IAAA,IAAI,CAACA,IAAI,CAAC0B,aAAa,EAAE;EACvB,MAAA,OAAA;EACF,KAAA;EAEA1B,IAAAA,IAAI,CAACvR,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;MAC1CuR,IAAI,CAAC0B,aAAa,CAAChb,SAAS,CAACgI,GAAG,CAAC,iCAAiC,CAAC,CAAA;EACnEsR,IAAAA,IAAI,CAACvR,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;EACpC,GAAA;EAQAiS,EAAAA,aAAaA,GAAG;EACd,IAAA,OAAO,IAAI,CAACrU,OAAO,CAACiD,aAAa,CAC/B,oDACF,CAAC,CAAA;EACH,GAAA;IAaA0R,OAAOA,CAAChB,IAAI,EAAE;EACZ,IAAA,MAAMjG,IAAI,GAAGiG,IAAI,CAACvN,YAAY,CAAC,MAAM,CAAC,CAAA;EACtC,IAAA,MAAM+L,IAAI,GAAGzE,IAAI,CAACkH,KAAK,CAAClH,IAAI,CAACM,OAAO,CAAC,GAAG,CAAC,EAAEN,IAAI,CAACnU,MAAM,CAAC,CAAA;EACvD,IAAA,OAAO4Y,IAAI,CAAA;EACb,GAAA;EAMF,CAAA;EAvhBaE,IAAI,CAshBR3L,UAAU,GAAG,YAAY;;EC7gBlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASgP,OAAOA,CAACjb,MAAM,EAAE;IACvBA,MAAM,GAAG,OAAOA,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAG,EAAE,CAAA;EAGpD,EAAA,IAAI,CAACR,WAAW,EAAE,EAAE;EAClBsE,IAAAA,OAAO,CAACoX,GAAG,CAAC,IAAI7Z,YAAY,EAAE,CAAC,CAAA;EAC/B,IAAA,OAAA;EACF,GAAA;EAEA,EAAA,MAAM8Z,UAAU,GAAyB,CACvC,CAAC7V,SAAS,EAAEtF,MAAM,CAACob,SAAS,CAAC,EAC7B,CAACrO,MAAM,EAAE/M,MAAM,CAACqb,MAAM,CAAC,EACvB,CAACxN,cAAc,EAAE7N,MAAM,CAACsb,cAAc,CAAC,EACvC,CAACnK,UAAU,CAAC,EACZ,CAACsB,YAAY,EAAEzS,MAAM,CAACub,YAAY,CAAC,EACnC,CAACnH,YAAY,EAAEpU,MAAM,CAACwb,YAAY,CAAC,EACnC,CAACrF,MAAM,CAAC,EACR,CAACW,kBAAkB,EAAE9W,MAAM,CAACyb,kBAAkB,CAAC,EAC/C,CAAC1E,MAAM,CAAC,EACR,CAACK,QAAQ,CAAC,EACV,CAACQ,IAAI,CAAC,CACN,CAAA;EAIF,EAAA,MAAMnY,MAAM,GAAGO,MAAM,CAAC0b,KAAK,YAAY5Z,WAAW,GAAG9B,MAAM,CAAC0b,KAAK,GAAGhc,QAAQ,CAAA;IAE5Eyb,UAAU,CAAC9S,OAAO,CAAC,CAAC,CAACsT,SAAS,EAAE3b,MAAM,CAAC,KAAK;MAC1C,MAAM4b,SAAS,GAAGnc,MAAM,CAACyH,gBAAgB,CACtC,CAAA,cAAA,EAAgByU,SAAS,CAAC1P,UAAW,CAAA,EAAA,CACxC,CAAC,CAAA;EAED2P,IAAAA,SAAS,CAACvT,OAAO,CAAEqF,QAAQ,IAAK;QAC9B,IAAI;EAEF,QAAA,UAAU,IAAIiO,SAAS,GACnB,IAAIA,SAAS,CAACjO,QAAQ,EAAE1N,MAAM,CAAC,GAC/B,IAAI2b,SAAS,CAACjO,QAAQ,CAAC,CAAA;SAC5B,CAAC,OAAOmO,KAAK,EAAE;EACd/X,QAAAA,OAAO,CAACoX,GAAG,CAACW,KAAK,CAAC,CAAA;EACpB,OAAA;EACF,KAAC,CAAC,CAAA;EACJ,GAAC,CAAC,CAAA;EACJ,CAAA;;EAoBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;;;;;;;;;;;;;;;;;;;"}