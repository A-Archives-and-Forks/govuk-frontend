{"version":3,"file":"password-input.mjs","sources":["../../../../src/govuk/components/password-input/password-input.mjs"],"sourcesContent":["import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  extractConfigByNamespace,\n  mergeConfigs,\n  validateConfig\n} from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Password input component\n *\n * @preserve\n */\nexport class PasswordInput extends GOVUKFrontendComponent {\n  /**\n   * @private\n   * @type {PasswordInputConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showHideButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $statusText = null\n\n  /**\n   * @param {Element} $module - HTML element to use for password input\n   * @param {PasswordInputConfig} [config] - Password input config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Password input',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$wrapper = $module\n    this.$input = $module.querySelector('input')\n\n    if (!(this.$input instanceof HTMLInputElement)) {\n      throw new ElementError({\n        componentName: 'Password input',\n        element: this.$input,\n        expectedType: 'HTMLInputElement',\n        identifier: 'Form field (`.govuk-password-input`)'\n      })\n    }\n\n    this.config = mergeConfigs(\n      PasswordInput.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    // Check for valid config\n    const errors = validateConfig(PasswordInput.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(`Password input: ${errors[0]}`)\n    }\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'), {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue($module, 'lang')\n    })\n\n    // Create and append the button element\n    this.$showHideButton = document.createElement('button')\n    this.$showHideButton.className =\n      'govuk-button govuk-button--secondary govuk-password-input__toggle'\n    this.$showHideButton.setAttribute('aria-controls', this.$input.id)\n    this.$showHideButton.setAttribute('type', 'button')\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      this.i18n.t('showPasswordAriaLabel')\n    )\n    this.$showHideButton.innerHTML = this.i18n.t('showPassword')\n    this.$wrapper.insertBefore(this.$showHideButton, this.$input.nextSibling)\n\n    // Create and append the status text for screen readers\n    this.$statusText = document.createElement('span')\n    this.$statusText.className = 'govuk-visually-hidden'\n    this.$statusText.innerText = this.i18n.t('passwordHiddenAnnouncement')\n    this.$statusText.setAttribute('aria-live', 'polite')\n    this.$wrapper.insertBefore(this.$statusText, this.$input.nextSibling)\n\n    // Bind toggle button\n    this.$showHideButton.addEventListener(\n      'click',\n      this.togglePassword.bind(this)\n    )\n\n    // Bind form submit check, unless it's been disabled\n    if (this.$input.form && !this.config.disableFormSubmitCheck) {\n      this.$input.form.addEventListener('submit', () =>\n        this.revertToPasswordOnFormSubmit()\n      )\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event -\n   */\n  togglePassword(event) {\n    event.preventDefault()\n\n    if (!this.$showHideButton || !this.$statusText) {\n      return\n    }\n\n    this.$input.setAttribute(\n      'type',\n      this.$input.type === 'password' ? 'text' : 'password'\n    )\n    const passwordIsHidden = this.$input.type === 'password'\n    this.$showHideButton.innerHTML = passwordIsHidden\n      ? this.i18n.t('showPassword')\n      : this.i18n.t('hidePassword')\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      passwordIsHidden\n        ? this.i18n.t('showPasswordAriaLabel')\n        : this.i18n.t('hidePasswordAriaLabel')\n    )\n    this.$statusText.innerText = passwordIsHidden\n      ? this.i18n.t('passwordHiddenAnnouncement')\n      : this.i18n.t('passwordShownAnnouncement')\n  }\n\n  /**\n   * Revert the input to type=password when the form is submitted. This prevents\n   * user agents potentially saving or caching the plain text password.\n   */\n  revertToPasswordOnFormSubmit() {\n    if (!this.$showHideButton || !this.$statusText) {\n      return\n    }\n\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      this.i18n.t('showPasswordAriaLabel')\n    )\n    this.$showHideButton.innerHTML = this.i18n.t('showPassword')\n    this.$statusText.innerText = this.i18n.t('passwordHiddenAnnouncement')\n    this.$input.setAttribute('type', 'password')\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-password-input'\n\n  /**\n   * Password input default config\n   *\n   * @see {@link PasswordInputConfig}\n   * @constant\n   * @default\n   * @type {PasswordInputConfig}\n   */\n  static defaults = Object.freeze({\n    disableFormSubmitCheck: false,\n    i18n: {\n      showPassword: 'Show',\n      hidePassword: 'Hide',\n      showPasswordAriaLabel: 'Show password',\n      hidePasswordAriaLabel: 'Hide password',\n      passwordShownAnnouncement: 'Your password is visible',\n      passwordHiddenAnnouncement: 'Your password is hidden'\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({})\n}\n\n/**\n * Password input config\n *\n * @typedef {object} PasswordInputConfig\n * @property {boolean} [disableFormSubmitCheck=false] - If set to `true` the\n *   password input will not automatically change back to the `password` type\n *   upon submission of the parent form.\n * @property {PasswordInputTranslations} [i18n=PasswordInput.defaults.i18n] - Password input translations\n */\n\n/**\n * Password input translations\n *\n * @see {@link PasswordInput.defaults.i18n}\n * @typedef {object} PasswordInputTranslations\n *\n * Messages displayed to the user indicating the state of the show/hide toggle.\n * @property {string} [showPassword] - Visible text of the button when the\n *   password is currently hidden. HTML is acceptable.\n * @property {string} [hidePassword] - Visible text of the button when the\n *   password is currently visible. HTML is acceptable.\n * @property {string} [showPasswordAriaLabel] - aria-label of the button when\n *   the password is currently hidden. Plain text only.\n * @property {string} [hidePasswordAriaLabel] - aria-label of the button when\n *   the password is currently visible. Plain text only.\n * @property {string} [passwordShownAnnouncement] - Screen reader\n *   announcement to make when the password has just become visible.\n *   Plain text only.\n * @property {string} [passwordHiddenAnnouncement] - Screen reader\n *   announcement to make when the password has just been hidden.\n *   Plain text only.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n */\n"],"names":["PasswordInput","GOVUKFrontendComponent","constructor","$module","config","$showHideButton","$statusText","HTMLElement","ElementError","componentName","element","identifier","$wrapper","$input","querySelector","HTMLInputElement","expectedType","mergeConfigs","defaults","normaliseDataset","dataset","errors","validateConfig","schema","ConfigError","i18n","I18n","extractConfigByNamespace","locale","closestAttributeValue","document","createElement","className","setAttribute","id","t","innerHTML","insertBefore","nextSibling","innerText","addEventListener","togglePassword","bind","form","disableFormSubmitCheck","revertToPasswordOnFormSubmit","event","preventDefault","type","passwordIsHidden","moduleName","Object","freeze","showPassword","hidePassword","showPasswordAriaLabel","hidePasswordAriaLabel","passwordShownAnnouncement","passwordHiddenAnnouncement"],"mappings":"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"}