{"version":3,"file":"accordion.bundle.js","sources":["../../../../src/govuk/common/index.mjs","../../../../src/govuk/common/normalise-dataset.mjs","../../../../src/govuk/errors/index.mjs","../../../../src/govuk/govuk-frontend-component.mjs","../../../../src/govuk/i18n.mjs","../../../../src/govuk/components/accordion/accordion.mjs"],"sourcesContent":["/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Config flattening function\n *\n * Takes any number of objects, flattens them into namespaced key-value pairs,\n * (e.g. \\{'i18n.showSection': 'Show section'\\}) and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @returns {{ [key: string]: unknown }} A flattened object of key-value pairs.\n */\nexport function mergeConfigs(/* configObject1, configObject2, ...configObjects */) {\n  /**\n   * Function to take nested objects and flatten them to a dot-separated keyed\n   * object. Doing this means we don't need to do any deep/recursive merging of\n   * each of our objects, nor transform our dataset from a flat list into a\n   * nested object.\n   *\n   * @internal\n   * @param {{ [key: string]: unknown }} configObject - Deeply nested object\n   * @returns {{ [key: string]: unknown }} Flattened object with dot-separated keys\n   */\n  const flattenObject = function (configObject) {\n    // Prepare an empty return object\n    /** @type {{ [key: string]: unknown }} */\n    const flattenedObject = {}\n\n    /**\n     * Our flattening function, this is called recursively for each level of\n     * depth in the object. At each level we prepend the previous level names to\n     * the key using `prefix`.\n     *\n     * @internal\n     * @param {Partial<{ [key: string]: unknown }>} obj - Object to flatten\n     * @param {string} [prefix] - Optional dot-separated prefix\n     */\n    const flattenLoop = function (obj, prefix) {\n      // Loop through keys...\n      for (const key in obj) {\n        // Check to see if this is a prototypical key/value,\n        // if it is, skip it.\n        if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n          continue\n        }\n        const value = obj[key]\n        const prefixedKey = prefix ? `${prefix}.${key}` : key\n        if (typeof value === 'object') {\n          // If the value is a nested object, recurse over that too\n          flattenLoop(value, prefixedKey)\n        } else {\n          // Otherwise, add this value to our return object\n          flattenedObject[prefixedKey] = value\n        }\n      }\n    }\n\n    // Kick off the recursive loop\n    flattenLoop(configObject)\n    return flattenedObject\n  }\n\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the remaining passed objects and push their keys\n  // one-by-one into configObject. Any duplicate keys will override the existing\n  // key with the new value.\n  for (let i = 0; i < arguments.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- Ignore mismatch between arguments types\n    const obj = flattenObject(arguments[i])\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        formattedConfigObject[key] = obj[key]\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from a flattened config\n * object, removing the namespace in the process.\n *\n * @internal\n * @param {{ [key: string]: unknown }} configObject - The object to extract key-value pairs from.\n * @param {string} namespace - The namespace to filter keys with.\n * @returns {{ [key: string]: unknown }} Flattened object with dot-separated key namespace removed\n * @throws {Error} Config object required\n * @throws {Error} Namespace string required\n */\nexport function extractConfigByNamespace(configObject, namespace) {\n  // Check we have what we need\n  if (!configObject || typeof configObject !== 'object') {\n    throw new Error('Provide a `configObject` of type \"object\".')\n  }\n\n  if (!namespace || typeof namespace !== 'string') {\n    throw new Error(\n      'Provide a `namespace` of type \"string\" to filter the `configObject` by.'\n    )\n  }\n\n  /** @type {{ [key: string]: unknown }} */\n  const newObject = {}\n\n  for (const key in configObject) {\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n    // Check if the first namespace matches the configured namespace\n    if (\n      Object.prototype.hasOwnProperty.call(configObject, key) &&\n      keyParts[0] === namespace\n    ) {\n      // Remove the first item (the namespace) from the parts array,\n      // but only if there is more than one part (we don't want blank keys!)\n      if (keyParts.length > 1) {\n        keyParts.shift()\n      }\n      // Join the remaining parts back together\n      const newKey = keyParts.join('.')\n      // Add them to our new object\n      newObject[newKey] = configObject[key]\n    }\n  }\n  return newObject\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @internal\n * @param {HTMLElement} [$scope] - The `<body>` element of the document to check for support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Validate component config by schema\n *\n * @internal\n * @param {Schema} schema - Config schema\n * @param {Config[ConfigKey]} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    for (const { required, errorMessage } of conditions) {\n      if (!required.every((key) => !!config[key])) {\n        errors.push(errorMessage) // Missing config key value\n      }\n    }\n\n    // Check one condition passes or add errors\n    if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n      validationErrors.push(...errors)\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {SchemaCondition[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema condition for component config\n *\n * @typedef {object} SchemaCondition\n * @property {string[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @typedef {import('govuk-frontend').Config} Config - Config for all components via `initAll()`\n * @typedef {import('govuk-frontend').ConfigKey} ConfigKey - Component config keys, e.g. `accordion` and `characterCount`\n */\n","/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {string} value - The value to normalise\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value) {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const trimmedValue = value.trim()\n\n  if (trimmedValue === 'true') {\n    return true\n  }\n\n  if (trimmedValue === 'false') {\n    return false\n  }\n\n  // Empty / whitespace-only strings are considered finite so we need to check\n  // the length of the trimmed string as well\n  if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n    return Number(trimmedValue)\n  }\n\n  return value\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using normaliseData function\n *\n * @internal\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {{ [key: string]: unknown }} Normalised dataset\n */\nexport function normaliseDataset(dataset) {\n  /** @type {{ [key: string]: unknown }} */\n  const out = {}\n\n  for (const key in dataset) {\n    out[key] = normaliseString(dataset[key])\n  }\n\n  return out\n}\n","/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @abstract\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  // eslint-disable-next-line jsdoc/require-jsdoc -- Nothing pertinent to document\n  constructor() {\n    super('GOV.UK Frontend is not supported in this browser')\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @param {Element | null} element - The element in error\n   * @param {object} options - Element error options\n   * @param {string} options.componentName - The name of the component throwing the error\n   * @param {string} options.identifier - An identifier that'll let the user understand which element has an error (variable name, CSS selector)\n   * @param {string | typeof HTMLElement} [options.expectedType] - The type that was expected for the identifier\n   */\n  constructor(element, { componentName, identifier, expectedType }) {\n    let reason = `${identifier} not found`\n\n    // Otherwise check for type mismatch\n    if (element) {\n      expectedType = expectedType || window.HTMLElement\n\n      reason =\n        typeof expectedType === 'string'\n          ? `${identifier} is not of type ${expectedType}`\n          : `${identifier} is not an instance of ${expectedType.name}`\n    }\n\n    super(`${componentName}: ${reason}`)\n  }\n}\n","import { isSupported } from './common/index.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @internal\n * @abstract\n */\nexport class GOVUKFrontendComponent {\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   */\n  constructor() {\n    this.checkSupport()\n  }\n\n  /**\n   * Validates whether GOV.UK Frontend is supported\n   *\n   * @private\n   */\n  checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n","/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: unknown }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations, config) {\n    // Make list of translations available throughout function\n    this.translations = translations || {}\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale =\n      (config && config.locale) || document.documentElement.lang || 'en'\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (options && typeof options.count === 'number') {\n      // Get the plural suffix\n      lookupKey = `${lookupKey}.${this.getPluralSuffix(\n        lookupKey,\n        options.count\n      )}`\n    }\n\n    // Fetch the translation string for that lookup key\n    const translationString = this.translations[lookupKey]\n\n    if (typeof translationString === 'string') {\n      // Check for ${} placeholders in the translation string\n      if (translationString.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translationString, options)\n      } else {\n        return translationString\n      }\n    } else {\n      // If the key wasn't found in our translations object,\n      // return the lookup key itself as the fallback\n      return lookupKey\n    }\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    /** @type {Intl.NumberFormat | undefined} */\n    let formatter\n\n    if (this.hasIntlNumberFormatSupport()) {\n      formatter = new Intl.NumberFormat(this.locale)\n    }\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        } else {\n          throw new Error(\n            `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n          )\n        }\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl and Intl.PluralRules.\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The browser supports the Intl class (true in IE11)\n   * - The implementation of Intl supports PluralRules (NOT true in IE11)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      window.Intl &&\n        'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl and Intl.NumberFormat.\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The browser supports the Intl class (true in IE11)\n   * - The implementation of Intl supports NumberFormat (also true in IE11)\n   * - The browser/OS has number formatting rules for the current locale (browser dependent)\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlNumberFormatSupport() {\n    return Boolean(\n      window.Intl &&\n        'NumberFormat' in window.Intl &&\n        Intl.NumberFormat.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form â€“ if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    let preferredForm\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    if (this.hasIntlPluralRulesSupport()) {\n      preferredForm = new Intl.PluralRules(this.locale).select(count)\n    } else {\n      preferredForm = this.selectPluralFormUsingFallbackRules(count)\n    }\n\n    // Use the correct plural form if provided\n    if (`${lookupKey}.${preferredForm}` in this.translations) {\n      return preferredForm\n      // Fall back to `other` if the plural form is missing, but log a warning\n      // to the console\n    } else if (`${lookupKey}.other` in this.translations) {\n      if (console && 'warn' in console) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n      }\n\n      return 'other'\n      // If the required `other` plural form is missing, all we can do is error\n    } else {\n      throw new Error(\n        `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n      )\n    }\n  }\n\n  /**\n   * Get the plural form using our fallback implementation\n   *\n   * This is split out into a separate function to make it easier to test the\n   * fallback behaviour in an environment where Intl.PluralRules exists.\n   *\n   * @internal\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The pluralisation form for count in this locale.\n   */\n  selectPluralFormUsingFallbackRules(count) {\n    // Currently our custom code can only handle positive integers, so let's\n    // make sure our number is one of those.\n    count = Math.abs(Math.floor(count))\n\n    const ruleset = this.getPluralRulesForLocale()\n\n    if (ruleset) {\n      return I18n.pluralRules[ruleset](count)\n    }\n\n    return 'other'\n  }\n\n  /**\n   * Work out which pluralisation rules to use for the current locale\n   *\n   * The locale may include a regional indicator (such as en-GB), but we don't\n   * usually care about this part, as pluralisation rules are usually the same\n   * regardless of region. There are exceptions, however, (e.g. Portuguese) so\n   * this searches by both the full and shortened locale codes, just to be sure.\n   *\n   * @internal\n   * @returns {string | undefined} The name of the pluralisation rule to use (a key for one\n   *   of the functions in this.pluralRules)\n   */\n  getPluralRulesForLocale() {\n    const locale = this.locale\n    const localeShort = locale.split('-')[0]\n\n    // Look through the plural rules map to find which `pluralRule` is\n    // appropriate for our current `locale`.\n    for (const pluralRule in I18n.pluralRulesMap) {\n      if (\n        Object.prototype.hasOwnProperty.call(I18n.pluralRulesMap, pluralRule)\n      ) {\n        const languages = I18n.pluralRulesMap[pluralRule]\n        for (let i = 0; i < languages.length; i++) {\n          if (languages[i] === locale || languages[i] === localeShort) {\n            return pluralRule\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Map of plural rules to languages where those rules apply.\n   *\n   * Note: These groups are named for the most dominant or recognisable language\n   * that uses each system. The groupings do not imply that the languages are\n   * related to one another. Many languages have evolved the same systems\n   * independently of one another.\n   *\n   * Code to support more languages can be found in the i18n spike:\n   * {@link https://github.com/alphagov/govuk-frontend/blob/spike-i18n-support/src/govuk/i18n.mjs}\n   *\n   * Languages currently supported:\n   *\n   * Arabic: Arabic (ar)\n   * Chinese: Burmese (my), Chinese (zh), Indonesian (id), Japanese (ja),\n   *   Javanese (jv), Korean (ko), Malay (ms), Thai (th), Vietnamese (vi)\n   * French: Armenian (hy), Bangla (bn), French (fr), Gujarati (gu), Hindi (hi),\n   *   Persian Farsi (fa), Punjabi (pa), Zulu (zu)\n   * German: Afrikaans (af), Albanian (sq), Azerbaijani (az), Basque (eu),\n   *   Bulgarian (bg), Catalan (ca), Danish (da), Dutch (nl), English (en),\n   *   Estonian (et), Finnish (fi), Georgian (ka), German (de), Greek (el),\n   *   Hungarian (hu), Luxembourgish (lb), Norwegian (no), Somali (so),\n   *   Swahili (sw), Swedish (sv), Tamil (ta), Telugu (te), Turkish (tr),\n   *   Urdu (ur)\n   * Irish: Irish Gaelic (ga)\n   * Russian: Russian (ru), Ukrainian (uk)\n   * Scottish: Scottish Gaelic (gd)\n   * Spanish: European Portuguese (pt-PT), Italian (it), Spanish (es)\n   * Welsh: Welsh (cy)\n   *\n   * @internal\n   * @type {{ [key: string]: string[] }}\n   */\n  static pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: [\n      'af',\n      'sq',\n      'az',\n      'eu',\n      'bg',\n      'ca',\n      'da',\n      'nl',\n      'en',\n      'et',\n      'fi',\n      'ka',\n      'de',\n      'el',\n      'hu',\n      'lb',\n      'no',\n      'so',\n      'sw',\n      'sv',\n      'ta',\n      'te',\n      'tr',\n      'ur'\n    ],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  }\n\n  /**\n   * Different pluralisation rule sets\n   *\n   * Returns the appropriate suffix for the plural form associated with `n`.\n   * Possible suffixes: 'zero', 'one', 'two', 'few', 'many', 'other' (the actual\n   * meaning of each differs per locale). 'other' should always exist, even in\n   * languages without plurals, such as Chinese.\n   * {@link https://cldr.unicode.org/index/cldr-spec/plural-rules}\n   *\n   * The count must be a positive integer. Negative numbers and decimals aren't accounted for\n   *\n   * @internal\n   * @type {{ [key: string]: (count: number) => PluralRule }}\n   */\n  static pluralRules = {\n    /* eslint-disable jsdoc/require-jsdoc */\n    arabic(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n % 100 >= 3 && n % 100 <= 10) {\n        return 'few'\n      }\n      if (n % 100 >= 11 && n % 100 <= 99) {\n        return 'many'\n      }\n      return 'other'\n    },\n    chinese() {\n      return 'other'\n    },\n    french(n) {\n      return n === 0 || n === 1 ? 'one' : 'other'\n    },\n    german(n) {\n      return n === 1 ? 'one' : 'other'\n    },\n    irish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n >= 3 && n <= 6) {\n        return 'few'\n      }\n      if (n >= 7 && n <= 10) {\n        return 'many'\n      }\n      return 'other'\n    },\n    russian(n) {\n      const lastTwo = n % 100\n      const last = lastTwo % 10\n      if (last === 1 && lastTwo !== 11) {\n        return 'one'\n      }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n        return 'few'\n      }\n      if (\n        last === 0 ||\n        (last >= 5 && last <= 9) ||\n        (lastTwo >= 11 && lastTwo <= 14)\n      ) {\n        return 'many'\n      }\n      // Note: The 'other' suffix is only used by decimal numbers in Russian.\n      // We don't anticipate it being used, but it's here for consistency.\n      return 'other'\n    },\n    scottish(n) {\n      if (n === 1 || n === 11) {\n        return 'one'\n      }\n      if (n === 2 || n === 12) {\n        return 'two'\n      }\n      if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) {\n        return 'few'\n      }\n      return 'other'\n    },\n    spanish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n % 1000000 === 0 && n !== 0) {\n        return 'many'\n      }\n      return 'other'\n    },\n    welsh(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n === 3) {\n        return 'few'\n      }\n      if (n === 6) {\n        return 'many'\n      }\n      return 'other'\n    }\n    /* eslint-enable jsdoc/require-jsdoc */\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n */\nexport class Accordion extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /** @private */\n  browserSupportsSessionStorage = false\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($module, config) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError($module, {\n        componentName: 'Accordion',\n        identifier: '$module'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config || {},\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      return this\n    }\n\n    this.$sections = $sections\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    // Loop through sections\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        return\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections to\n      // open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$span || !$heading) {\n      return\n    }\n\n    // Create a button element that will replace the '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$module.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n    for (let i = 0; i < $span.attributes.length; i++) {\n      const attr = $span.attributes.item(i)\n      // Add all attributes but not ID as this is being added to\n      // the section heading ($headingText)\n      if (attr.nodeName !== 'id') {\n        $button.setAttribute(attr.nodeName, attr.nodeValue)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by `aria-labelledby` on the\n    // hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $headingTextFocus.innerHTML = $span.innerHTML\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading\n    // For the snippet to work with JavaScript, it must be added before adding the page element to the\n    // page's DOM. See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the original `div` to the\n      // new `span`\n      // This is because the summary line text is now inside a button element, which can only contain\n      // phrasing content\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (let j = 0, l = $summary.attributes.length; j < l; ++j) {\n        const nodeName = $summary.attributes.item(j).nodeName\n        const nodeValue = $summary.attributes.item(j).nodeValue\n        $summarySpan.setAttribute(nodeName, nodeValue)\n      }\n\n      // Copy original contents of summary to the new summary span\n      $summarySpanFocus.innerHTML = $summary.innerHTML\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.parentNode.replaceChild($summarySpan, $summary)\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const expanded = this.isExpanded($section)\n    this.setExpanded(!expanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.checkIfAllSectionsOpen()\n\n    // Loop through sections\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      // Store the state in sessionStorage when a change is triggered\n      this.storeState($section)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (\n      !$showHideIcon ||\n      !($showHideText instanceof HTMLElement) ||\n      !$button ||\n      !$content\n    ) {\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText instanceof HTMLElement) {\n      ariaLabelParts.push($headingText.textContent.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary instanceof HTMLElement) {\n      ariaLabelParts.push($summary.textContent.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  checkIfAllSectionsOpen() {\n    // Get a count of all the Accordion sections\n    const sectionsCount = this.$sections.length\n    // Get a count of all Accordion sections that are expanded\n    const expandedSectionCount = this.$module.querySelectorAll(\n      `.${this.sectionExpandedClass}`\n    ).length\n    const areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n    return areAllSectionsOpen\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    const newButtonText = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = newButtonText\n\n    // Swap icon, toggle class\n    if (expanded) {\n      this.$showAllIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      this.$showAllIcon.classList.add(this.downChevronIconClass)\n    }\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  storeState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      // We need a unique way of identifying each content in the Accordion. Since\n      // an `#id` should be unique and an `id` is required for `aria-` attributes\n      // `id` can be safely used.\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = $button.getAttribute('aria-expanded')\n\n        // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState)\n        }\n      }\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = contentId\n          ? window.sessionStorage.getItem(contentId)\n          : null\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by dividing its contents\n   * into thematic chunks.\n   * See https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.innerHTML = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @default\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n}\n\nconst helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    const testString = 'this is the test string'\n    let result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result =\n        window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n"],"names":["mergeConfigs","flattenObject","configObject","flattenedObject","flattenLoop","obj","prefix","key","Object","prototype","hasOwnProperty","call","value","prefixedKey","formattedConfigObject","i","arguments","length","extractConfigByNamespace","namespace","Error","newObject","keyParts","split","shift","newKey","join","isSupported","$scope","document","body","classList","contains","normaliseString","trimmedValue","trim","isFinite","Number","normaliseDataset","dataset","out","GOVUKFrontendError","constructor","args","name","SupportError","ElementError","element","componentName","identifier","expectedType","reason","window","HTMLElement","GOVUKFrontendComponent","checkSupport","I18n","translations","config","locale","documentElement","lang","t","lookupKey","options","count","getPluralSuffix","translationString","match","replacePlaceholders","formatter","hasIntlNumberFormatSupport","Intl","NumberFormat","replace","placeholderWithBraces","placeholderKey","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","PluralRules","supportedLocalesOf","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","languages","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","n","lastTwo","last","Accordion","$module","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","browserSupportsSessionStorage","$showAllButton","$showAllIcon","$showAllText","defaults","querySelectorAll","helper","checkForSessionStorage","initControls","initSectionHeaders","areAllSectionsOpen","checkIfAllSectionsOpen","updateShowAllButton","createElement","setAttribute","add","appendChild","$accordionControls","insertBefore","firstChild","addEventListener","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","index","$span","$heading","$summary","$button","id","attributes","attr","item","nodeName","nodeValue","$headingText","$headingTextFocus","innerHTML","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","j","l","parentNode","replaceChild","removeChild","$fragment","target","Element","closest","expanded","storeState","nowExpanded","$content","newButtonText","textContent","ariaLabelParts","push","ariaLabelMessage","removeAttribute","remove","sectionsCount","expandedSectionCount","toString","rememberExpanded","contentId","getAttribute","contentState","sessionStorage","setItem","getItem","$punctuationEl","moduleName","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","testString","result","removeItem","exception"],"mappings":"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"}